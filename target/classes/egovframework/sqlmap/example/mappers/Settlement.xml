<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.settlement.service.impl.SettlementMapper">

	<resultMap id="settlement" type="egovframework.example.settlement.service.SettlementVO">
		<result property="rownum" column="rownum"/>
		<result property="no" column="no"/>
		<result property="daoutrx" column="daoutrx"/>
		<result property="store_id" column="store_id"/>
		<result property="auth_id" column="auth_id"/>
		<result property="userid" column="userid"/>
		<result property="orderno" column="orderno"/>
		<result property="username" column="username"/>
		<result property="productname" column="productname"/>
		<result property="amount" column="amount"/>
		<result property="vat" column="vat"/>
		<result property="vat2" column="vat2"/>
		<result property="vat3" column="vat3"/>
		<result property="hold" column="hold"/>
		<result property="authdate" column="authdate"/>
		<result property="canceldate" column="canceldate"/>
		<result property="start_date" column="start_date"/>
		<result property="end_date" column="end_date"/>
		<result property="start_end_date" column="start_end_date"/>
		<result property="cardname" column="cardname"/>
		<result property="cardcode" column="cardcode"/>
		<result property="cardno" column="cardno"/>
		<result property="quota" column="quota"/>
		<result property="terminal_id" column="terminal_id"/>
		<result property="terminalid" column="terminalid"/>
		<result property="imei" column="imei"/>
		<result property="franchisee_commission" column="franchisee_commission"/>
		<result property="commission" column="commission"/>
		<result property="commission2" column="commission2"/>
		<result property="commission3" column="commission3"/>
		<result property="commission_total" column="commission_total"/>
		<result property="commission_total2" column="commission_total2"/>
		<result property="commission_total3" column="commission_total3"/>
		<result property="commission_total4" column="commission_total4"/>
		<result property="business_nm" column="business_nm"/>
		<result property="business_nm2" column="business_nm2"/>
		<result property="business_nm3" column="business_nm3"/>
		<result property="tax" column="tax"/>
		<result property="amount2" column="amount2"/>
		<result property="bank_nm" column="bank_nm"/>
		<result property="period" column="period"/>
		<result property="state" column="state"/>
		<result property="canceltype" column="canceltype"/>
		<result property="ym" column="ym"/>
		<result property="sun" column="sun"/>
		<result property="mon" column="mon"/>
		<result property="tue" column="tue"/>
		<result property="wed" column="wed"/>
		<result property="thu" column="thu"/>
		<result property="fri" column="fri"/>
		<result property="sat" column="sat"/>
		<result property="cpid" column="cpid"/>
		<result property="no_cpid" column="no_cpid"/>
		<result property="cp_type" column="cp_type"/>
		<result property="search_id" column="search_id"/>
		<result property="tocnt" column="tocnt"/>
		<result property="amount_sum" column="amount_sum"/>
		<result property="period_date" column="period_date"/>
		<result property="period_date2" column="period_date2"/>
		<result property="period_date3" column="period_date3"/>
		<result property="settlement" column="settlement"/>
		<result property="settlement2" column="settlement2"/>
		<result property="settlement3" column="settlement3"/>
		<result property="commission_cost" column="commission_cost"/>
		<result property="total_cnt" column="total_cnt"/>
		<result property="total_approval" column="total_approval"/>
		<result property="total_cancel_sum" column="total_cancel_sum"/>
		<result property="total_approval_cnt" column="total_approval_cnt"/>
		<result property="total_cancel_cnt" column="total_cancel_cnt"/>
		<result property="total_settlement" column="total_settlement"/>
		<result property="total_settlement2" column="total_settlement2"/>
		<result property="total_settlement3" column="total_settlement3"/>
		<result property="total_settlement_sum" column="total_settlement_sum"/>
		<result property="total_vat" column="total_vat"/>
		<result property="total_vat2" column="total_vat2"/>
		<result property="total_vat3" column="total_vat3"/>
		<result property="total_amount" column="total_amount"/>
		<result property="total_amount2" column="total_amount2"/>
		<result property="total_amount3" column="total_amount3"/>
		<result property="d_amount" column="d_amount"/>
		<result property="d_cancel_sum" column="d_cancel_sum"/>
		<result property="d_total_cnt" column="d_total_cnt"/>
		<result property="d_approval_cnt" column="d_approval_cnt"/>
		<result property="d_cancel_cnt" column="d_cancel_cnt"/>
		<result property="settlement_type" column="settlement_type"/>
		<result property="total_cancel_store_cnt" column="total_cancel_store_cnt"/>
		<result property="seqno" column="seqno"/>
		<result property="total_amount_commission" column="total_amount_commission"/>
		<result property="total_cencel_cnt" column="total_cencel_cnt"/>
		<result property="total_cencel_amount_commission" column="total_cencel_amount_commission"/>
		<result property="total_settlement_commission" column="total_settlement_commission"/>
		<result property="total_vat_commission" column="total_vat_commission"/>
		<result property="branch_store_id" column="branch_store_id"/>
		<result property="manage_store_id" column="manage_store_id"/>
		<result property="total_store_cnt" column="total_store_cnt"/>
		<result property="tax_state" column="tax_state"/>
	</resultMap>
	
	<select id="selectCalendarList" parameterType="searchSettlementVO" resultMap="settlement">
	<![CDATA[
	SELECT ym
	     , MIN(CASE dw WHEN 1 THEN d END) sun
	     , MIN(CASE dw WHEN 2 THEN d END) mon
	     , MIN(CASE dw WHEN 3 THEN d END) tue
	     , MIN(CASE dw WHEN 4 THEN d END) wed
	     , MIN(CASE dw WHEN 5 THEN d END) thu
	     , MIN(CASE dw WHEN 6 THEN d END) fri
	     , MIN(CASE dw WHEN 7 THEN d END) sat
	  FROM (SELECT date_format(dt,'%Y%m') ym
	             , Week(dt) w
	             , Day(dt) d
	             , DayofWeek(dt) dw
	          FROM (SELECT CONCAT(y, '0101') + INTERVAL a*100 + b*10 + c DAY dt
	                  FROM (SELECT 0 a
	                        UNION ALL SELECT 1
	                        UNION ALL SELECT 2
	                        UNION ALL SELECT 3
	                        ) a
	                     , (SELECT 0 b
	                        UNION ALL SELECT 1
	                        UNION ALL SELECT 2
	                        UNION ALL SELECT 3
	                        UNION ALL SELECT 4
	                        UNION ALL SELECT 5
	                        UNION ALL SELECT 6
	                        UNION ALL SELECT 7
	                        UNION ALL SELECT 8
	                        UNION ALL SELECT 9
	                        ) b
	                     , (SELECT 0 c
	                        UNION ALL SELECT 1
	                        UNION ALL SELECT 2
	                        UNION ALL SELECT 3
	                        UNION ALL SELECT 4
	                        UNION ALL SELECT 5
	                        UNION ALL SELECT 6
	                        UNION ALL SELECT 7
	                        UNION ALL SELECT 8
	                        UNION ALL SELECT 9
	                        ) c
	                     , (SELECT #{yyyy} y) d
	                 WHERE a*100 + b*10 + c < DayOfYear(CONCAT(y, '1231'))
	                ) a
	        ) a
	 where ym = #{ym}    
	 GROUP BY ym, w
	 ]]>
	</select>
	
	<select id="storeidSearch" parameterType="searchSettlementVO" resultMap="settlement">
	<![CDATA[
	  select concat(a.store_id,'(', a.business_nm,')') business_nm
	    from tb_store a
	   inner join tb_store_role b
	      on a.store_id = b.store_id 
	     and b.role_id = '1004'
	   where a.store_id = #{store_id}
	 ]]>
	</select>
		
	<select id="selectCalendarData" parameterType="searchSettlementVO" resultMap="settlement">
	<![CDATA[
					   select a.authdate,
							  a.store_id,
							  a.cpid,
							  a.period,
							  a.period_date,
							  a.business_nm,
							  format(ifnull(a.amount, 0), 0) amount,
							  format(ifnull(a.commission, 0), 0) commission,
							  format(ifnull(a.commission2, 0), 0) commission2,
							  format(ifnull(a.commission3, 0), 0) commission3,
							  format(ifnull(a.vat, 0), 0) vat,
							  format(ifnull(a.vat2, 0), 0) vat2,
							  format(ifnull(a.vat3, 0), 0) vat3,
							  format(ifnull(a.settlement, 0), 0) settlement,
							  format(ifnull(a.settlement2, 0), 0) settlement2,
							  format(ifnull(a.settlement3, 0), 0) settlement3
						 from (
							  select a.authdate,
									 b.store_id,
									 a.cpid,
									 b.period,
									 case when DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%d') < 10 then substring(DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%d'), 2, 1)
                                     else DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%d')
                                     end period_date,
									 b.business_nm,
									 b.business_nm2,
									 b.business_nm3,
									 a.amount,
									 cast((a.amount * cast((b.commission / 100 ) as float)) as int) as commission,
									 cast((a.amount * cast((b.commission / 100 ) / 1.1 as float)) as int) as vat,
									 a.amount - cast((a.amount * cast((b.commission / 100 ) as float)) as int) as settlement, 
									 cast((a.amount * cast((b.commission2 / 100 ) as float)) as int) as commission2,
									 cast((a.amount * cast((b.commission2 / 100 ) / 1.1 as float)) as int) as vat2,
									 a.amount - cast((a.amount * cast((b.commission2 / 100 ) as float)) as int) as settlement2, 
									 cast((a.amount * cast((b.commission3 / 100 ) as float)) as int) as commission3,
									 cast((a.amount * cast((b.commission3 / 100 ) / 1.1 as float)) as int) as vat3,
									 a.amount - cast((a.amount * cast((b.commission3 / 100 ) as float)) as int) as settlement3 
								from (
									 select date(a.authdate) as authdate,
											sum(a.amount) amount,
											a.cpid
									   from (
											select a.authdate,
												   ifnull(a.amount, 0) - ifnull(b.amount, 0) as amount,
												   a.cpid
											  from tb_card_auth a
											  left join tb_card_cancel b
												on a.daoutrx = b.daoutrx
											   and a.cpid = b.cpid
											  left join tb_pay_hold c
												on c.daoutrx = a.daoutrx
											   and c.cpid = a.cpid                        
											 where a.resultcode = '0000'
											   and c.daoutrx is null
											 union 
											select a.authdate,
												   ifnull(a.amount, 0) - ifnull(b.amount, 0) as amount,
												   a.cpid
											  from tb_card_auth2 a
											  left join tb_card_cancel b
												on a.daoutrx = b.daoutrx
											   and a.cpid = b.cpid
											  left join tb_pay_hold c
												on c.daoutrx = a.daoutrx
											   and c.cpid = a.cpid                        
											 where a.resultcode = '0000'
											   and c.daoutrx is null        
											 union 
											select a.settdate authdate,
												   ifnull(a.amount, 0) - ifnull(b.amount, 0) as amount,
												   a.cpid
											  from tb_pay_notice a
											  left join tb_card_cancel b
												on a.daoutrx = b.daoutrx
											   and a.cpid = b.cpid
											  left join tb_pay_hold c
												on c.daoutrx = a.daoutrx
											   and c.cpid = a.cpid  						
											   and c.daoutrx is null         
											)a
									  where 1 = 1
									  group by date(a.authdate), a.cpid     
									 )a
							   inner join (
											select a.period,
												   a.store_id,
												   a.high_store_id,				   
												   c.business_nm3,
												   d.business_nm2,
												   a.business_nm,
												   a.cpid,
												   a.commission,
												   c.commission3,
												   d.commission2
											  from tb_store a
											 inner join tb_store_role b 
												on a.store_id = b.store_id
												]]>
											   <if test="search_id != '' and search_id != null">
											   		<if test="search_id == 'store_id'">
													and a.store_id = #{search_nm}
													</if>
													<if test="search_id == 'business_nm'">
													and a.business_nm = #{search_nm}
													</if>
											   </if>
											   <![CDATA[
											   and b.role_id = '1004'
											   and a.state = 'Y'
											   and a.cpid is not null
											   and a.cpid != ''															  										   
											 inner join (
													select a.store_id as store_id3,
														   a.high_store_id as high_store_id3,
														   a.business_nm as business_nm3,
														   a.commission as commission3 
													  from tb_store a
													 inner join tb_store_role b 
														on a.store_id = b.store_id
													   and b.role_id = '1003'
													   and a.state = 'Y'  
												   )c
												on a.high_store_id = c.store_id3
											 inner join (
													select a.store_id as store_id2,
														   a.high_store_id as high_store_id2,
														   a.business_nm as business_nm2,
														   a.commission as commission2
													  from tb_store a
													 inner join tb_store_role b 
														on a.store_id = b.store_id
													   and b.role_id = '1002'
													   and a.state = 'Y'      											 																           
												   )d
												on c.high_store_id3 = d.store_id2            
									 )b
								  on a.cpid = b.cpid								 
								and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y-%m-%d') BETWEEN date_format((concat(#{ym}, lpad('02', 2, 0)) - INTERVAL 1 day), '%Y-%m-%d') AND LAST_DAY(date_format((concat(#{ym}, lpad('02', 2, 0)) - INTERVAL 1 day), '%Y%m%d'))					
							  )a
						order by cast(a.period_date as unsigned) 	
	 ]]>
	</select>

	<select id="selectSettlementAllList" parameterType="searchSettlementVO" resultMap="settlement">
		with store_data as (
			select a.period,
				a.store_id,
				a.high_store_id,
				a.terminal_id,
				a.imei,
				c.business_nm3,
				d.business_nm2,
				a.business_nm,
				a.cpid,
				a.commission,
				c.store_id3,
				c.commission3,
				d.store_id2,
				d.commission2,
				a.bank_code,
				(select bank_nm from tb_bank tb where bank_code=a.bank_code) bank_nm,
				a.state, 
				a.settlement_type,
				a.account_num,
				a.accounter
			from tb_store a
			inner join tb_store_role b 
				on a.store_id = b.store_id
				and b.role_id = '1004'
				and a.state = 'Y'
				and a.cpid is not null
				and a.cpid != ''
				<if test="high_store_id2 != null and high_store_id2 != ''">
				and a.high_store_id = #{high_store_id2}
				</if>
				<if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
				and a.store_id = #{roleStore3}
				</if>
			inner join (
				select 
					a.store_id as store_id3,
					a.high_store_id as high_store_id3,
					a.business_nm as business_nm3,
					a.commission as commission3 
				from tb_store a
				inner join tb_store_role b 
					on a.store_id = b.store_id
					and b.role_id = '1003'
					and a.state = 'Y'
					<if test="high_store_id != null and high_store_id != ''">
					and a.high_store_id = #{high_store_id}
					</if>
					<if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
					and a.store_id = #{roleStore2}
					</if>
			)c
				on a.high_store_id = c.store_id3
			inner join (
				select 
					a.store_id as store_id2,
					a.high_store_id as high_store_id2,
					a.business_nm as business_nm2,
					a.commission as commission2
				from tb_store a
				inner join tb_store_role b 
					on a.store_id = b.store_id
					and b.role_id = '1002'
					and a.state = 'Y'
					<if test="roleStore != null and roleStore != ''">
					and a.store_id = #{roleStore}
					</if>
			)d
			on c.high_store_id3 = d.store_id2 
		),
		payment_data as (
			-- 페이조아 승인내역
			select 
				cast((a.amount * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
				cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
				cast((a.amount * cast((a.commission / 100 ) as float)) as int) - cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat,
				a.amount - cast((a.amount * cast((a.commission / 100 ) as float)) as int) as settlement,
				a.amount,
				ifnull(a.cancelamount,0) cancel_amount,
				a.commission,
				a.cp_type,
				a.seqno,
				a.daoutrx,
				a.orderno, 
				a.username, 
				a.productname,
				a.tax_state,
				a.quota,
				a.cardno,
				a.cardcode,
				a.no,
				a.authdate,
				a.canceldate,
				a.paymenttype,
				b.store_id,
				b.high_store_id,
				b.business_nm,
				b.store_id3, 
				b.business_nm3, 
				b.store_id2, 
				b.business_nm2, 
				b.terminal_id,
				b.period,
				b.bank_code, 
				b.bank_nm, 
				b.state, 
				b.settlement_type,
				b.cpid,
				b.imei,
				a.no_cpid
			from (
				select 
					'1' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					(select amount from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as cancelamount,
					a.daoutrx,
					a.orderno,
					a.username,
					a.productname,
					a.tax_state,
					a.quota,
					a.cardno,
					a.cardcode,
					a.authdate,
					(select created_datetime from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as canceldate,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no,
					concat(a.no, '_' ,a.cpid) no_cpid
				from tb_card_auth a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 페이조아 취소내역
				select 
					'1' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(b.amount, 0) as amount,
					ifnull(a.amount, 0) as cancelamount,
					a.daoutrx,
					b.orderno,
					b.username,
					b.productname,
					b.tax_state,
					b.quota,
					b.cardno,
					b.cardcode,
					b.authdate,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no,
					concat(b.no, '_' ,b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union 
				-- 케이에스넷 승인내역
				select 
					'2' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					(select amount from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as cancelamount,
					a.daoutrx,
					a.orderno,
					a.username,
					a.productname,
					a.tax_state,
					a.quota,
					a.cardno,
					a.isscd cardcode,
					a.authdate,
					(select created_datetime from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as canceldate,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no,
					concat(a.no, '_' ,a.cpid) no_cpid
				from tb_card_auth2 a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 케이에스넷 취소내역
				select 
					'2' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(b.amount, 0) as amount,
					ifnull(a.amount, 0) as cancelamount,
					a.daoutrx,
					b.orderno,
					b.username,
					b.productname,
					b.tax_state,
					b.quota,
					b.cardno,
					b.isscd cardcode,
					b.authdate,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no,
					concat(b.no, '_' ,b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth2 b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union 
				-- 단말기결제 내역
				select 
					'1' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					(select amount from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as cancelamount,
					a.daoutrx,
					'' orderno,
					'' username,
					'' productname,
					a.tax_state,
					'' quota,
					a.cardno,
					a.cardcode,
					a.settdate authdate,
					(select created_datetime from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as canceldate,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no,
					concat(a.no, '_' ,a.cpid) no_cpid
				from tb_pay_notice a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
				union
				-- 단말기결제 취소내역
				select 
					'1' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(b.amount, 0) as amount,
					ifnull(a.amount, 0) as cancelamount,
					a.daoutrx,
					'' orderno,
					'' username,
					'' productname,
					a.tax_state,
					'' quota,
					b.cardno,
					b.cardcode,
					b.settdate authdate,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no,
					concat(b.no, '_' ,b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_pay_notice b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
			)a
			inner join store_data b 
				on a.store_id = b.store_id
		)
		select
			row_number() over(
				order by a.authdate desc, a.seqno asc, case when #{order_no} = '1' then (	
				case #{order_id} when 'cp_type' then a.cp_type 
							    when 'store_id' then a.store_id 
							    when 'cpid' then a.cpid 
							    when 'terminal_id' then a.terminal_id 
                                when 'period' then a.period 
                                when 'bank_nm' then a.bank_nm 
                                when 'orderno' then a.orderno 
                                when 'username' then a.username 
                                when 'productname' then a.productname 
                                when 'amount' then a.amount
                                when 'commission' then a.commission
                                when 'franchisee_commission' then a.franchisee_commission
                                when 'commission_cost' then a.commission_cost
                                when 'vat' then a.vat
                                when 'settlement' then a.settlement
                                when 'business_nm3' then a.business_nm3
                                when 'business_nm2' then a.business_nm2
                                when 'business_nm' then a.business_nm
                                when 'state' then a.state
                                end       
				)END ASC,
			case when #{order_no} = '2' then (	
				case #{order_id} when 'cp_type' then a.cp_type 
							    when 'store_id' then a.store_id 
							    when 'cpid' then a.cpid 
							    when 'terminal_id' then a.terminal_id 
                                when 'period' then a.period 
                                when 'bank_nm' then a.bank_nm 
                                when 'orderno' then a.orderno 
                                when 'username' then a.username 
                                when 'productname' then a.productname 
                                when 'amount' then a.amount 
                                when 'commission' then a.commission
                                when 'franchisee_commission' then a.franchisee_commission
                                when 'commission_cost' then a.commission_cost
                                when 'vat' then a.vat
                                when 'settlement' then a.settlement
                                when 'business_nm3' then a.business_nm3
                                when 'business_nm3' then a.business_nm3
                                when 'business_nm' then a.business_nm
                                when 'state' then a.state
						    end 
				)END DESC	
			) as rownum,
			a.* 
		from payment_data a
		where 1=1
			<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
			and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
			</if>
			<choose>
			<when test='paymenttype =="3"'>
			and IFNULL(a.paymenttype, '') = '3'
			</when>
			<otherwise>
			and IFNULL(a.paymenttype, '') != '3'
			</otherwise>
			</choose>
			<choose>
				<when test="amount1 != null and amount1 != '' and amount2 != null and amount2 != ''">
				and	a.amount <![CDATA[>=]]> #{amount1}
				and a.amount <![CDATA[<=]]> #{amount2}
				</when>
				<when test="amount1 != null and amount1 != ''">
				and	a.amount <![CDATA[>=]]> #{amount1}
				</when>
				<when test="amount2 != null and amount2 != ''">
				and a.amount <![CDATA[<=]]> #{amount2}
				</when>
			</choose>
			<if test="cardcode != null and cardcode != ''">
				and a.cardcode = #{cardcode}
			</if>
			<if test="cardno != null and cardno != ''">
				and	a.cardno like concat('%' , #{cardno} , '%')
			</if>
			<if test="quota != null and quota != ''">
				and a.quota = #{quota}
			</if>
			<if test="username != null and username != ''">
				and a.username like concat('%', #{username}, '%')
			</if>
			<if test="orderno != null and orderno != ''">
				and a.orderno like concat('%', #{orderno}, '%')
			</if>
			<if test="search_id != null and search_id != '' and search_nm != null and search_nm != ''">
			<choose>
				<when test="search_id == 'store_id'">
				and	a.store_id like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'business_nm'">
				and	a.business_nm like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'cpid'">
				and	a.cpid like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'terminal_id'">
				and	a.terminalid like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'imei'">
				and	a.imei like concat('%' , #{search_nm} , '%')
				</when>
			</choose>
			</if>
			<if test="commission != null and commission != ''">
				and a.commission = #{commission}
			</if>
			<if test="cp_type != null and cp_type != ''">
				and a.cp_type = #{cp_type}
			</if>
			<if test="seqno != null and seqno != ''">
				and a.seqno = #{seqno}
			</if>	
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>


	<select id="selectSettlementAllTotalInfo" parameterType="searchSettlementVO" resultMap="settlement">
		with store_data as (
			select a.period,
				a.store_id,
				a.high_store_id,
				a.terminal_id,
				a.imei,
				c.business_nm3,
				d.business_nm2,
				a.business_nm,
				a.cpid,
				a.commission,
				c.store_id3,
				c.commission3,
				d.store_id2,
				d.commission2,
				a.bank_code,
				(select bank_nm from tb_bank tb where bank_code=a.bank_code) bank_nm,
				a.state, 
				a.settlement_type,
				a.account_num,
				a.accounter
			from tb_store a
			inner join tb_store_role b 
				on a.store_id = b.store_id
				and b.role_id = '1004'
				and a.state = 'Y'
				and a.cpid is not null
				and a.cpid != ''
				<if test="high_store_id2 != null and high_store_id2 != ''">
				and a.high_store_id = #{high_store_id2}
				</if>
				<if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
				and a.store_id = #{roleStore3}
				</if>
			inner join (
				select 
					a.store_id as store_id3,
					a.high_store_id as high_store_id3,
					a.business_nm as business_nm3,
					a.commission as commission3 
				from tb_store a
				inner join tb_store_role b 
					on a.store_id = b.store_id
					and b.role_id = '1003'
					and a.state = 'Y'
					<if test="high_store_id != null and high_store_id != ''">
					and a.high_store_id = #{high_store_id}
					</if>
					<if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
					and a.store_id = #{roleStore2}
					</if>
			)c
				on a.high_store_id = c.store_id3
			inner join (
				select 
					a.store_id as store_id2,
					a.high_store_id as high_store_id2,
					a.business_nm as business_nm2,
					a.commission as commission2
				from tb_store a
				inner join tb_store_role b 
					on a.store_id = b.store_id
					and b.role_id = '1002'
					and a.state = 'Y'
					<if test="roleStore != null and roleStore != ''">
					and a.store_id = #{roleStore}
					</if>
			)d
			on c.high_store_id3 = d.store_id2 
		),
		payment_data as (
			-- 페이조아 승인내역
			select 
				if(seqno='1', a.amount, 0) approval_amount,
				if(seqno='1', 1, 0) approval_cnt,
				if(seqno='0', a.amount, 0) cancel_amount,
				if(seqno='0', 1, 0) cancel_cnt,
				a.amount,
				a.commission,
				a.cp_type,
				a.seqno,
				a.daoutrx,
				a.orderno, 
				a.username, 
				a.productname,
				a.tax_state,
				a.quota,
				a.cardno,
				a.cardcode,
				a.no,
				a.authdate,
				a.paymenttype,
				b.store_id,
				b.high_store_id,
				b.business_nm,
				b.store_id3, 
				b.business_nm3, 
				b.store_id2, 
				b.business_nm2, 
				b.terminal_id,
				b.period,
				b.bank_code, 
				b.bank_nm, 
				b.state, 
				b.settlement_type,
				b.cpid,
				b.imei
			from (
				select 
					'1' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					a.daoutrx,
					a.orderno,
					a.username,
					a.productname,
					a.tax_state,
					a.quota,
					a.cardno,
					a.cardcode,
					a.authdate,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no
				from tb_card_auth a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 페이조아 취소내역
				select 
					'1' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					a.daoutrx,
					b.orderno,
					b.username,
					b.productname,
					b.tax_state,
					b.quota,
					b.cardno,
					b.cardcode,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as authdate,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union 
				-- 케이에스넷 승인내역
				select 
					'2' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					a.daoutrx,
					a.orderno,
					a.username,
					a.productname,
					a.tax_state,
					a.quota,
					a.cardno,
					a.isscd cardcode,
					a.authdate,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no
				from tb_card_auth2 a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 케이에스넷 취소내역
				select 
					'2' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					a.daoutrx,
					b.orderno,
					b.username,
					b.productname,
					b.tax_state,
					b.quota,
					b.cardno,
					b.isscd cardcode,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as authdate,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth2 b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union 
				-- 단말기결제 내역
				select 
					'1' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					a.daoutrx,
					'' orderno,
					'' username,
					'' productname,
					a.tax_state,
					'' quota,
					a.cardno,
					a.cardcode,
					a.settdate authdate,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no
				from tb_pay_notice a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
				union
				-- 단말기결제 취소내역
				select 
					'1' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					a.daoutrx,
					'' orderno,
					'' username,
					'' productname,
					a.tax_state,
					'' quota,
					b.cardno,
					b.cardcode,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as authdate,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_pay_notice b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
			)a
			inner join store_data b 
				on a.store_id = b.store_id
		)
		select
			count(a.cpid) total_cnt,									-- 총 건
			count(distinct a.cpid) total_store_cnt,						-- 기간별 거래처
			sum(a.approval_cnt) total_approval_cnt, 					-- 기간별 승인건수
			sum(a.approval_amount) total_approval,						-- 기간별 승인액
			sum(a.cancel_cnt) total_cancel_cnt,							-- 기간별취소건
			sum(a.cancel_amount) total_cancel_sum,						-- 기간별취소금액
			sum(a.approval_amount) + sum(a.cancel_amount) total_amount,				-- 총합계금액
			sum(cast((a.amount * cast((a.commission / 100 ) as float)) as int) - cast(a.amount * cast((a.commission / 100 ) / 1.1 as float) as int)) as total_vat,	-- 부가세
			sum(a.amount - cast((a.amount * cast((a.commission / 100 ) as float)) as int)) as total_settlement,		-- 정산금액
			(sum(a.amount) - sum(ifnull(a.cancel_amount, 0))) - sum(cast((a.amount - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float) as int)) as total_settlement_sum	-- 총 정산금액 
		from payment_data a
		where 1=1
			<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
			and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
			</if>
			<if test="cardcode != null and cardcode != ''">
			and a.cardcode = #{cardcode}
			</if>
			<if test="cardno != null and cardno != ''">
			and a.cardno like concat('%' , #{cardno} , '%')
			</if>
			<if test="quota != null and quota != ''">
			and a.quota = #{quota}
			</if>
			<if test="username != null and username != ''">
			and a.username like concat('%', #{username}, '%')
			</if>
			<if test="orderno != null and orderno != ''">
			and a.orderno like concat('%', #{orderno}, '%')
			</if>
			<choose>
				<when test="search_id == 'store_id'">
					and	a.store_id like concat('%' , #{search_nm} , '%')
				</when>						        
				<when test="search_id == 'business_nm'">
					and	a.business_nm like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'cpid'">
					and	a.cpid like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'terminal_id'">
					and	a.terminal_id like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'imei'">
					and	a.imei like concat('%' , #{search_nm} , '%')
				</when>
			</choose>		
			<if test="state != null and state != ''">
			and a.state = #{state}
			</if>	  
			<if test="commission != null and commission != ''">
			and a.commission = #{commission} 
			</if>  				
			<if test="tax_state != null and tax_state != ''">
				<choose>
					<when test='tax_state == "N"'>
						and	a.tax_state not in ('0','1')
					</when>						        
					<when test='tax_state == "Y"'>
						and	a.tax_state > 0
					</when>
				</choose>				  	    
			</if>	
			<if test="settlement_type != null and settlement_type != ''">
			and a.settlement_type = #{settlement_type}
			</if>										    																										
			<if test="period != null and period != ''">
			and a.period = #{period}
			</if>		
			<if test="cp_type != null and cp_type != ''">
			and a.cp_type = #{cp_type}
			</if>
			<if test="seqno != null and seqno != ''">
			and a.seqno = #{seqno}
			</if>
			<choose>
			<when test='paymenttype =="3"'>
			and IFNULL(a.paymenttype, '') = '3'
			</when>
			<otherwise>
			and IFNULL(a.paymenttype, '') != '3'
			</otherwise>
			</choose>
	</select>
		
	<select id="selectSettlementAllList2" parameterType="searchSettlementVO" resultMap="settlement">
  select a.rownum,
		 a.no,
		 a.daoutrx,
		 a.userid,
		 a.imei,
		 a.orderno,
		 replace(a.username, substr(a.username, 2, 1), '*') username,
		 a.productname,
		 FORMAT(a.amount, 0) amount,
		 FORMAT(a.vat, 0) vat,
		 a.authdate,
		 a.cardname,
		 a.cardcode,
		 a.cardno,
		 a.quota,
		 a.terminalid,
		 a.commission,
		 FORMAT(a.franchisee_commission, 0) franchisee_commission,
		 FORMAT(a.commission2, 0) commission2,
		 a.commission3,
		 a.business_nm,
		 a.business_nm2,
		 a.business_nm3,  			
		 a.tax,
		 FORMAT(a.amount2, 0) amount2,
		 a.bank_nm,
		 a.period,
		 a.state,
		 a.no_cpid,
		 a.cpid,
		 a.cp_type,
	     format(b.amount_sum, 0) as amount_sum,
	     b.total_cnt,
	     format(b.total_approval, 0) as total_approval,	
	     b.total_approval_cnt,
	     format(b.total_settlement, 0) as total_settlement,
	     format(b.total_vat, 0) as total_vat,
	     format(b.total_vat2, 0) as total_vat2,
	     format(b.total_vat3, 0) as total_vat3,
	     format(b.total_amount, 0) as total_amount,
	     format(b.total_amount2, 0) as total_amount2,
	     format(b.total_amount3, 0) as total_amount3		 
    from (	
		 select @rownum:=@rownum+1 AS rownum,
				a.no,
				a.daoutrx,
				a.userid,
				a.imei,
				a.orderno,
				a.username,
				a.productname,
				a.amount,
	<!--			a.vat,				총수수료 = 수수료부가세+가맹점수수료				-->	
				cast((a.amount * cast((a.commission / 100 ) as float)) as int) - cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat,
				a.authdate,
				a.cardname,
				a.cardcode,
				a.cardno,
				a.quota,
				a.terminalid,
				a.commission,
	<!--			a.commission,		가맹점수수료 = 거래금액 - (거래금액 * 가맹점수수료/100)	-->	
				cast((a.amount * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
	<!--			a.commission2,		수수료부가세 = 합계금액 - (합계금액 / 1.1)			-->
				cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission2,
				a.commission3,
				a.business_nm,
				a.business_nm2,
				a.business_nm3,  			
				a.tax,	
	<!--			a.amount2,			지급액은 = 거래금액 - 총수수료					-->	
				a.amount - cast((a.amount * cast((a.commission / 100 ) as float)) as int) as amount2,
				a.bank_nm,
				DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y.%m.%d') as period,
				a.state,
				a.no_cpid,
				a.cpid,
				a.cp_type
		   from (
	 		 	 select a.no,
					    a.daoutrx,
					    a.userid,
					    b.imei,
					    a.orderno,
					    a.username,
					    a.productname,
					    a.amount,
	                    FORMAT(a.vat, 0) vat,
					    date_format(a.authdate, '%Y.%m.%d') authdate,
					    a.cardname,
					    a.cardcode,
	                    a.cardno,
	                    a.quota,
	                    b.terminalid,
	                    b.commission,
	                    b.commission2,
	                    b.commission3,
						b.business_nm,
						b.business_nm2,
						b.business_nm3,                    
	                    b.tax,
	                    FORMAT(a.amount - a.vat, 0) amount2,
	                    b.bank_nm,
	                    b.period,
	                    b.state,
	                    concat(a.no, '_' ,a.cpid) no_cpid,
	                    a.cpid,
	                    a.cp_type
				   from (
						select a.no,
							   a.daoutrx,
	                           a.userid,
	                           a.orderno,
	                           a.username,
	                           a.productname,
							   ifnull(a.amount, 0) - ifnull(b.amount, 0) as amount,
	                           a.amount / 10 vat,
	                           a.authdate,
	                           '' cardname,
	                           '' cardcode,
	                           a.cardno,
	                           a.quota,
	                           a.cpid,
	                           '1' cp_type
						  from tb_card_auth a
						  left join tb_card_cancel b
							on a.daoutrx = b.daoutrx
						   and a.cpid = b.cpid
						  left join tb_pay_hold c
	                        on c.daoutrx = a.daoutrx
	                       and c.cpid = a.cpid                        
						 where a.resultcode = '0000'
						   and c.daoutrx is null
					  	    <if test="tax_state != null and tax_state != ''">
						        <choose>
						            <when test='tax_state == "N"'>
										and	a.tax_state not in ('0','1')
									</when>						        
						            <when test='tax_state == "Y"'>
										and	a.tax_state = #{tax_state2}
									</when>
								</choose>				  	    
							</if>						   
	                     )a  
				  inner join (
						 select a.store_id,
								a.terminal_id terminalid,
								a.imei,
								a.tax,
								a.business_nm,
								b.business_nm2,
								c.business_nm3,
	                            ifnull(a.commission, 0) commission,
	                            ifnull(b.commission2, 0) commission2,
	                            ifnull(c.commission3, 0) commission3,
	                            a.bank_nm,
	                            a.period,
	                            a.state,
	                            a.cpid
						   from (
								select a.store_id,
									   a.terminal_id,
									   a.imei,
									   a.tax,
									   a.high_store_id,
									   a.business_nm,
	                                   a.commission,
	                                   c.bank_nm,
	                                   a.period,
	                                   a.state,
	                                   a.cpid
								  from tb_store a
								 inner join tb_store_role b
									on a.store_id = b.store_id
								   and b.role_id = '1004'
								 inner join tb_bank c
	                                on a.bank_code = c.bank_code
								   and a.cpid is not null
								   and a.cpid != ''			                                
							  	    <if test="high_store_id2 != null and high_store_id2 != ''">
									and a.high_store_id = #{high_store_id2}
									</if>										   
							  	    <if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
									and a.store_id = #{roleStore3}
									</if>			                                
							   	    <if test="state != null and state != ''">
									and a.state = #{state}
									</if>	                                
								 )a  
						   inner join      
								 (
								select a.store_id,
									   a.terminal_id,
									   a.high_store_id,
									   a.business_nm as business_nm2,
	                                   a.commission as commission2
								  from tb_store a
								 inner join tb_store_role b
									on a.store_id = b.store_id
								   and b.role_id = '1003'   
							  	    <if test="high_store_id != null and high_store_id != ''">
									and a.high_store_id = #{high_store_id}
									</if>									            
							  	    <if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
									and a.store_id = #{roleStore2}
									</if>								   
								 )b
							  on a.high_store_id = b.store_id
						   inner join     
								 (
								select a.store_id,
									   a.terminal_id,
									   a.high_store_id,
									   a.business_nm as business_nm3,
	                                   a.commission as commission3
								  from tb_store a
								 inner join tb_store_role b
									on a.store_id = b.store_id
								   and b.role_id = '1002'    
							  	    <if test="roleStore != null and roleStore != ''">
									and a.store_id = #{roleStore}
									</if>								                  
								 )c
							  on b.high_store_id = c.store_id             
						)b
					 on a.cpid = b.cpid
				  union all
	 		 	 select a.no,
					    a.daoutrx,
					    a.userid,
					    b.imei,
					    a.orderno,
					    a.username,
					    a.productname,
					    a.amount,
	                    FORMAT(a.vat, 0) vat,
					    date_format(a.authdate, '%Y.%m.%d') authdate,
					    a.cardname,
					    a.cardcode,
	                    a.cardno,
	                    a.quota,
	                    b.terminalid,
	                    b.commission,
	                    b.commission2,
	                    b.commission3,
						b.business_nm,
						b.business_nm2,
						b.business_nm3,                    
	                    b.tax,
	                    FORMAT(a.amount - a.vat, 0) amount2,
	                    b.bank_nm,
	                    b.period,
	                    b.state,
	                    concat(a.no, '_' ,a.cpid) no_cpid,
	                    a.cpid,
	                    a.cp_type
				   from (
						select a.no,
							   a.daoutrx,
	                           a.userid,
	                           a.orderno,
	                           a.username,
	                           a.productname,
							   ifnull(a.amount, 0) - ifnull(b.amount, 0) as amount,
	                           a.amount / 10 vat,
	                           a.authdate,
	                           '' cardname,
	                           '' cardcode,
	                           a.cardno,
	                           a.quota,
	                           a.cpid,
	                           '2' cp_type
						  from tb_card_auth2 a
						  left join tb_card_cancel b
							on a.daoutrx = b.daoutrx
						   and a.cpid = b.cpid
						  left join tb_pay_hold c
	                        on c.daoutrx = a.daoutrx
	                       and c.cpid = a.cpid                        
						 where a.resultcode = '0000'
						   and c.daoutrx is null
					  	    <if test="tax_state != null and tax_state != ''">
						        <choose>
						            <when test='tax_state == "N"'>
										and	a.tax_state not in ('0','1')
									</when>						        
						            <when test='tax_state == "Y"'>
										and	a.tax_state = #{tax_state2}
									</when>
								</choose>				  	    
							</if>						   
	                     )a  
				  inner join (
						 select a.store_id,
								a.terminal_id terminalid,
								a.imei,
								a.tax,
								a.business_nm,
								b.business_nm2,
								c.business_nm3,
	                            ifnull(a.commission, 0) commission,
	                            ifnull(b.commission2, 0) commission2,
	                            ifnull(c.commission3, 0) commission3,
	                            a.bank_nm,
	                            a.period,
	                            a.state,
	                            a.cpid
						   from (
								select a.store_id,
									   a.terminal_id,
									   a.imei,
									   a.tax,
									   a.high_store_id,
									   a.business_nm,
	                                   a.commission,
	                                   c.bank_nm,
	                                   a.period,
	                                   a.state,
	                                   a.cpid
								  from tb_store a
								 inner join tb_store_role b
									on a.store_id = b.store_id
								   and b.role_id = '1004'
								 inner join tb_bank c
	                                on a.bank_code = c.bank_code
								   and a.cpid is not null
								   and a.cpid != ''			                                
							  	    <if test="high_store_id2 != null and high_store_id2 != ''">
									and a.high_store_id = #{high_store_id2}
									</if>										   
							  	    <if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
									and a.store_id = #{roleStore3}
									</if>	                                
							   	    <if test="state != null and state != ''">
									and a.state = #{state}
									</if>	                                
								 )a  
						   inner join      
								 (
								select a.store_id,
									   a.terminal_id,
									   a.high_store_id,
									   a.business_nm as business_nm2,
	                                   a.commission as commission2
								  from tb_store a
								 inner join tb_store_role b
									on a.store_id = b.store_id
								   and b.role_id = '1003'     
							  	    <if test="high_store_id != null and high_store_id != ''">
									and a.high_store_id = #{high_store_id}
									</if>									          
							  	    <if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
									and a.store_id = #{roleStore2}
									</if>								   
								 )b
							  on a.high_store_id = b.store_id
						   inner join     
								 (
								select a.store_id,
									   a.terminal_id,
									   a.high_store_id,
									   a.business_nm as business_nm3,
	                                   a.commission as commission3
								  from tb_store a
								 inner join tb_store_role b
									on a.store_id = b.store_id
								   and b.role_id = '1002'    
							  	    <if test="roleStore != null and roleStore != ''">
									and a.store_id = #{roleStore}
									</if>								                  
								 )c
							  on b.high_store_id = c.store_id             
						)b
					 on a.cpid = b.cpid			  
				  union all
				 select a.no,
					    a.daoutrx,
	                    b.store_id userid,
	                    b.imei,
					    '' orderno,
					    '' username,
					    '' productname,             
					    a.amount,
	                    FORMAT(a.vat, 0) vat,
					    date_format(a.authdate, '%Y.%m.%d') authdate,
					    a.cardname,
					    a.cardcode,
					    a.cardno,
					    a.quota,
	                    a.terminalid, 
	                    b.commission,
	                    b.commission2,
	                    b.commission3,
						b.business_nm,
						b.business_nm2,
						b.business_nm3,                      
	                    b.tax,
	                    FORMAT(a.amount - a.vat, 0) amount2,
	                    b.bank_nm,
	                    b.period,
	                    b.state,
	                    concat(a.no, '_' ,a.cpid) no_cpid,
	                    a.cpid,
	                    a.cp_type
			  	   from (
						select a.no,
							   a.daoutrx,
	                           a.terminalid,                           
							   ifnull(a.amount, 0) - ifnull(b.amount, 0) as amount,
	                           a.amount / 10 vat,
	                           a.settdate authdate,
	                           a.cardname,
	                           a.cardcode,
	                           a.cardno,
	                           a.allotmon quota,
	                           a.cpid,
	                           '1' cp_type
						  from tb_pay_notice a
						  left join tb_card_cancel b
							on a.daoutrx = b.daoutrx
						   and a.cpid = b.cpid
						  left join tb_pay_hold c
	                        on c.daoutrx = a.daoutrx
	                       and c.cpid = a.cpid  						
						 where c.daoutrx is null
					  	    <if test="tax_state != null and tax_state != ''">
						        <choose>
						            <when test='tax_state == "N"'>
										and	a.tax_state not in ('0','1')
									</when>						        
						            <when test='tax_state == "Y"'>
										and	a.tax_state = #{tax_state2}
									</when>
								</choose>				  	    
							</if>							   
	                     )a
				   inner join (
						 select a.store_id,
								a.terminal_id terminalid,
								a.imei,
								a.tax,
								a.business_nm,
								b.business_nm2,
								c.business_nm3,
	                            ifnull(a.commission, 0) commission,
	                            ifnull(b.commission2, 0) commission2,
	                            ifnull(c.commission3, 0) commission3,
	                            a.bank_nm,
	                            a.period,
	                            a.state,
	                            a.cpid
						   from (
								select a.store_id,
									   a.terminal_id,
									   a.imei,
									   a.tax,
									   a.high_store_id,
									   a.business_nm,
	                                   a.commission,
	                                   c.bank_nm,
	                                   a.period,
	                                   a.state,
	                                   a.cpid
								  from tb_store a
								 inner join tb_store_role b
									on a.store_id = b.store_id
								   and b.role_id = '1004'
								 inner join tb_bank c
	                                on a.bank_code = c.bank_code
								   and a.cpid is not null
								   and a.cpid != ''		                                   
							  	    <if test="high_store_id2 != null and high_store_id2 != ''">
									and a.high_store_id = #{high_store_id2}
									</if>										   
							  	    <if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
									and a.store_id = #{roleStore3}
									</if>		                                    
		   	 					    <if test="state != null and state != ''">
									and a.state = #{state}
									</if>	                                                        
								 )a  
						   inner join      
								 (
								select a.store_id,
									   a.terminal_id,
									   a.high_store_id,
									   a.business_nm as business_nm2,
	                                   a.commission as commission2
								  from tb_store a
								 inner join tb_store_role b
									on a.store_id = b.store_id
								   and b.role_id = '1003'     
							  	    <if test="high_store_id != null and high_store_id != ''">
									and a.high_store_id = #{high_store_id}
									</if>								       
							  	    <if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
									and a.store_id = #{roleStore2}
									</if>							      
								 )b
							  on a.high_store_id = b.store_id
						   inner join     
								 (
								select a.store_id,
									   a.terminal_id,
									   a.high_store_id,
									   a.business_nm as business_nm3,
	                                   a.commission as commission3
								  from tb_store a
								 inner join tb_store_role b
									on a.store_id = b.store_id
								   and b.role_id = '1002'          
							  	    <if test="roleStore != null and roleStore != ''">
									and a.store_id = #{roleStore}
									</if>								            
								 )c
							  on b.high_store_id = c.store_id             
						)b
					 on a.cpid = b.cpid                
				)a
	      where (SELECT @ROWNUM:=0)=0
			<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
			and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
			</if>	
	        <choose>
	            <when test="amount1 != null and amount1 != '' and amount2 != null and amount2 != ''">
					and	a.amount <![CDATA[>=]]> #{amount1}
					and a.amount <![CDATA[<=]]> #{amount2}
				</when>						        
	            <when test="amount1 != null and amount1 != ''">
					and	a.amount <![CDATA[>=]]> #{amount1}
				</when>
	            <when test="amount2 != null and amount2 != ''">
					and a.amount <![CDATA[<=]]> #{amount2}
				</when>
			</choose>
			<if test="cardcode != null and cardcode != ''">
			and a.cardcode = #{cardcode}
			</if>					
			<if test="cardno != null and cardno != ''">
	        and	a.cardno like concat('%' , #{cardno} , '%')
			</if>	
	   	    <if test="quota != null and quota != ''">
			and a.quota = #{quota}
			</if>						      
	   	    <if test="username != null and username != ''">
			and a.username like concat('%', #{username}, '%')
			</if>		
	   	    <if test="orderno != null and orderno != ''">
			and a.orderno like concat('%', #{orderno}, '%')
			</if>		
			<if test="search_id != null and search_id != '' and search_nm != null and search_nm != ''">
		        <choose>
		            <when test="search_id == 'store_id'">
						and	a.userid like concat('%' , #{search_nm} , '%')
					</when>						        
		            <when test="search_id == 'business_nm'">
						and	a.business_nm like concat('%' , #{search_nm} , '%')
					</when>
		            <when test="search_id == 'cpid'">
						and	a.cpid like concat('%' , #{search_nm} , '%')
					</when>
		            <when test="search_id == 'terminal_id'">
						and	a.terminalid like concat('%' , #{search_nm} , '%')
					</when>
		            <when test="search_id == 'imei'">
						and	a.imei like concat('%' , #{search_nm} , '%')
					</when>
				</choose>
			</if>		
			<if test="commission != null and commission != ''">
			and a.commission = #{commission} 
			</if>  		
	  	    <if test="cp_type != null and cp_type != ''">
			and a.cp_type = #{cp_type}
			</if>												 
		   order by case when #{order_no} = '1' then (	
						case #{order_id} when 'userid' then a.userid 
									    when 'cpid' then a.cpid 
									    when 'terminalid' then a.terminalid 
									    when 'imei' then a.imei 
	                                    when 'period' then a.period 
	                                    when 'bank_nm' then a.bank_nm 
	                                    when 'orderno' then a.orderno 
	                                    when 'username' then a.username 
	                                    when 'productname' then a.productname 
	                                    when 'amount' then a.amount
	                                    when 'commission' then a.commission
	                                    when 'commission2' then a.commission2
	                                    when 'vat' then a.vat
	                                    when 'amount2' then a.amount2
	                                    when 'business_nm3' then a.business_nm3
	                                    when 'business_nm2' then a.business_nm2
	                                    when 'state' then a.state
		                                end       
						)END ASC,
					case when #{order_no} = '2' then (	
						case #{order_id} when 'userid' then a.userid 
									    when 'cpid' then a.cpid 
									    when 'terminalid' then a.terminalid 
									    when 'imei' then a.imei 
	                                    when 'period' then a.period 
	                                    when 'bank_nm' then a.bank_nm 
	                                    when 'orderno' then a.orderno 
	                                    when 'username' then a.username 
	                                    when 'productname' then a.productname 
	                                    when 'amount' then a.amount 
	                                    when 'commission' then a.commission
	                                    when 'commission2' then a.commission2
	                                    when 'vat' then a.vat
	                                    when 'amount2' then a.amount2
	                                    when 'business_nm3' then a.business_nm3
	                                    when 'business_nm2' then a.business_nm2
	                                    when 'state' then a.state
								    end 
						)END DESC		
			)a,(
							  select sum(a.amount) amount_sum,						-- 금액합계, 기간별합계
									 count(b.store_id) total_cnt,							-- 기간별 거래처                                
                                     sum(a.amount) + ifnull(sum(c.amount),0) as total_approval, 		-- 기간별 승인액                                                                    
                                     ifnull(sum(c.amount),0) as total_cancel_sum,						-- 기간별 취소액
                                     count(a.cnt) + count(c.cpid) as total_approval_cnt, 	-- 승인 건수                                         
                                     count(c.cpid) as total_cancel_cnt,						-- 취소 건수
						  			 sum(a.amount - cast((a.amount * cast((b.commission / 100 ) as float)) as int)) as total_settlement,	   -- 정산금액
						  			 sum(a.amount - cast((a.amount * cast((b.commission2 / 100 ) as float)) as int)) as total_settlement2,     -- 정산금액                                 
						  			 sum(a.amount - cast((a.amount * cast((b.commission3 / 100 ) as float)) as int)) as total_settlement3,     -- 정산금액      
						  			 sum(cast((a.amount * cast((b.commission / 100 ) / 1.1 as float)) as int)) as total_vat,					-- 부가세
						  			 sum(cast((a.amount * cast((b.commission2 / 100 ) / 1.1 as float)) as int)) as total_vat2,       			-- 부가세
						  			 sum(cast((a.amount * cast((b.commission3 / 100 ) / 1.1 as float)) as int)) as total_vat3,       	        -- 부가세      
                                     sum(a.amount - cast((a.amount * cast((b.commission / 100 ) as float)) as int)) + sum(cast((a.amount * cast((b.commission / 100 ) / 1.1 as float)) as int)) as total_amount,
                                     sum(a.amount - cast((a.amount * cast((b.commission2 / 100 ) as float)) as int)) + sum(cast((a.amount * cast((b.commission2 / 100 ) / 1.1 as float)) as int)) as total_amount2,
                                     sum(a.amount - cast((a.amount * cast((b.commission3 / 100 ) as float)) as int)) + sum(cast((a.amount * cast((b.commission3 / 100 ) / 1.1 as float)) as int)) as total_amount3
								from (
									 select date(a.authdate) as authdate,
											ifnull(a.amount, 0) as amount,
                                            a.cpid cnt,
											a.cpid,
                                            a.daoutrx                                     
									   from (
											select a.authdate,
												   ifnull(a.amount, 0)-ifnull(b.amount, 0) as amount,
												   a.cpid,
												   a.daoutrx
											  from tb_card_auth a
											  left join tb_card_cancel b
												on a.daoutrx = b.daoutrx
											   and a.cpid = b.cpid
											  left join tb_pay_hold c
												on c.daoutrx = a.daoutrx
											   and c.cpid = a.cpid                        
											 where a.resultcode = '0000'
											   and c.daoutrx is null
										  	    <if test="tax_state != null and tax_state != ''">
											        <choose>
											            <when test='tax_state == "N"'>
															and	a.tax_state not in ('0','1')
														</when>						        
											            <when test='tax_state == "Y"'>
															and	a.tax_state = #{tax_state2}
														</when>
													</choose>				  	    
												</if>												   
											 union 
											select a.authdate,
												   ifnull(a.amount, 0)-ifnull(b.amount, 0) as amount,
												   a.cpid,
												   a.daoutrx
											  from tb_card_auth2 a
											  left join tb_card_cancel b
												on a.daoutrx = b.daoutrx
											   and a.cpid = b.cpid
											  left join tb_pay_hold c
												on c.daoutrx = a.daoutrx
											   and c.cpid = a.cpid                        
											 where a.resultcode = '0000'
											   and c.daoutrx is null        
										  	    <if test="tax_state != null and tax_state != ''">
											        <choose>
											            <when test='tax_state == "N"'>
															and	a.tax_state not in ('0','1')
														</when>						        
											            <when test='tax_state == "Y"'>
															and	a.tax_state = #{tax_state2}
														</when>
													</choose>				  	    
												</if>												   
											 union 
											select a.settdate authdate,
												   ifnull(a.amount, 0)-ifnull(b.amount, 0) as amount,
												   a.cpid,
												   a.daoutrx
											  from tb_pay_notice a
											  left join tb_card_cancel b
												on a.daoutrx = b.daoutrx
											   and a.cpid = b.cpid
											  left join tb_pay_hold c
												on c.daoutrx = a.daoutrx
											   and c.cpid = a.cpid  						
											 where c.daoutrx is null    
									  	    <if test="tax_state != null and tax_state != ''">
										        <choose>
										            <when test='tax_state == "N"'>
														and	a.tax_state not in ('0','1')
													</when>						        
										            <when test='tax_state == "Y"'>
														and	a.tax_state = #{tax_state2}
													</when>
												</choose>				  	    
											</if>												        
											)a
									 )a
							   inner join (
											select a.period,
												   a.store_id,
												   a.high_store_id,				   
												   c.business_nm3,
												   d.business_nm2,
												   a.business_nm,
												   a.cpid,
												   a.commission,
												   c.commission3,
												   d.commission2
											  from tb_store a
											 inner join tb_store_role b 
												on a.store_id = b.store_id
											   and b.role_id = '1004'
											   and a.cpid is not null
											   and a.cpid != ''				
										  	    <if test="high_store_id2 != null and high_store_id2 != ''">
												and a.high_store_id = #{high_store_id2}
												</if>										   
										  	    <if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
												and a.store_id = #{roleStore3}
												</if>			                                
										   	    <if test="state != null and state != ''">
												and a.state = #{state}
												</if>												   								
											 inner join (
													select a.store_id as store_id3,
														   a.high_store_id as high_store_id3,
														   a.business_nm as business_nm3,
														   a.commission as commission3 
													  from tb_store a
													 inner join tb_store_role b 
														on a.store_id = b.store_id
													   and b.role_id = '1003'
													   and a.state = 'Y'            
											  	    <if test="high_store_id != null and high_store_id != ''">
													and a.high_store_id = #{high_store_id}
													</if>									            
											  	    <if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
													and a.store_id = #{roleStore2}
													</if>														   													     
												   )c
												on a.high_store_id = c.store_id3
											 inner join (
													select a.store_id as store_id2,
														   a.high_store_id as high_store_id2,
														   a.business_nm as business_nm2,
														   a.commission as commission2
													  from tb_store a
													 inner join tb_store_role b 
														on a.store_id = b.store_id
													   and b.role_id = '1002'
													   and a.state = 'Y'     
												  	    <if test="roleStore != null and roleStore != ''">
														and a.store_id = #{roleStore}
														</if>														            
												   )d
												on c.high_store_id3 = d.store_id2            
									 )b
								  on a.cpid = b.cpid        
								<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
								and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
								</if>										   
								left join tb_card_cancel c
								  on a.cpid = c.cpid
								 and a.daoutrx = c.daoutrx                 
              )b			
	  LIMIT #{recordCountPerPage} OFFSET #{firstIndex}									   
	</select>
			
	<select id="selectSettlementAllDetail" parameterType="searchSettlementVO" resultMap="settlement">
						     select a.*
						          , b.*
                               from (
									select @ROWNUM:=@ROWNUM+1 AS rownum
										 , cast((e.amount * cast((a.commission / 100 ) as float)) as int) as franchisee_commission
										 , cast((e.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost
										 , cast((e.amount * cast((a.commission / 100 ) as float)) as int) - cast((e.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
										 , e.amount - cast((e.amount * cast((a.commission / 100 ) as float)) as int) as settlement          
                                         , DATE_FORMAT(DATE_ADD(e.authdate, INTERVAL a.period DAY), '%Y-%m-%d') as period_date
                                         , a.store_id
                                         , e.authdate
										 , a.bank_code
										 , f.bank_nm
										 , c.business_nm3
										 , d.business_nm2   										 
										 , a.commission
										 , a.cpid
										 , e.cp_type
										 , e.amount
										 , e.daoutrx
										 , e.orderno
                                         , replace(e.username, substr(e.username, 2, 1), '*') username
										 , e.productname
										 , e.created_datetime                                           
									  from tb_store a
									 inner join tb_store_role b 
										on a.store_id = b.store_id
									 inner join tb_bank f
					 			  	    on a.bank_code = f.bank_code												
									   and b.role_id = '1004'
									   and a.state = 'Y'
									   and a.cpid is not null
									   and a.cpid != ''				
								  	    <if test="high_store_id2 != null and high_store_id2 != ''">
										and a.high_store_id = #{high_store_id2}
										</if>										   
								  	    <if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
										and a.store_id = #{roleStore3}
										</if>									   					   											  										   
									 inner join (
											select a.store_id as store_id3,
												   a.high_store_id as high_store_id3,
												   a.business_nm as business_nm3,
												   a.commission as commission3,
												   a.bank_code
											  from tb_store a
											 inner join tb_store_role b 
												on a.store_id = b.store_id
											   and b.role_id = '1003'
											 inner join tb_bank c
												on a.bank_code = c.bank_code
											   and a.state = 'Y'
										  	    <if test="high_store_id != null and high_store_id != ''">
												and a.high_store_id = #{high_store_id}
												</if>									            
										  	    <if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
												and a.store_id = #{roleStore2}
												</if>												      												   							   
										   )c
										on a.high_store_id = c.store_id3
									 inner join (
											select a.store_id as store_id2,
												   a.high_store_id as high_store_id2,
												   a.business_nm as business_nm2,
												   a.commission as commission2
											  from tb_store a
											 inner join tb_store_role b 
												on a.store_id = b.store_id
											   and b.role_id = '1002'
											   and a.state = 'Y'   			
										  	    <if test="roleStore != null and roleStore != ''">
												and a.store_id = #{roleStore}
												</if>												   								      
										   )d
										on c.high_store_id3 = d.store_id2       
								     inner join (
											 select a.cp_type
												  , a.cpid
												  , a.amount as amount
												  , a.daoutrx as daoutrx
												  , a.orderno as orderno
												  , a.username as username
												  , a.productname as productname
                                                  , date_format(a.authdate, '%Y.%m.%d') as authdate
												  , a.created_datetime as created_datetime
											   from (
													select '1' as cp_type
														 , a.cpid
														 , a.amount
														 , a.daoutrx
														 , b.orderno
														 , b.username
														 , b.productname
                                                         , b.authdate
														 , a.created_datetime
														 , b.tax_state
													  from tb_card_cancel a
													 inner join tb_card_auth b
														on a.cpid = b.cpid
													   and a.daoutrx = b.daoutrx  
													 union all
													select '2' as cp_type
														 , a.cpid
														 , a.amount
														 , a.daoutrx
														 , b.orderno
														 , b.username
														 , b.productname
                                                         , b.authdate                                                         
														 , a.created_datetime                     
														 , b.tax_state 
													  from tb_card_cancel a
													 inner join tb_card_auth2 b
														on a.cpid = b.cpid
													   and a.daoutrx = b.daoutrx  
													) a                             
                                           )e 
										on a.cpid = e.cpid 
                                     where (SELECT @ROWNUM:=0)=0   
									<if test="period_date != null and period_date != ''">
								   	  and DATE_FORMAT(e.created_datetime, '%Y.%m.%d') = #{period_date}
									</if>	     	
								    <if test="cpid != null and cpid != ''">
									and a.cpid = #{cpid}
									</if>	  
								    <if test="cp_type != null and cp_type != ''">
									and e.cp_type = #{cp_type}
									</if>	                                                                         
									)a,
									(
									  select count(a.cpid_cnt) d_approval_cnt
									       , count(a.cpid) d_cancel_cnt
									       , sum(a.amount_total) as d_amount
									       , sum(a.amount) as d_cancel_sum
									    from (
									 	  	 select a.*
									           from (
													select '1' as cp_type
									                         , a.cpid as cpid_cnt                
															 , b.cpid
									                         , a.amount as amount_total                        
															 , b.amount
															 , b.created_datetime
									                         , a.authdate
															 , a.tax_state
														  from tb_card_auth a
														  left join tb_card_cancel b
															on a.cpid = b.cpid
														   and a.daoutrx = b.daoutrx  
														 union all
														select '2' as cp_type
									                         , a.cpid as cpid_cnt                                            
															 , b.cpid
									                         , a.amount as amount_total                         
															 , b.amount
															 , b.created_datetime         
									                         , a.authdate                         
															 , a.tax_state    
														  from tb_card_auth2 a
														  left join tb_card_cancel b
															on a.cpid = b.cpid
														   and a.daoutrx = b.daoutrx  
													) a
											  where a.cp_type = #{cp_type}
									            and DATE_FORMAT(a.authdate, '%Y.%m.%d') = #{period_date}
									            and a.cpid = #{cpid}
											 )a
									   group by a.cpid_cnt, a.cpid									
									)b	
								order by a.rownum desc
	   					      LIMIT #{recordCountPerPage} OFFSET #{firstIndex}	
	</select>
			

	
	<select id="selectSettlementAllListCnt" parameterType="searchSettlementVO" resultMap="settlement">
	 select count(*) tocnt, ifnull(FORMAT(sum(a.amount2), 0), 0) amount
	   from (
 		 	 select a.no,
				    a.daoutrx,
				    a.userid,
				    b.imei,
				    a.orderno,
				    a.username,
				    a.productname,
				    FORMAT(a.amount, 0) amount,
                    FORMAT(a.vat, 0) vat,
				    date_format(a.authdate, '%Y.%m.%d') authdate,
				    a.cardname,
				    a.cardcode,
                    a.cardno,
                    a.quota,
                    b.terminalid,
                    b.commission,
                    b.commission2,
                    b.commission3,
                    b.tax,
                    FORMAT(a.amount - a.vat, 0) amount2,
                    b.bank_nm,
                    a.cp_type,
                    a.cpid,
                    b.business_nm
			   from (
					select a.no,
						   a.daoutrx,
                           a.userid,
                           a.orderno,
                           a.username,
                           a.productname,
						   a.amount,
                           a.amount / 10 vat,
                           a.authdate,
                           '' cardname,
                           '' cardcode,
                           a.cardno,
                           a.quota,
                           '1' cp_type,
                           a.cpid
					  from tb_card_auth a
					  left join tb_card_cancel b
						on b.daoutrx = a.daoutrx
					   and b.cpid = a.cpid
					 where a.resultcode = '0000'
                       and b.daoutrx is null
				  	    <if test="tax_state != null and tax_state != ''">
					        <choose>
					            <when test='tax_state == "N"'>
									and	a.tax_state not in ('0','1')
								</when>						        
					            <when test='tax_state == "Y"'>
									and	a.tax_state = #{tax_state2}
								</when>
							</choose>				  	    
						</if>	                       
                     )a  
			  inner join (
					 select a.store_id,
							a.terminal_id terminalid,
							a.imei,
							a.tax,
							a.business_nm,
							b.business_nm2,
							c.business_nm3,
                            ifnull(a.commission, 0) commission,
                            ifnull(b.commission2, 0) commission2,
                            ifnull(c.commission3, 0) commission3,
                            a.bank_nm
					   from (
							select a.store_id,
								   a.terminal_id,
								   a.imei,
								   a.tax,
								   a.high_store_id,
								   a.business_nm,
                                   a.commission,
                                   c.bank_nm
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1004'
							 inner join tb_bank c
                                on a.bank_code = c.bank_code
						  	    <if test="high_store_id2 != null and high_store_id2 != ''">
								and a.high_store_id = #{high_store_id2}
								</if>										   
						  	    <if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
								and a.store_id = #{roleStore3}
								</if>		                                
						   	    <if test="state != null and state != ''">
								and a.state = #{state}
								</if>	                                     
							 )a  
					   inner join      
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm2,
                                   a.commission as commission2
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1003'   
						  	    <if test="high_store_id != null and high_store_id != ''">
								and a.high_store_id = #{high_store_id}
								</if>								            
						  	    <if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
								and a.store_id = #{roleStore2}
								</if>								   
							 )b
						  on a.high_store_id = b.store_id
					   inner join     
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm3,
                                   a.commission as commission3
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1002'         
						  	    <if test="roleStore != null and roleStore != ''">
								and a.store_id = #{roleStore}
								</if>							             
							 )c
						  on b.high_store_id = c.store_id             
					)b
				 on a.userid = b.store_id
			  union all
 		 	 select a.no,
				    a.daoutrx,
				    a.userid,
				    b.imei,
				    a.orderno,
				    a.username,
				    a.productname,
				    FORMAT(a.amount, 0) amount,
                    FORMAT(a.vat, 0) vat,
				    date_format(a.authdate, '%Y.%m.%d') authdate,
				    a.cardname,
				    a.cardcode,
                    a.cardno,
                    a.quota,
                    b.terminalid,
                    b.commission,
                    b.commission2,
                    b.commission3,
                    b.tax,
                    FORMAT(a.amount - a.vat, 0) amount2,
                    b.bank_nm,
                    a.cp_type,
                    a.cpid,
                    b.business_nm
			   from (
					select a.no,
						   a.daoutrx,
                           a.userid,
                           a.orderno,
                           a.username,
                           a.productname,
						   a.amount,
                           a.amount / 10 vat,
                           a.authdate,
                           '' cardname,
                           '' cardcode,
                           a.cardno,
                           a.quota,
                           '2' cp_type,
                           a.cpid
					  from tb_card_auth2 a
					  left join tb_card_cancel b
						on b.daoutrx = a.daoutrx
					   and b.cpid = a.cpid
					 where a.resultcode = '0000'
                       and b.daoutrx is null
				  	    <if test="tax_state != null and tax_state != ''">
					        <choose>
					            <when test='tax_state == "N"'>
									and	a.tax_state not in ('0','1')
								</when>						        
					            <when test='tax_state == "Y"'>
									and	a.tax_state = #{tax_state2}
								</when>
							</choose>				  	    
						</if>	                       
                     )a  
			  inner join (
					 select a.store_id,
							a.terminal_id terminalid,
							a.imei,
							a.tax,
							a.business_nm,
							b.business_nm2,
							c.business_nm3,
                            ifnull(a.commission, 0) commission,
                            ifnull(b.commission2, 0) commission2,
                            ifnull(c.commission3, 0) commission3,
                            a.bank_nm
					   from (
							select a.store_id,
								   a.terminal_id,
								   a.imei,
								   a.tax,
								   a.high_store_id,
								   a.business_nm,
                                   a.commission,
                                   c.bank_nm
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1004'
							 inner join tb_bank c
                                on a.bank_code = c.bank_code
						  	    <if test="high_store_id2 != null and high_store_id2 != ''">
								and a.high_store_id = #{high_store_id2}
								</if>										   
						  	    <if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
								and a.store_id = #{roleStore3}
								</if>		                                
						   	    <if test="state != null and state != ''">
								and a.state = #{state}
								</if>	                                     
							 )a  
					   inner join      
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm2,
                                   a.commission as commission2
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1003'     
						  	    <if test="high_store_id != null and high_store_id != ''">
								and a.high_store_id = #{high_store_id}
								</if>								          
						  	    <if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
								and a.store_id = #{roleStore2}
								</if>								   
							 )b
						  on a.high_store_id = b.store_id
					   inner join     
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm3,
                                   a.commission as commission3
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1002'         
						  	    <if test="roleStore != null and roleStore != ''">
								and a.store_id = #{roleStore}
								</if>							             
							 )c
						  on b.high_store_id = c.store_id             
					)b
				 on a.userid = b.store_id			  
			  union all
			 select a.no,
				    a.daoutrx,
                    b.store_id userid,
                    b.imei,
				    '' orderno,
				    '' username,
				    '' productname,             
				    FORMAT(a.amount, 0) amount,
                    FORMAT(a.vat, 0) vat,
				    date_format(a.authdate, '%Y.%m.%d') authdate,
				    a.cardname,
				    a.cardcode,
				    a.cardno,
				    a.quota,
                    a.terminalid, 
                    b.commission,
                    b.commission2,
                    b.commission3,
                    b.tax,
                    FORMAT(a.amount - a.vat, 0) amount2,
                    b.bank_nm,
                    a.cp_type,
                    a.cpid,
                    b.business_nm
		  	   from (
					select a.no,
						   a.daoutrx,
                           a.terminalid,                           
						   a.amount,
                           a.amount / 10 vat,
                           a.settdate authdate,
                           a.cardname,
                           a.cardcode,
                           a.cardno,
                           a.allotmon quota,
                           '1' cp_type,         
                           a.cpid                  
					  from tb_pay_notice a
					  left join tb_card_cancel b
						on b.daoutrx = a.daoutrx
					   and b.cpid = a.cpid
					 where b.daoutrx is null
			  	    <if test="tax_state != null and tax_state != ''">
				        <choose>
				            <when test='tax_state == "N"'>
								and	a.tax_state not in ('0','1')
							</when>						        
				            <when test='tax_state == "Y"'>
								and	a.tax_state = #{tax_state2}
							</when>
						</choose>				  	    
					</if>							 
                     )a
			   inner join (
					 select a.store_id,
							a.terminal_id terminalid,
							a.imei,
							a.tax,
							a.business_nm,
							b.business_nm2,
							c.business_nm3,
                            ifnull(a.commission, 0) commission,
                            ifnull(b.commission2, 0) commission2,
                            ifnull(c.commission3, 0) commission3,
                            a.bank_nm,
                            a.cpid
					   from (
							select a.store_id,
								   a.imei,
								   a.terminal_id,
								   a.tax,
								   a.high_store_id,
								   a.business_nm,
                                   a.commission,
                                   c.bank_nm,
                                   a.cpid
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1004'
							 inner join tb_bank c
                                on a.bank_code = c.bank_code    
						  	    <if test="high_store_id2 != null and high_store_id2 != ''">
								and a.high_store_id = #{high_store_id2}
								</if>										   
						  	    <if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
								and a.store_id = #{roleStore3}
								</if>		                                    
						   	    <if test="state != null and state != ''">
								and a.state = #{state}
								</if>	                                                            
							 )a  
					   inner join      
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm2,
                                   a.commission as commission2
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1003'      
						  	    <if test="high_store_id != null and high_store_id != ''">
								and a.high_store_id = #{high_store_id}
								</if>										         
						  	    <if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
								and a.store_id = #{roleStore2}
								</if>								   
							 )b
						  on a.high_store_id = b.store_id
					   inner join     
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm3,
                                   a.commission as commission3
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1002'         
						  	    <if test="roleStore != null and roleStore != ''">
								and a.store_id = #{roleStore}
								</if>							             
							 )c
						  on b.high_store_id = c.store_id             
					)b
				 on a.cpid = b.cpid                
			)a
	  where 1 = 1
		<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
		and date(a.authdate) BETWEEN #{start_datetime} AND #{end_datetime}
		</if>	
        <choose>
            <when test="amount1 != null and amount1 != '' and amount2 != null and amount2 != ''">
				and	a.amount <![CDATA[>=]]> #{amount1}
				and a.amount <![CDATA[<=]]> #{amount2}
			</when>						        
            <when test="amount1 != null and amount1 != ''">
				and	a.amount <![CDATA[>=]]> #{amount1}
			</when>
            <when test="amount2 != null and amount2 != ''">
				and a.amount <![CDATA[<=]]> #{amount2}
			</when>
		</choose>
		<if test="cardcode != null and cardcode != ''">
		and a.cardcode = #{cardcode}
		</if>					
		<if test="cardno != null and cardno != ''">
        and	a.cardno like concat('%' , #{cardno} , '%')
		</if>	
   	    <if test="quota != null and quota != ''">
		and a.quota = #{quota}
		</if>						      
   	    <if test="username != null and username != ''">
		and a.username like concat('%', #{username}, '%')
		</if>		
   	    <if test="orderno != null and orderno != ''">
		and a.orderno like concat('%', #{orderno}, '%')
		</if>		
		<if test="search_id != null and search_id != '' and search_nm != null and search_nm != ''">
	        <choose>
	            <when test="search_id == 'store_id'">
					and	a.userid like concat('%' , #{search_nm} , '%')
				</when>						        
	            <when test="search_id == 'business_nm'">
					and	a.business_nm like concat('%' , #{search_nm} , '%')
				</when>
	            <when test="search_id == 'cpid'">
					and	a.cpid like concat('%' , #{search_nm} , '%')
				</when>
	            <when test="search_id == 'terminal_id'">
					and	a.terminalid like concat('%' , #{search_nm} , '%')
				</when>
	            <when test="search_id == 'imei'">
					and	a.imei like concat('%' , #{search_nm} , '%')
				</when>
			</choose>
		</if>											   
		<if test="commission != null and commission != ''">
		and a.commission = #{commission} 
		</if> 			
		<if test="cp_type != null and cp_type != ''">
		and a.cp_type = #{cp_type} 
		</if> 			
	</select>	
	
	<select id="selectSettlementAllListExcel" parameterType="searchSettlementVO" resultMap="settlement">
	 	with store_data as (
			select a.period,
				a.store_id,
				a.high_store_id,
				a.terminal_id,
				a.imei,
				c.business_nm3,
				d.business_nm2,
				a.business_nm,
				a.cpid,
				a.commission,
				c.store_id3,
				c.commission3,
				d.store_id2,
				d.commission2,
				a.bank_code,
				(select bank_nm from tb_bank tb where bank_code=a.bank_code) bank_nm,
				a.state, 
				a.settlement_type,
				a.account_num,
				a.accounter
			from tb_store a
			inner join tb_store_role b 
				on a.store_id = b.store_id
				and b.role_id = '1004'
				and a.state = 'Y'
				and a.cpid is not null
				and a.cpid != ''
			inner join (
				select 
					a.store_id as store_id3,
					a.high_store_id as high_store_id3,
					a.business_nm as business_nm3,
					a.commission as commission3 
				from tb_store a
				inner join tb_store_role b 
					on a.store_id = b.store_id
					and b.role_id = '1003'
					and a.state = 'Y'
			)c
				on a.high_store_id = c.store_id3
			inner join (
				select 
					a.store_id as store_id2,
					a.high_store_id as high_store_id2,
					a.business_nm as business_nm2,
					a.commission as commission2
				from tb_store a
				inner join tb_store_role b 
					on a.store_id = b.store_id
					and b.role_id = '1002'
					and a.state = 'Y'
			)d
			on c.high_store_id3 = d.store_id2 
		),
		payment_data as (
			-- 페이조아 승인내역
			select 
				cast((a.amount * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
				cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
				cast((a.amount * cast((a.commission / 100 ) as float)) as int) - cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat,
				a.amount - cast((a.amount * cast((a.commission / 100 ) as float)) as int) as settlement,
				a.amount,
				ifnull(a.cancelamount,0) cancel_amount,
				a.amount - ifnull(a.cancelamount,0) as amount2,
				a.commission,
				a.cp_type,
				a.seqno,
				a.daoutrx,
				a.orderno, 
				a.username, 
				a.productname,
				a.tax_state,
				a.quota,
				a.cardno,
				a.cardcode,
				a.no,
				a.authdate,
				a.canceldate,
				a.paymenttype,
				b.store_id,
				b.high_store_id,
				b.business_nm,
				b.store_id3, 
				b.business_nm3, 
				b.store_id2, 
				b.business_nm2, 
				b.terminal_id,
				b.period,
				b.bank_code, 
				b.bank_nm, 
				b.state, 
				b.settlement_type,
				b.cpid,
				b.imei,
				a.no_cpid
			from (
				select 
					'1' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					(select amount from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as cancelamount,
					a.daoutrx,
					a.orderno,
					a.username,
					a.productname,
					a.tax_state,
					a.quota,
					a.cardno,
					a.cardcode,
					a.authdate,
					(select created_datetime from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as canceldate,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no,
					concat(a.no, '_' ,a.cpid) no_cpid
				from tb_card_auth a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 페이조아 취소내역
				select 
					'1' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(b.amount, 0) as amount,
					ifnull(a.amount, 0) as cancelamount,
					a.daoutrx,
					b.orderno,
					b.username,
					b.productname,
					b.tax_state,
					b.quota,
					b.cardno,
					b.cardcode,
					b.authdate,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no,
					concat(b.no, '_' ,b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union 
				-- 케이에스넷 승인내역
				select 
					'2' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					(select amount from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as cancelamount,
					a.daoutrx,
					a.orderno,
					a.username,
					a.productname,
					a.tax_state,
					a.quota,
					a.cardno,
					a.isscd cardcode,
					a.authdate,
					(select created_datetime from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as canceldate,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no,
					concat(a.no, '_' ,a.cpid) no_cpid
				from tb_card_auth2 a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 케이에스넷 취소내역
				select 
					'2' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(b.amount, 0) as amount,
					ifnull(a.amount, 0) as cancelamount,
					a.daoutrx,
					b.orderno,
					b.username,
					b.productname,
					b.tax_state,
					b.quota,
					b.cardno,
					b.isscd cardcode,
					b.authdate,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no,
					concat(b.no, '_' ,b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth2 b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union 
				-- 단말기결제 내역
				select 
					'1' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					(select amount from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as cancelamount,
					a.daoutrx,
					'' orderno,
					'' username,
					'' productname,
					a.tax_state,
					'' quota,
					a.cardno,
					a.cardcode,
					a.settdate authdate,
					(select created_datetime from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as canceldate,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no,
					concat(a.no, '_' ,a.cpid) no_cpid
				from tb_pay_notice a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
				union
				-- 단말기결제 취소내역
				select 
					'1' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(b.amount, 0) as amount,
					ifnull(a.amount, 0) as cancelamount,
					a.daoutrx,
					'' orderno,
					'' username,
					'' productname,
					a.tax_state,
					'' quota,
					b.cardno,
					b.cardcode,
					b.settdate authdate,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no,
					concat(b.no, '_' ,b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_pay_notice b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
			)a
			inner join store_data b 
				on a.store_id = b.store_id
			)
			select 
			  a.*
			from payment_data a
		  where 1 = 1       	
 	   <if test="list != null and list != ''">
        	and a.no_cpid in 
        	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
             #{item}
            </foreach>									
	   </if>	
	</select>
		
	<select id="selectSettlementAllInfo" parameterType="searchSettlementVO" resultMap="settlement">
	 select a.no,
			a.daoutrx,
			a.userid,
			a.orderno,
			a.username,
			a.productname,
			FORMAT(a.amount, 0) amount,
			FORMAT(cast((a.amount * cast((a.commission / 100 ) as float)) as int) - cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int), 0) as vat,
			FORMAT(cast((a.amount * cast((a.commission / 100 ) as float)) as int), 0) as franchisee_commission,
			a.authdate,
			a.cardname,
			a.cardcode,
			a.cardno,
			a.quota,
			a.terminalid,
			a.commission,
			FORMAT(cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int), 0) as commission2,
			a.commission3,
			a.tax,
			a.amount2,
			FORMAT(a.amount - cast((a.amount * cast((a.commission / 100 ) as float)) as int), 0) commission_total,
			a.commission_total2,
			a.commission_total3,            
            FORMAT((a.commission_total) - a.commission_total2 - a.commission_total3, 0) commission_total4,
			a.bank_nm,
			a.period,
			a.state,
			a.cpid,
			a.business_nm,
			a.business_nm2,
			a.business_nm3				
	   from (
			 select a.no,
					a.daoutrx,
					a.userid,
					a.orderno,
					a.username,
					a.productname,
					a.amount,
					a.vat,
					a.authdate,
					a.cardname,
					a.cardcode,
					a.cardno,
					a.quota,
					a.terminalid,
					a.commission,
					a.commission2,
					a.commission3,
					a.tax,
					a.amount2,  	
					case when a.tax = 'Y' then FORMAT(a.amount * a.commission / 100, 0)
						 when a.tax = 'N' then FORMAT(a.amount * 3.3 / 100, 0)
					end commission_total,
					case when a.tax2 = 'Y' then FORMAT(a.amount * a.commission2 / 100, 0)
						 when a.tax2 = 'N' then FORMAT(a.amount * 3.3 / 100, 0)
					end commission_total2,
					case when a.tax3 = 'Y' then FORMAT(a.amount * a.commission3 / 100, 0)
						 when a.tax3 = 'N' then FORMAT(a.amount * 3.3 / 100, 0)
					end commission_total3,                     
					a.bank_nm,
					DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y.%m.%d') as period,
					a.state,
					a.cpid,
					a.business_nm,
					a.business_nm2,
					a.business_nm3						
			   from (
					 select a.no,
							a.daoutrx,
							a.userid,
							a.orderno,
							a.username,
							a.productname,
							a.amount,
							FORMAT(a.vat, 0) vat,
							date_format(a.authdate, '%Y.%m.%d') authdate,
							a.cardname,
							a.cardcode,
							a.cardno,
							a.quota,
							b.terminalid,
							b.commission,
							b.commission2,
							b.commission3,
							b.tax,
							b.tax2,
							b.tax3,
							FORMAT(a.amount - a.vat, 0) amount2,
							b.bank_nm,
							b.period,
							b.state,
							a.cpid,
							b.business_nm,
							b.business_nm2,
							b.business_nm3							
					   from (
							select a.no,
								   a.daoutrx,
								   a.userid,
								   a.orderno,
								   a.username,
								   a.productname,
								   a.amount,
								   a.amount / 10 vat,
								   a.authdate,
								   '' cardname,
								   '' cardcode,
								   a.cardno,
								   a.quota,
								   a.cpid
							  from tb_card_auth a
							  left join tb_card_cancel b
								on b.daoutrx = a.daoutrx
							   and b.cpid = a.cpid
							  left join tb_pay_hold c
		                        on c.daoutrx = a.daoutrx
		                       and c.cpid = a.cpid                        
							 where a.resultcode = '0000'
		                       and b.daoutrx is null
							   and c.daoutrx is null
							 )a  
					  inner join (
							 select a.store_id,
									a.terminal_id terminalid,
									a.tax,
									b.tax2,
									c.tax3,
									a.business_nm,
									b.business_nm2,
									c.business_nm3,
									ifnull(a.commission, 0) commission,
									ifnull(b.commission2, 0) commission2,
									ifnull(c.commission3, 0) commission3,
									a.bank_nm,
									a.period,
									a.state
							   from (
									select a.store_id,
										   a.terminal_id,
										   a.tax,
										   a.high_store_id,
										   a.business_nm,
										   a.commission,
										   c.bank_nm,
										   a.period,
										   a.state
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1004'
									 inner join tb_bank c
										on a.bank_code = c.bank_code
									 )a  
							   inner join      
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm2,
										   a.commission as commission2,
										   a.tax as tax2
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1003'            
									 )b
								  on a.high_store_id = b.store_id
							   inner join     
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm3,
										   a.commission as commission3,
										   a.tax as tax3
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1002'                   
									 )c
								  on b.high_store_id = c.store_id             
							)b
						 on a.userid = b.store_id
					  union all
					 select a.no,
							a.daoutrx,
							a.userid,
							a.orderno,
							a.username,
							a.productname,
							a.amount,
							FORMAT(a.vat, 0) vat,
							date_format(a.authdate, '%Y.%m.%d') authdate,
							a.cardname,
							a.cardcode,
							a.cardno,
							a.quota,
							b.terminalid,
							b.commission,
							b.commission2,
							b.commission3,
							b.tax,
							b.tax2,
							b.tax3,
							FORMAT(a.amount - a.vat, 0) amount2,
							b.bank_nm,
							b.period,
							b.state,
							a.cpid,
							b.business_nm,
							b.business_nm2,
							b.business_nm3							
					   from (
							select a.no,
								   a.daoutrx,
								   a.userid,
								   a.orderno,
								   a.username,
								   a.productname,
								   a.amount,
								   a.amount / 10 vat,
								   a.authdate,
								   '' cardname,
								   '' cardcode,
								   a.cardno,
								   a.quota,
								   a.cpid
							  from tb_card_auth2 a
							  left join tb_card_cancel b
								on b.daoutrx = a.daoutrx
							   and b.cpid = a.cpid
							  left join tb_pay_hold c
		                        on c.daoutrx = a.daoutrx
		                       and c.cpid = a.cpid                        
							 where a.resultcode = '0000'
		                       and b.daoutrx is null
							   and c.daoutrx is null
							 )a  
					  inner join (
							 select a.store_id,
									a.terminal_id terminalid,
									a.tax,
									b.tax2,
									c.tax3,
									a.business_nm,
									b.business_nm2,
									c.business_nm3,
									ifnull(a.commission, 0) commission,
									ifnull(b.commission2, 0) commission2,
									ifnull(c.commission3, 0) commission3,
									a.bank_nm,
									a.period,
									a.state
							   from (
									select a.store_id,
										   a.terminal_id,
										   a.tax,
										   a.high_store_id,
										   a.business_nm,
										   a.commission,
										   c.bank_nm,
										   a.period,
										   a.state
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1004'
									 inner join tb_bank c
										on a.bank_code = c.bank_code
									 )a  
							   inner join      
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm2,
										   a.commission as commission2,
										   a.tax as tax2
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1003'            
									 )b
								  on a.high_store_id = b.store_id
							   inner join     
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm3,
										   a.commission as commission3,
										   a.tax as tax3
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1002'                   
									 )c
								  on b.high_store_id = c.store_id             
							)b
						 on a.userid = b.store_id
					  union all
					 select a.no,
							a.daoutrx,
							b.store_id userid,
							'' orderno,
							'' username,
							'' productname,             
							a.amount,
							FORMAT(a.vat, 0) vat,
							date_format(a.authdate, '%Y.%m.%d') authdate,
							a.cardname,
							a.cardcode,
							a.cardno,
							a.quota,
							a.terminalid, 
							b.commission,
							b.commission2,
							b.commission3,
							b.tax,
							b.tax2,
							b.tax3,
							FORMAT(a.amount - a.vat, 0) amount2,
							b.bank_nm,
							b.period,
							b.state,
							a.cpid,
							b.business_nm,
							b.business_nm2,
							b.business_nm3								
					   from (
							select a.no,
								   a.daoutrx,
								   a.terminalid,                           
								   a.amount,
								   a.amount / 10 vat,
								   a.settdate authdate,
								   a.cardname,
								   a.cardcode,
								   a.cardno,
								   a.allotmon quota,
								   a.cpid                
							  from tb_pay_notice a
							  left join tb_card_cancel b
								on b.daoutrx = a.daoutrx
							   and b.cpid = a.cpid
							  left join tb_pay_hold c
		                        on c.daoutrx = a.daoutrx
		                       and c.cpid = a.cpid  						
							 where b.daoutrx is null
							   and c.daoutrx is null
							 )a
					   inner join (
							 select a.store_id,
									a.terminal_id terminalid,
									a.tax,
									b.tax2,
									c.tax3,
									a.business_nm,
									b.business_nm2,
									c.business_nm3,
									ifnull(a.commission, 0) commission,
									ifnull(b.commission2, 0) commission2,
									ifnull(c.commission3, 0) commission3,
									a.bank_nm,
									a.period,
									a.state,
									a.cpid
							   from (
									select a.store_id,
										   a.terminal_id,
										   a.tax,
										   a.high_store_id,
										   a.business_nm,
										   a.commission,
										   c.bank_nm,
										   a.period,
										   a.state,
										   a.cpid
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1004'
									 inner join tb_bank c
										on a.bank_code = c.bank_code                               
									 )a  
							   inner join      
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm2,
										   a.commission as commission2,
										   a.tax as tax2
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1003'            
									 )b
								  on a.high_store_id = b.store_id
							   inner join     
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm3,
										   a.commission as commission3,
										   a.tax as tax3
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1002'                   
									 )c
								  on b.high_store_id = c.store_id             
							)b
						 on a.cpid = b.cpid                
					)a
		)a        
  where 1 = 1
    and a.no = #{no}
    and a.daoutrx = #{daoutrx}
    and a.cpid = #{cpid}
	</select>	
	
	<insert id="settlementAllHoldAdd" parameterType="searchSettlementVO">
	 insert into tb_pay_hold
	 			 (
		 			 cpid,
		 			 daoutrx,
		 			 created_id,
		 			 created_datetime
	 			 )
	 			 values
	 			 (
		 			 #{cpid},
		 			 #{daoutrx},
		 			 #{created_id},
		 			 now()
	 			 )
	</insert>	
	
	<delete id="settlementAllHoldDel" parameterType="searchSettlementVO">
		delete from tb_pay_hold
		 where daoutrx = #{daoutrx}
		   and cpid = #{cpid}
	</delete>	
	
	<select id="selectSettlementHisList" parameterType="searchSettlementVO" resultMap="settlement">
 select a.rownum,
		a.no,
		a.daoutrx,
		a.userid,
		a.orderno,
		a.username,
		a.productname,
		a.amount,
		a.vat,
		a.authdate,
		a.canceldate,
		a.cardname,
		a.cardcode,
		a.cardno,
		a.quota,
		a.terminalid,
		a.commission,
		a.commission2,
		a.commission3,
		a.business_nm,
		a.business_nm2,
		a.business_nm3,  			
		a.tax,
		a.amount2,
		a.bank_nm,
		a.period,
		a.state,
	    a.commission_total,
	    a.cpid,
	    a.no_cpid,
	    a.cp_type
   from (  	
		 select a.rownum,
				a.no,
				a.daoutrx,
				a.userid,
				a.orderno,
				a.username,
				a.productname,
				a.amount,
				a.vat,
				a.authdate,
				a.canceldate,
				a.cardname,
				a.cardcode,
				a.cardno,
				a.quota,
				a.terminalid,
				a.commission,
				a.commission2,
				a.commission3,
				a.business_nm,
				a.business_nm2,
				a.business_nm3,  			
				a.tax,
				a.amount2,
				a.bank_nm,
				a.period,
				a.state,
			    a.commission_total,
			    a.cpid,
			    a.no_cpid,
			    a.cp_type  	
		   from (    	
				 select @rownum:=@rownum+1 AS rownum,
						a.no,
						a.daoutrx,
						a.userid,
						a.orderno,
						a.username,
						a.productname,
						a.amount,
						a.vat,
						a.authdate,
						a.canceldate,
						a.cardname,
						a.cardcode,
						a.cardno,
						a.quota,
						a.terminalid,
						a.commission,
						a.commission2,
						a.commission3,
						a.business_nm,
						a.business_nm2,
						a.business_nm3,  			
						a.tax,
						a.amount2,
						a.bank_nm,
						DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y.%m.%d') as period,
						a.state,
					    case when a.commission is not null then FORMAT(a.amount * a.commission / 100, 0)
					    else FORMAT(a.amount, 0)
					    end commission_total,
					    a.cpid,
					    concat(a.no, '_' ,a.cpid) no_cpid,
					    a.cp_type  			
				   from (
			 		 	 select a.no,
							    a.daoutrx,
							    a.userid,
							    a.orderno,
							    a.username,
							    a.productname,
							    FORMAT(a.amount, 0) amount,
			                    FORMAT(a.vat, 0) vat,
							    date_format(a.authdate, '%Y.%m.%d') authdate,
							    date_format(a.canceldate, '%Y.%m.%d') canceldate,
							    a.cardname,
							    a.cardcode,
			                    a.cardno,
			                    a.quota,
			                    b.terminalid,
			                    b.commission,
			                    b.commission2,
			                    b.commission3,
								b.business_nm,
								b.business_nm2,
								b.business_nm3,                    
			                    b.tax,
			                    FORMAT(a.amount - a.vat, 0) amount2,
			                    b.bank_nm,
			                    b.period,
			                    b.state,
			                    a.cpid,
			                    a.cp_type
						   from (
								select a.no,
									   a.daoutrx,
			                           a.userid,
			                           a.orderno,
			                           a.username,
			                           a.productname,
									   a.amount,
			                           a.amount / 10 vat,
			                           a.authdate,
			                           b.created_datetime canceldate,
			                           '' cardname,
			                           '' cardcode,
			                           a.cardno,
			                           a.quota,
			                           a.cpid,
			                           '1' cp_type
								  from tb_card_auth a
								  left join tb_card_cancel b
									on b.daoutrx = a.daoutrx
								   and b.cpid = a.cpid
								 inner join tb_pay_hold c
			                        on a.daoutrx = c.daoutrx     
			                       and a.cpid = c.cpid                   
								 where a.resultcode = '0000'
			                       and b.daoutrx is null
							  	    <if test="tax_state != null and tax_state != ''">
								        <choose>
								            <when test='tax_state == "N"'>
												and	a.tax_state not in ('0','1')
											</when>						        
								            <when test='tax_state == "Y"'>
												and	a.tax_state = #{tax_state2}
											</when>
										</choose>				  	    
									</if>			                       
			                     )a  
						  inner join (
								 select a.store_id,
										a.terminal_id terminalid,
										a.tax,
										a.business_nm,
										b.business_nm2,
										c.business_nm3,
			                            ifnull(a.commission, 0) commission,
			                            ifnull(b.commission2, 0) commission2,
			                            ifnull(c.commission3, 0) commission3,
			                            a.bank_nm,
			                            a.period,
			                            a.state
								   from (
										select a.store_id,
											   a.terminal_id,
											   a.tax,
											   a.high_store_id,
											   a.business_nm,
			                                   a.commission,
			                                   c.bank_nm,
			                                   a.period,
			                                   a.state
										  from tb_store a
										 inner join tb_store_role b
											on a.store_id = b.store_id
										   and b.role_id = '1004'
										 inner join tb_bank c
			                                on a.bank_code = c.bank_code
									  	    <if test="high_store_id2 != null and high_store_id2 != ''">
											and a.high_store_id = #{high_store_id2}
											</if>				                                
									   	    <if test="state != null and state != ''">
											and a.state = #{state}
											</if>	                                
										 )a  
								   inner join      
										 (
										select a.store_id,
											   a.terminal_id,
											   a.high_store_id,
											   a.business_nm as business_nm2,
			                                   a.commission as commission2
										  from tb_store a
										 inner join tb_store_role b
											on a.store_id = b.store_id
										   and b.role_id = '1003'          
									  	    <if test="high_store_id != null and high_store_id != ''">
											and a.high_store_id = #{high_store_id}
											</if>										     
										 )b
									  on a.high_store_id = b.store_id
								   inner join     
										 (
										select a.store_id,
											   a.terminal_id,
											   a.high_store_id,
											   a.business_nm as business_nm3,
			                                   a.commission as commission3
										  from tb_store a
										 inner join tb_store_role b
											on a.store_id = b.store_id
										   and b.role_id = '1002'    
										 )c
									  on b.high_store_id = c.store_id             
								)b
							 on a.userid = b.store_id
						  union all
			 		 	 select a.no,
							    a.daoutrx,
							    a.userid,
							    a.orderno,
							    a.username,
							    a.productname,
							    FORMAT(a.amount, 0) amount,
			                    FORMAT(a.vat, 0) vat,
							    date_format(a.authdate, '%Y.%m.%d') authdate,
							    date_format(a.canceldate, '%Y.%m.%d') canceldate,
							    a.cardname,
							    a.cardcode,
			                    a.cardno,
			                    a.quota,
			                    b.terminalid,
			                    b.commission,
			                    b.commission2,
			                    b.commission3,
								b.business_nm,
								b.business_nm2,
								b.business_nm3,                    
			                    b.tax,
			                    FORMAT(a.amount - a.vat, 0) amount2,
			                    b.bank_nm,
			                    b.period,
			                    b.state,
			                    a.cpid,
			                    a.cp_type
						   from (
								select a.no,
									   a.daoutrx,
			                           a.userid,
			                           a.orderno,
			                           a.username,
			                           a.productname,
									   a.amount,
			                           a.amount / 10 vat,
			                           a.authdate,
			                           b.created_datetime canceldate,
			                           '' cardname,
			                           '' cardcode,
			                           a.cardno,
			                           a.quota,
			                           a.cpid,
			                           '2' cp_type
								  from tb_card_auth2 a
								  left join tb_card_cancel b
									on b.daoutrx = a.daoutrx
								   and b.cpid = a.cpid
								 inner join tb_pay_hold c
			                        on a.daoutrx = c.daoutrx     
			                       and a.cpid = c.cpid                   
								 where a.resultcode = '0000'
			                       and b.daoutrx is null
							  	    <if test="tax_state != null and tax_state != ''">
								        <choose>
								            <when test='tax_state == "N"'>
												and	a.tax_state not in ('0','1')
											</when>						        
								            <when test='tax_state == "Y"'>
												and	a.tax_state = #{tax_state2}
											</when>
										</choose>				  	    
									</if>			                       
			                     )a  
						  inner join (
								 select a.store_id,
										a.terminal_id terminalid,
										a.tax,
										a.business_nm,
										b.business_nm2,
										c.business_nm3,
			                            ifnull(a.commission, 0) commission,
			                            ifnull(b.commission2, 0) commission2,
			                            ifnull(c.commission3, 0) commission3,
			                            a.bank_nm,
			                            a.period,
			                            a.state
								   from (
										select a.store_id,
											   a.terminal_id,
											   a.tax,
											   a.high_store_id,
											   a.business_nm,
			                                   a.commission,
			                                   c.bank_nm,
			                                   a.period,
			                                   a.state
										  from tb_store a
										 inner join tb_store_role b
											on a.store_id = b.store_id
										   and b.role_id = '1004'
										 inner join tb_bank c
			                                on a.bank_code = c.bank_code
									  	    <if test="high_store_id2 != null and high_store_id2 != ''">
											and a.high_store_id = #{high_store_id2}
											</if>				                                
									   	    <if test="state != null and state != ''">
											and a.state = #{state}
											</if>	                                
										 )a  
								   inner join      
										 (
										select a.store_id,
											   a.terminal_id,
											   a.high_store_id,
											   a.business_nm as business_nm2,
			                                   a.commission as commission2
										  from tb_store a
										 inner join tb_store_role b
											on a.store_id = b.store_id
										   and b.role_id = '1003'            
									  	    <if test="high_store_id != null and high_store_id != ''">
											and a.high_store_id = #{high_store_id}
											</if>										   
										 )b
									  on a.high_store_id = b.store_id
								   inner join     
										 (
										select a.store_id,
											   a.terminal_id,
											   a.high_store_id,
											   a.business_nm as business_nm3,
			                                   a.commission as commission3
										  from tb_store a
										 inner join tb_store_role b
											on a.store_id = b.store_id
										   and b.role_id = '1002'    
										 )c
									  on b.high_store_id = c.store_id             
								)b
							 on a.userid = b.store_id			  
						  union all
						 select a.no,
							    a.daoutrx,
			                    b.store_id userid,
							    '' orderno,
							    '' username,
							    '' productname,             
							    FORMAT(a.amount, 0) amount,
			                    FORMAT(a.vat, 0) vat,
							    date_format(a.authdate, '%Y.%m.%d') authdate,
							    date_format(a.canceldate, '%Y.%m.%d') canceldate,
							    a.cardname,
							    a.cardcode,
							    a.cardno,
							    a.quota,
			                    a.terminalid, 
			                    b.commission,
			                    b.commission2,
			                    b.commission3,
								b.business_nm,
								b.business_nm2,
								b.business_nm3,                      
			                    b.tax,
			                    FORMAT(a.amount - a.vat, 0) amount2,
			                    b.bank_nm,
			                    b.period,
			                    b.state,
			                    a.cpid,
			                    a.cp_type
					  	   from (
								select a.no,
									   a.daoutrx,
			                           a.terminalid,                           
									   a.amount,
			                           a.amount / 10 vat,
			                           a.settdate authdate,
			                           b.created_datetime canceldate,
			                           a.cardname,
			                           a.cardcode,
			                           a.cardno,
			                           a.allotmon quota,
			                           a.cpid,
			                           '1' cp_type                           
								  from tb_pay_notice a
								  left join tb_card_cancel b
									on b.daoutrx = a.daoutrx
								   and b.cpid = a.cpid
								 inner join tb_pay_hold c
			                        on a.daoutrx = c.daoutrx
			                       and a.cpid = c.cpid  						
								 where b.daoutrx is null
							  	    <if test="tax_state != null and tax_state != ''">
								        <choose>
								            <when test='tax_state == "N"'>
												and	a.tax_state not in ('0','1')
											</when>						        
								            <when test='tax_state == "Y"'>
												and	a.tax_state = #{tax_state2}
											</when>
										</choose>				  	    
									</if>										 
			                     )a
						   inner join (
								 select a.store_id,
										a.terminal_id terminalid,
										a.tax,
										a.business_nm,
										b.business_nm2,
										c.business_nm3,
			                            ifnull(a.commission, 0) commission,
			                            ifnull(b.commission2, 0) commission2,
			                            ifnull(c.commission3, 0) commission3,
			                            a.bank_nm,
			                            a.period,
			                            a.state,
			                            a.cpid
								   from (
										select a.store_id,
											   a.terminal_id,
											   a.tax,
											   a.high_store_id,
											   a.business_nm,
			                                   a.commission,
			                                   c.bank_nm,
			                                   a.period,
			                                   a.state,
			                                   a.cpid
										  from tb_store a
										 inner join tb_store_role b
											on a.store_id = b.store_id
										   and b.role_id = '1004'
										 inner join tb_bank c
			                                on a.bank_code = c.bank_code       
									  	    <if test="high_store_id2 != null and high_store_id2 != ''">
											and a.high_store_id = #{high_store_id2}
											</if>			                                
				   	 					    <if test="state != null and state != ''">
											and a.state = #{state}
											</if>	                                                        
										 )a  
								   inner join      
										 (
										select a.store_id,
											   a.terminal_id,
											   a.high_store_id,
											   a.business_nm as business_nm2,
			                                   a.commission as commission2
										  from tb_store a
										 inner join tb_store_role b
											on a.store_id = b.store_id
										   and b.role_id = '1003'         
									  	    <if test="high_store_id != null and high_store_id != ''">
											and a.high_store_id = #{high_store_id}
											</if>										   
										 )b
									  on a.high_store_id = b.store_id
								   inner join     
										 (
										select a.store_id,
											   a.terminal_id,
											   a.high_store_id,
											   a.business_nm as business_nm3,
			                                   a.commission as commission3
										  from tb_store a
										 inner join tb_store_role b
											on a.store_id = b.store_id
										   and b.role_id = '1002'          
										 )c
									  on b.high_store_id = c.store_id             
								)b
							 on a.cpid = b.cpid                
						)a 
			      where (SELECT @ROWNUM:=0)=0
			   	    <if test="userid != null and userid != ''">
					and a.userid = #{userid}
					</if>      
					<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
					and date(a.authdate) BETWEEN #{start_datetime} AND #{end_datetime}
					</if>	
					<if test="search_id != null and search_id != '' and search_nm != null and search_nm != ''">
				        <choose>
				            <when test="search_id == 'store_id'">
								and	a.userid like concat('%' , #{search_nm} , '%')
							</when>						        
				            <when test="search_id == 'cpid'">
								and	a.cpid like concat('%' , #{search_nm} , '%')
							</when>
				            <when test="search_id == 'terminal_id'">
								and	a.terminalid like concat('%' , #{search_nm} , '%')
							</when>
						</choose>
					</if>															   
					<if test="commission != null and commission != ''">
					and a.commission = #{commission} 
					</if>  			
					<if test="cp_type != null and cp_type != ''">
					and a.cp_type = #{cp_type} 
					</if>  			
				)a		
		  where 1 = 1      			   
		   order by case when #{order_no} = '1' then (	
						case #{order_id} when 'userid' then a.userid 
									    when 'cpid' then a.cpid 
									    when 'terminalid' then a.terminalid 
		                                when 'period' then a.period 
		                                when 'authdate' then a.authdate 
		                                when 'canceldate' then a.canceldate 
		                                when 'bank_nm' then a.bank_nm 
		                                when 'orderno' then a.orderno 
		                                when 'username' then a.username
		                                when 'productname' then a.productname
		                                when 'amount' then a.amount
		                                when 'commission' then a.commission
		                                when 'vat' then a.vat
		                                when 'commission_total' then a.commission_total
		                                when 'business_nm3' then a.business_nm3
		                                when 'business_nm2' then a.business_nm2
		                                when 'state' then a.state
		                                end       
						)END ASC,
					case when #{order_no} = '2' then (	
						case #{order_id} when 'userid' then a.userid 
									    when 'cpid' then a.cpid 
									    when 'terminalid' then a.terminalid 
		                                when 'period' then a.period 
		                                when 'authdate' then a.authdate 
		                                when 'canceldate' then a.canceldate 
		                                when 'bank_nm' then a.bank_nm 
		                                when 'orderno' then a.orderno 
		                                when 'username' then a.username 
		                                when 'productname' then a.productname
		                                when 'amount' then a.amount
		                                when 'commission' then a.commission
		                                when 'vat' then a.vat
		                                when 'commission_total' then a.commission_total
		                                when 'business_nm3' then a.business_nm3
		                                when 'business_nm2' then a.business_nm2
		                                when 'state' then a.state
									    end 
						)END DESC		
              )a
   	    LIMIT #{recordCountPerPage} OFFSET #{firstIndex}	  							     
	</select>
	
	<select id="selectSettlementHisListCnt" parameterType="searchSettlementVO" resultMap="settlement">
	 select count(*) tocnt, ifnull(FORMAT(sum(a.amount2), 0), 0) amount		
	   from (
 		 	 select a.no,
				    a.daoutrx,
				    a.userid,
				    a.orderno,
				    a.username,
				    a.productname,
				    FORMAT(a.amount, 0) amount,
                    FORMAT(a.vat, 0) vat,
				    date_format(a.authdate, '%Y.%m.%d') authdate,
				    date_format(a.canceldate, '%Y.%m.%d') canceldate,
				    a.cardname,
				    a.cardcode,
                    a.cardno,
                    a.quota,
                    b.terminalid,
                    b.commission,
                    b.commission2,
                    b.commission3,
					b.business_nm,
					b.business_nm2,
					b.business_nm3,                    
                    b.tax,
                    FORMAT(a.amount - a.vat, 0) amount2,
                    b.bank_nm,
                    b.period,
                    b.state,
                    a.cpid,
                    a.cp_type
			   from (
					select a.no,
						   a.daoutrx,
                           a.userid,
                           a.orderno,
                           a.username,
                           a.productname,
						   a.amount,
                           a.amount / 10 vat,
                           a.authdate,
                           b.created_datetime canceldate,
                           '' cardname,
                           '' cardcode,
                           a.cardno,
                           a.quota,
                           a.cpid,
                           '1' cp_type
					  from tb_card_auth a
					  left join tb_card_cancel b
						on b.daoutrx = a.daoutrx
					   and b.cpid = a.cpid
					 inner join tb_pay_hold c
                        on a.daoutrx = c.daoutrx     
                       and a.cpid = c.cpid                   
					 where a.resultcode = '0000'
                       and b.daoutrx is null
				  	    <if test="tax_state != null and tax_state != ''">
					        <choose>
					            <when test='tax_state == "N"'>
									and	a.tax_state not in ('0','1')
								</when>						        
					            <when test='tax_state == "Y"'>
									and	a.tax_state = #{tax_state2}
								</when>
							</choose>				  	    
						</if>	                     
                     )a  
			  inner join (
					 select a.store_id,
							a.terminal_id terminalid,
							a.tax,
							a.business_nm,
							b.business_nm2,
							c.business_nm3,
                            ifnull(a.commission, 0) commission,
                            ifnull(b.commission2, 0) commission2,
                            ifnull(c.commission3, 0) commission3,
                            a.bank_nm,
                            a.period,
                            a.state
					   from (
							select a.store_id,
								   a.terminal_id,
								   a.tax,
								   a.high_store_id,
								   a.business_nm,
                                   a.commission,
                                   c.bank_nm,
                                   a.period,
                                   a.state
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1004'
							 inner join tb_bank c
                                on a.bank_code = c.bank_code
						  	    <if test="high_store_id2 != null and high_store_id2 != ''">
								and a.high_store_id = #{high_store_id2}
								</if>			                                
						   	    <if test="state != null and state != ''">
								and a.state = #{state}
								</if>	                                
							 )a  
					   inner join      
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm2,
                                   a.commission as commission2
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1003'            
						  	    <if test="high_store_id != null and high_store_id != ''">
								and a.high_store_id = #{high_store_id}
								</if>									   
							 )b
						  on a.high_store_id = b.store_id
					   inner join     
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm3,
                                   a.commission as commission3
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1002'    
							 )c
						  on b.high_store_id = c.store_id             
					)b
				 on a.userid = b.store_id
			  union all
 		 	 select a.no,
				    a.daoutrx,
				    a.userid,
				    a.orderno,
				    a.username,
				    a.productname,
				    FORMAT(a.amount, 0) amount,
                    FORMAT(a.vat, 0) vat,
				    date_format(a.authdate, '%Y.%m.%d') authdate,
				    date_format(a.canceldate, '%Y.%m.%d') canceldate,
				    a.cardname,
				    a.cardcode,
                    a.cardno,
                    a.quota,
                    b.terminalid,
                    b.commission,
                    b.commission2,
                    b.commission3,
					b.business_nm,
					b.business_nm2,
					b.business_nm3,                    
                    b.tax,
                    FORMAT(a.amount - a.vat, 0) amount2,
                    b.bank_nm,
                    b.period,
                    b.state,
                    a.cpid,
                    a.cp_type
			   from (
					select a.no,
						   a.daoutrx,
                           a.userid,
                           a.orderno,
                           a.username,
                           a.productname,
						   a.amount,
                           a.amount / 10 vat,
                           a.authdate,
                           b.created_datetime canceldate,
                           '' cardname,
                           '' cardcode,
                           a.cardno,
                           a.quota,
                           a.cpid,
                           '2' cp_type
					  from tb_card_auth2 a
					  left join tb_card_cancel b
						on b.daoutrx = a.daoutrx
					   and b.cpid = a.cpid
					 inner join tb_pay_hold c
                        on a.daoutrx = c.daoutrx     
                       and a.cpid = c.cpid                   
					 where a.resultcode = '0000'
                       and b.daoutrx is null
				  	    <if test="tax_state != null and tax_state != ''">
					        <choose>
					            <when test='tax_state == "N"'>
									and	a.tax_state not in ('0','1')
								</when>						        
					            <when test='tax_state == "Y"'>
									and	a.tax_state = #{tax_state2}
								</when>
							</choose>				  	    
						</if>	                      
                     )a  
			  inner join (
					 select a.store_id,
							a.terminal_id terminalid,
							a.tax,
							a.business_nm,
							b.business_nm2,
							c.business_nm3,
                            ifnull(a.commission, 0) commission,
                            ifnull(b.commission2, 0) commission2,
                            ifnull(c.commission3, 0) commission3,
                            a.bank_nm,
                            a.period,
                            a.state
					   from (
							select a.store_id,
								   a.terminal_id,
								   a.tax,
								   a.high_store_id,
								   a.business_nm,
                                   a.commission,
                                   c.bank_nm,
                                   a.period,
                                   a.state
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1004'
							 inner join tb_bank c
                                on a.bank_code = c.bank_code
						  	    <if test="high_store_id2 != null and high_store_id2 != ''">
								and a.high_store_id = #{high_store_id2}
								</if>	                                
						   	    <if test="state != null and state != ''">
								and a.state = #{state}
								</if>	                                
							 )a  
					   inner join      
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm2,
                                   a.commission as commission2
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1003'        
						  	    <if test="high_store_id != null and high_store_id != ''">
								and a.high_store_id = #{high_store_id}
								</if>								       
							 )b
						  on a.high_store_id = b.store_id
					   inner join     
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm3,
                                   a.commission as commission3
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1002'    
							 )c
						  on b.high_store_id = c.store_id             
					)b
				 on a.userid = b.store_id			  
			  union all
			 select a.no,
				    a.daoutrx,
                    b.store_id userid,
				    '' orderno,
				    '' username,
				    '' productname,             
				    FORMAT(a.amount, 0) amount,
                    FORMAT(a.vat, 0) vat,
				    date_format(a.authdate, '%Y.%m.%d') authdate,
				    date_format(a.canceldate, '%Y.%m.%d') canceldate,
				    a.cardname,
				    a.cardcode,
				    a.cardno,
				    a.quota,
                    a.terminalid, 
                    b.commission,
                    b.commission2,
                    b.commission3,
					b.business_nm,
					b.business_nm2,
					b.business_nm3,                      
                    b.tax,
                    FORMAT(a.amount - a.vat, 0) amount2,
                    b.bank_nm,
                    b.period,
                    b.state,
                    a.cpid,
                    a.cp_type
		  	   from (
					select a.no,
						   a.daoutrx,
                           a.terminalid,                           
						   a.amount,
                           a.amount / 10 vat,
                           a.settdate authdate,
                           b.created_datetime canceldate,
                           a.cardname,
                           a.cardcode,
                           a.cardno,
                           a.allotmon quota,
                           a.cpid,
                           '1' cp_type                           
					  from tb_pay_notice a
					  left join tb_card_cancel b
						on b.daoutrx = a.daoutrx
					   and b.cpid = a.cpid
					 inner join tb_pay_hold c
                        on a.daoutrx = c.daoutrx
                       and a.cpid = c.cpid  						
					 where b.daoutrx is null
			  	    <if test="tax_state != null and tax_state != ''">
				        <choose>
				            <when test='tax_state == "N"'>
								and	a.tax_state not in ('0','1')
							</when>						        
				            <when test='tax_state == "Y"'>
								and	a.tax_state = #{tax_state2}
							</when>
						</choose>				  	    
					</if>						 
                     )a
			   inner join (
					 select a.store_id,
							a.terminal_id terminalid,
							a.tax,
							a.business_nm,
							b.business_nm2,
							c.business_nm3,
                            ifnull(a.commission, 0) commission,
                            ifnull(b.commission2, 0) commission2,
                            ifnull(c.commission3, 0) commission3,
                            a.bank_nm,
                            a.period,
                            a.state,
                            a.cpid
					   from (
							select a.store_id,
								   a.terminal_id,
								   a.tax,
								   a.high_store_id,
								   a.business_nm,
                                   a.commission,
                                   c.bank_nm,
                                   a.period,
                                   a.state,
                                   a.cpid
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1004'
							 inner join tb_bank c
                                on a.bank_code = c.bank_code       
						  	    <if test="high_store_id2 != null and high_store_id2 != ''">
								and a.high_store_id = #{high_store_id2}
								</if>	                                
	   	 					    <if test="state != null and state != ''">
								and a.state = #{state}
								</if>	                                                        
							 )a  
					   inner join      
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm2,
                                   a.commission as commission2
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1003'         
						  	    <if test="high_store_id != null and high_store_id != ''">
								and a.high_store_id = #{high_store_id}
								</if>								   
							 )b
						  on a.high_store_id = b.store_id
					   inner join     
							 (
							select a.store_id,
								   a.terminal_id,
								   a.high_store_id,
								   a.business_nm as business_nm3,
                                   a.commission as commission3
							  from tb_store a
							 inner join tb_store_role b
								on a.store_id = b.store_id
							   and b.role_id = '1002'          
							 )c
						  on b.high_store_id = c.store_id             
					)b
				 on a.cpid = b.cpid                
			)a 
      where (SELECT @ROWNUM:=0)=0
   	    <if test="userid != null and userid != ''">
		and a.userid = #{userid}
		</if>      
		<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
		and date(a.authdate) BETWEEN #{start_datetime} AND #{end_datetime}
		</if>	
		<if test="search_id != null and search_id != '' and search_nm != null and search_nm != ''">
	        <choose>
	            <when test="search_id == 'store_id'">
					and	a.userid like concat('%' , #{search_nm} , '%')
				</when>						        
	            <when test="search_id == 'cpid'">
					and	a.cpid like concat('%' , #{search_nm} , '%')
				</when>
	            <when test="search_id == 'terminal_id'">
					and	a.terminalid like concat('%' , #{search_nm} , '%')
				</when>
			</choose>
		</if>											   
		<if test="commission != null and commission != ''">
		and a.commission = #{commission} 
		</if>  	
		<if test="cp_type != null and cp_type != ''">
		and a.cp_type = #{cp_type} 
		</if>  	
	</select>	
	
	<select id="selectSettlementHisListExcel" parameterType="searchSettlementVO" resultMap="settlement">
	 select a.rownum,
        a.no,
        a.daoutrx,
        a.userid,
        a.orderno,
        a.username,
        a.productname,
        a.amount,
        a.vat,
        a.authdate,
        a.canceldate,
        a.cardname,
        a.cardcode,
        a.cardno,
        a.quota,
        a.terminalid,
        a.commission,
        a.commission2,
        a.commission3,
        a.business_nm,
        a.business_nm2,
        a.business_nm3,             
        a.tax,
        a.imei,
        a.amount2,
        a.bank_nm,
        a.period,
        a.state,
        a.commission_total,
        a.cpid,
        a.no_cpid,
        a.cp_type
   from (   
         select a.rownum,
                a.no,
                a.daoutrx,
                a.userid,
                a.orderno,
                a.username,
                a.productname,
                a.amount,
                a.vat,
                a.authdate,
                a.canceldate,
                a.cardname,
                a.cardcode,
                a.cardno,
                a.quota,
                a.terminalid,
                a.commission,
                a.commission2,
                a.commission3,
                a.business_nm,
                a.business_nm2,
                a.business_nm3,             
                a.tax,
                a.imei,
                a.amount2,
                a.bank_nm,
                a.period,
                a.state,
                a.commission_total,
                a.cpid,
                a.no_cpid,
                a.cp_type   
           from (       
                 select @rownum:=@rownum+1 AS rownum,
                        a.no,
                        a.daoutrx,
                        a.userid,
                        a.orderno,
                        a.username,
                        a.productname,
                        a.amount,
                        a.vat,
                        a.authdate,
                        a.canceldate,
                        a.cardname,
                        a.cardcode,
                        a.cardno,
                        a.quota,
                        a.terminalid,
                        a.commission,
                        a.commission2,
                        a.commission3,
                        a.business_nm,
                        a.business_nm2,
                        a.business_nm3,             
                        a.tax,
                        a.imei,
                        a.amount2,
                        a.bank_nm,
                        DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y.%m.%d') as period,
                        a.state,
                        case when a.commission is not null then FORMAT(a.amount * a.commission / 100, 0)
                        else FORMAT(a.amount, 0)
                        end commission_total,
                        a.cpid,
                        concat(a.no, '_' ,a.cpid) no_cpid,
                        a.cp_type           
                   from (
                         select a.no,
                                a.daoutrx,
                                a.userid,
                                a.orderno,
                                a.username,
                                a.productname,
                                FORMAT(a.amount, 0) amount,
                                FORMAT(a.vat, 0) vat,
                                date_format(a.authdate, '%Y.%m.%d') authdate,
                                date_format(a.canceldate, '%Y.%m.%d') canceldate,
                                a.cardname,
                                a.cardcode,
                                a.cardno,
                                a.quota,
                                b.terminalid,
                                b.commission,
                                b.commission2,
                                b.commission3,
                                b.business_nm,
                                b.business_nm2,
                                b.business_nm3,                    
                                b.tax,
                                b.imei,
                                FORMAT(a.amount - a.vat, 0) amount2,
                                b.bank_nm,
                                b.period,
                                b.state,
                                a.cpid,
                                a.cp_type
                           from (
                                select a.no,
                                       a.daoutrx,
                                       a.userid,
                                       a.orderno,
                                       a.username,
                                       a.productname,
                                       a.amount,
                                       a.amount / 10 vat,
                                       a.authdate,
                                       b.created_datetime canceldate,
                                       '' cardname,
                                       '' cardcode,
                                       a.cardno,
                                       a.quota,
                                       a.cpid,
                                       '1' cp_type
                                  from tb_card_auth a
                                  left join tb_card_cancel b
                                    on b.daoutrx = a.daoutrx
                                   and b.cpid = a.cpid
                                 inner join tb_pay_hold c
                                    on a.daoutrx = c.daoutrx     
                                   and a.cpid = c.cpid                   
                                 where a.resultcode = '0000'
                                   and b.daoutrx is null                               
                                 )a  
                          inner join (
                                 select a.store_id,
                                        a.terminal_id terminalid,
                                        a.imei,
                                        a.tax,
                                        a.business_nm,
                                        b.business_nm2,
                                        c.business_nm3,
                                        ifnull(a.commission, 0) commission,
                                        ifnull(b.commission2, 0) commission2,
                                        ifnull(c.commission3, 0) commission3,
                                        a.bank_nm,
                                        a.period,
                                        a.state
                                   from (
                                        select a.store_id,
                                               a.terminal_id,
                                               a.imei,
                                               a.tax,
                                               a.high_store_id,
                                               a.business_nm,
                                               a.commission,
                                               c.bank_nm,
                                               a.period,
                                               a.state
                                          from tb_store a
                                         inner join tb_store_role b
                                            on a.store_id = b.store_id
                                           and b.role_id = '1004'
                                         inner join tb_bank c
                                            on a.bank_code = c.bank_code                                
                                         )a  
                                   inner join      
                                         (
                                        select a.store_id,
                                               a.terminal_id,
                                               a.imei,
                                               a.high_store_id,
                                               a.business_nm as business_nm2,
                                               a.commission as commission2
                                          from tb_store a
                                         inner join tb_store_role b
                                            on a.store_id = b.store_id
                                           and b.role_id = '1003'                                         
                                         )b
                                      on a.high_store_id = b.store_id
                                   inner join     
                                         (
                                        select a.store_id,
                                               a.terminal_id,
                                               a.imei,
                                               a.high_store_id,
                                               a.business_nm as business_nm3,
                                               a.commission as commission3
                                          from tb_store a
                                         inner join tb_store_role b
                                            on a.store_id = b.store_id
                                           and b.role_id = '1002'    
                                         )c
                                      on b.high_store_id = c.store_id             
                                )b
                             on a.userid = b.store_id
                          union all
                         select a.no,
                                a.daoutrx,
                                a.userid,
                                a.orderno,
                                a.username,
                                a.productname,
                                FORMAT(a.amount, 0) amount,
                                FORMAT(a.vat, 0) vat,
                                date_format(a.authdate, '%Y.%m.%d') authdate,
                                date_format(a.canceldate, '%Y.%m.%d') canceldate,
                                a.cardname,
                                a.cardcode,
                                a.cardno,
                                a.quota,
                                b.terminalid,
                                b.commission,
                                b.commission2,
                                b.commission3,
                                b.business_nm,
                                b.business_nm2,
                                b.business_nm3,                    
                                b.tax,
                                b.imei,
                                FORMAT(a.amount - a.vat, 0) amount2,
                                b.bank_nm,
                                b.period,
                                b.state,
                                a.cpid,
                                a.cp_type
                           from (
                                select a.no,
                                       a.daoutrx,
                                       a.userid,
                                       a.orderno,
                                       a.username,
                                       a.productname,
                                       a.amount,
                                       a.amount / 10 vat,
                                       a.authdate,
                                       b.created_datetime canceldate,
                                       '' cardname,
                                       '' cardcode,
                                       a.cardno,
                                       a.quota,
                                       a.cpid,
                                       '2' cp_type
                                  from tb_card_auth2 a
                                  left join tb_card_cancel b
                                    on b.daoutrx = a.daoutrx
                                   and b.cpid = a.cpid
                                 inner join tb_pay_hold c
                                    on a.daoutrx = c.daoutrx     
                                   and a.cpid = c.cpid                   
                                 where a.resultcode = '0000'
                                   and b.daoutrx is null                               
                                 )a  
                          inner join (
                                 select a.store_id,
                                        a.terminal_id terminalid,
                                        a.imei,
                                        a.tax,
                                        a.business_nm,
                                        b.business_nm2,
                                        c.business_nm3,
                                        ifnull(a.commission, 0) commission,
                                        ifnull(b.commission2, 0) commission2,
                                        ifnull(c.commission3, 0) commission3,
                                        a.bank_nm,
                                        a.period,
                                        a.state
                                   from (
                                        select a.store_id,
                                               a.terminal_id,
                                               a.imei,
                                               a.tax,
                                               a.high_store_id,
                                               a.business_nm,
                                               a.commission,
                                               c.bank_nm,
                                               a.period,
                                               a.state
                                          from tb_store a
                                         inner join tb_store_role b
                                            on a.store_id = b.store_id
                                           and b.role_id = '1004'
                                         inner join tb_bank c
                                            on a.bank_code = c.bank_code                                 
                                         )a  
                                   inner join      
                                         (
                                        select a.store_id,
                                               a.terminal_id,
                                               a.imei,
                                               a.high_store_id,
                                               a.business_nm as business_nm2,
                                               a.commission as commission2
                                          from tb_store a
                                         inner join tb_store_role b
                                            on a.store_id = b.store_id
                                           and b.role_id = '1003'                                      
                                         )b
                                      on a.high_store_id = b.store_id
                                   inner join     
                                         (
                                        select a.store_id,
                                               a.terminal_id,
                                               a.imei,
                                               a.high_store_id,
                                               a.business_nm as business_nm3,
                                               a.commission as commission3
                                          from tb_store a
                                         inner join tb_store_role b
                                            on a.store_id = b.store_id
                                           and b.role_id = '1002'    
                                         )c
                                      on b.high_store_id = c.store_id             
                                )b
                             on a.userid = b.store_id             
                          union all
                         select a.no,
                                a.daoutrx,
                                b.store_id userid,
                                '' orderno,
                                '' username,
                                '' productname,             
                                FORMAT(a.amount, 0) amount,
                                FORMAT(a.vat, 0) vat,
                                date_format(a.authdate, '%Y.%m.%d') authdate,
                                date_format(a.canceldate, '%Y.%m.%d') canceldate,
                                a.cardname,
                                a.cardcode,
                                a.cardno,
                                a.quota,
                                a.terminalid, 
                                b.commission,
                                b.commission2,
                                b.commission3,
                                b.business_nm,
                                b.business_nm2,
                                b.business_nm3,                      
                                b.tax,
                                b.imei,
                                FORMAT(a.amount - a.vat, 0) amount2,
                                b.bank_nm,
                                b.period,
                                b.state,
                                a.cpid,
                                a.cp_type
                           from (
                                select a.no,
                                       a.daoutrx,
                                       a.terminalid,                      
                                       a.amount,
                                       a.amount / 10 vat,
                                       a.settdate authdate,
                                       b.created_datetime canceldate,
                                       a.cardname,
                                       a.cardcode,
                                       a.cardno,
                                       a.allotmon quota,
                                       a.cpid,
                                       '1' cp_type                           
                                  from tb_pay_notice a
                                  left join tb_card_cancel b
                                    on b.daoutrx = a.daoutrx
                                   and b.cpid = a.cpid
                                 inner join tb_pay_hold c
                                    on a.daoutrx = c.daoutrx
                                   and a.cpid = c.cpid                          
                                 where b.daoutrx is null                                      
                                 )a
                           inner join (
                                 select a.store_id,
                                        a.terminal_id terminalid,
                                        a.imei,
                                        a.tax,
                                        a.business_nm,
                                        b.business_nm2,
                                        c.business_nm3,
                                        ifnull(a.commission, 0) commission,
                                        ifnull(b.commission2, 0) commission2,
                                        ifnull(c.commission3, 0) commission3,
                                        a.bank_nm,
                                        a.period,
                                        a.state,
                                        a.cpid
                                   from (
                                        select a.store_id,
                                               a.terminal_id,
                                               a.imei,
                                               a.tax,
                                               a.high_store_id,
                                               a.business_nm,
                                               a.commission,
                                               c.bank_nm,
                                               a.period,
                                               a.state,
                                               a.cpid
                                          from tb_store a
                                         inner join tb_store_role b
                                            on a.store_id = b.store_id
                                           and b.role_id = '1004'
                                         inner join tb_bank c
                                            on a.bank_code = c.bank_code                                                        
                                         )a  
                                   inner join      
                                         (
                                        select a.store_id,
                                               a.terminal_id,
                                               a.imei,
                                               a.high_store_id,
                                               a.business_nm as business_nm2,
                                               a.commission as commission2
                                          from tb_store a
                                         inner join tb_store_role b
                                            on a.store_id = b.store_id
                                           and b.role_id = '1003'                                       
                                         )b
                                      on a.high_store_id = b.store_id
                                   inner join     
                                         (
                                        select a.store_id,
                                               a.terminal_id,
                                               a.imei,
                                               a.high_store_id,
                                               a.business_nm as business_nm3,
                                               a.commission as commission3
                                          from tb_store a
                                         inner join tb_store_role b
                                            on a.store_id = b.store_id
                                           and b.role_id = '1002'          
                                         )c
                                      on b.high_store_id = c.store_id             
                                )b
                             on a.cpid = b.cpid                
                        )a     
                )a      
          	where 1 = 1                       
		)a 
		where 1=1     	
 	   <if test="list != null and list != ''">
        and a.no_cpid in 
        	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
             #{item}
            </foreach>									
	   </if>		   
	</select>
		
	<select id="selectSettlementHisInfo" parameterType="searchSettlementVO" resultMap="settlement">
	 select a.no,
			a.daoutrx,
			a.userid,
			a.orderno,
			a.username,
			a.productname,
			a.amount,
			a.vat,
			a.authdate,
			a.canceldate,
			a.cardname,
			a.cardcode,
			a.cardno,
			a.quota,
			a.terminalid,
			a.commission,
			a.commission2,
			a.commission3,
			a.business_nm,
			a.business_nm2,
			a.business_nm3,			
			a.tax,
			a.amount2,
			a.bank_nm,
			a.period,
			a.state,
			a.commission_total,
			a.commission_total2,
			a.commission_total3,
            FORMAT((a.commission_total) - a.commission_total2 - a.commission_total3, 0) commission_total4,
            a.cpid,
            a.canceltype,
            a.cp_type
	   from (
			 select a.no,
					a.daoutrx,
					a.userid,
					a.orderno,
					a.username,
					a.productname,
					a.amount,
					a.vat,
					a.authdate,
					a.canceldate,
					a.cardname,
					a.cardcode,
					a.cardno,
					a.quota,
					a.terminalid,
					a.commission,
					a.commission2,
					a.commission3,
					a.business_nm,
					a.business_nm2,
					a.business_nm3,			
					a.tax,
					a.amount2,
					a.bank_nm,
					DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y.%m.%d') as period,
					a.state,
					case when a.tax = 'Y' then FORMAT(a.amount * a.commission / 100, 0)
						 when a.tax = 'N' then FORMAT(a.amount * 3.3 / 100, 0)
					end commission_total,
					case when a.tax2 = 'Y' then FORMAT(a.amount * a.commission2 / 100, 0)
						 when a.tax2 = 'N' then FORMAT(a.amount * 3.3 / 100, 0)
					end commission_total2,
					case when a.tax3 = 'Y' then FORMAT(a.amount * a.commission3 / 100, 0)
						 when a.tax3 = 'N' then FORMAT(a.amount * 3.3 / 100, 0)
					end commission_total3,
					a.cpid,
                    case when a.canceltype is null then '11'
	                     when a.canceltype = '0' then '12'
                         when a.canceltype = '1' then '12'
                         when a.canceltype = '3' then '16'
                    end canceltype,
                    a.cp_type  							
			   from (
					 select a.no,
							a.daoutrx,
							a.userid,
							a.orderno,
							a.username,
							a.productname,
							FORMAT(a.amount, 0) amount,
							FORMAT(a.vat, 0) vat,
							date_format(a.authdate, '%Y.%m.%d') authdate,
							date_format(a.canceldate, '%Y.%m.%d') canceldate,
							a.cardname,
							a.cardcode,
							a.cardno,
							a.quota,
							b.terminalid,
							b.commission,
							b.commission2,
							b.commission3,
							b.business_nm,
							b.business_nm2,
							b.business_nm3,                    
							b.tax,
							b.tax2,
							b.tax3,
							FORMAT(a.amount - a.vat, 0) amount2,
							b.bank_nm,
							b.period,
							b.state,
							a.cpid,
							a.canceltype,
							a.cp_type
					   from (
							select a.no,
								   a.daoutrx,
								   a.userid,
								   a.orderno,
								   a.username,
								   a.productname,
								   a.amount,
								   a.amount / 10 vat,
								   a.authdate,
								   b.created_datetime canceldate,
								   '' cardname,
								   '' cardcode,
								   a.cardno,
								   a.quota,
								   a.cpid,
								   b.canceltype,
								   '1' cp_type
							  from tb_card_auth a
							  left join tb_card_cancel b
								on b.daoutrx = a.daoutrx
							   and b.cpid = a.cpid
							 inner join tb_pay_hold c
		                        on a.daoutrx = c.daoutrx    
		                       and a.cpid = c.cpid                    
							 where a.resultcode = '0000'
		                       and b.daoutrx is null
							 )a  
					  inner join (
							 select a.store_id,
									a.terminal_id terminalid,
									a.tax,
									b.tax2,
									c.tax3,
									a.business_nm,
									b.business_nm2,
									c.business_nm3,
									ifnull(a.commission, 0) commission,
									ifnull(b.commission2, 0) commission2,
									ifnull(c.commission3, 0) commission3,
									a.bank_nm,
									a.period,
									a.state
							   from (
									select a.store_id,
										   a.terminal_id,
										   a.tax,
										   a.high_store_id,
										   a.business_nm,
										   a.commission,
										   c.bank_nm,
										   a.period,
										   a.state
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1004'
									 inner join tb_bank c
										on a.bank_code = c.bank_code
									 )a  
							   inner join      
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm2,
										   a.commission as commission2,
										   a.tax as tax2
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1003'            
									 )b
								  on a.high_store_id = b.store_id
							   inner join     
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm3,
										   a.commission as commission3,
										   a.tax as tax3
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1002'                   
									 )c
								  on b.high_store_id = c.store_id             
							)b
						 on a.userid = b.store_id
					  union all
					 select a.no,
							a.daoutrx,
							a.userid,
							a.orderno,
							a.username,
							a.productname,
							FORMAT(a.amount, 0) amount,
							FORMAT(a.vat, 0) vat,
							date_format(a.authdate, '%Y.%m.%d') authdate,
							date_format(a.canceldate, '%Y.%m.%d') canceldate,
							a.cardname,
							a.cardcode,
							a.cardno,
							a.quota,
							b.terminalid,
							b.commission,
							b.commission2,
							b.commission3,
							b.business_nm,
							b.business_nm2,
							b.business_nm3,                    
							b.tax,
							b.tax2,
							b.tax3,
							FORMAT(a.amount - a.vat, 0) amount2,
							b.bank_nm,
							b.period,
							b.state,
							a.cpid,
							a.canceltype,
							a.cp_type
					   from (
							select a.no,
								   a.daoutrx,
								   a.userid,
								   a.orderno,
								   a.username,
								   a.productname,
								   a.amount,
								   a.amount / 10 vat,
								   a.authdate,
								   b.created_datetime canceldate,
								   '' cardname,
								   '' cardcode,
								   a.cardno,
								   a.quota,
								   a.cpid,
								   b.canceltype,
								   '2' cp_type
							  from tb_card_auth2 a
							  left join tb_card_cancel b
								on b.daoutrx = a.daoutrx
							   and b.cpid = a.cpid
							 inner join tb_pay_hold c
		                        on a.daoutrx = c.daoutrx    
		                       and a.cpid = c.cpid                    
							 where a.resultcode = '0000'
		                       and b.daoutrx is null
							 )a  
					  inner join (
							 select a.store_id,
									a.terminal_id terminalid,
									a.tax,
									b.tax2,
									c.tax3,
									a.business_nm,
									b.business_nm2,
									c.business_nm3,
									ifnull(a.commission, 0) commission,
									ifnull(b.commission2, 0) commission2,
									ifnull(c.commission3, 0) commission3,
									a.bank_nm,
									a.period,
									a.state
							   from (
									select a.store_id,
										   a.terminal_id,
										   a.tax,
										   a.high_store_id,
										   a.business_nm,
										   a.commission,
										   c.bank_nm,
										   a.period,
										   a.state
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1004'
									 inner join tb_bank c
										on a.bank_code = c.bank_code
									 )a  
							   inner join      
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm2,
										   a.commission as commission2,
										   a.tax as tax2
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1003'            
									 )b
								  on a.high_store_id = b.store_id
							   inner join     
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm3,
										   a.commission as commission3,
										   a.tax as tax3
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1002'                   
									 )c
								  on b.high_store_id = c.store_id             
							)b
						 on a.userid = b.store_id					  
					  union all
					 select a.no,
							a.daoutrx,
							b.store_id userid,
							'' orderno,
							'' username,
							'' productname,             
							FORMAT(a.amount, 0) amount,
							FORMAT(a.vat, 0) vat,
							date_format(a.authdate, '%Y.%m.%d') authdate,
							date_format(a.canceldate, '%Y.%m.%d') canceldate,
							a.cardname,
							a.cardcode,
							a.cardno,
							a.quota,
							a.terminalid, 
							b.commission,
							b.commission2,
							b.commission3,
							b.business_nm,
							b.business_nm2,
							b.business_nm3,
							b.tax,
							b.tax2,
							b.tax3,
							FORMAT(a.amount - a.vat, 0) amount2,
							b.bank_nm,
							b.period,
							b.state,
							a.cpid,
							a.canceltype,
							a.cp_type
					   from (
							select a.no,
								   a.daoutrx,
								   a.terminalid,                           
								   a.amount,
								   a.amount / 10 vat,
								   a.settdate authdate,
								   b.created_datetime canceldate,
								   a.cardname,
								   a.cardcode,
								   a.cardno,
								   a.allotmon quota,
								   a.cpid,
								   b.canceltype,
								   '3' cp_type                           
							  from tb_pay_notice a
							  left join tb_card_cancel b
								on b.daoutrx = a.daoutrx
							   and b.cpid = a.cpid
							 inner join tb_pay_hold c
		                        on c.daoutrx = a.daoutrx
		                       and c.cpid = a.cpid  						
							 where b.daoutrx is null
							 )a
					   inner join (
							 select a.store_id,
									a.terminal_id terminalid,
									a.tax,
									b.tax2,
									c.tax3,
									a.business_nm,
									b.business_nm2,
									c.business_nm3,
									ifnull(a.commission, 0) commission,
									ifnull(b.commission2, 0) commission2,
									ifnull(c.commission3, 0) commission3,
									a.bank_nm,
									a.period,
									a.state,
									a.cpid
							   from (
									select a.store_id,
										   a.terminal_id,
										   a.tax,
										   a.high_store_id,
										   a.business_nm,
										   a.commission,
										   c.bank_nm,
										   a.period,
										   a.state,
										   a.cpid
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1004'
									 inner join tb_bank c
										on a.bank_code = c.bank_code                               
									 )a  
							   inner join      
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm2,
										   a.commission as commission2,
										   a.tax as tax2
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1003'            
									 )b
								  on a.high_store_id = b.store_id
							   inner join     
									 (
									select a.store_id,
										   a.terminal_id,
										   a.high_store_id,
										   a.business_nm as business_nm3,
										   a.commission as commission3,
										   a.tax as tax3
									  from tb_store a
									 inner join tb_store_role b
										on a.store_id = b.store_id
									   and b.role_id = '1002'                   
									 )c
								  on b.high_store_id = c.store_id             
							)b
						 on a.cpid = b.cpid                
					)a
             )a       
	  where 1 = 1
	    and a.no = #{no}
	    and a.daoutrx = #{daoutrx}
	    and a.cpid = #{cpid}
	</select>	
	
	
	<select id="selectSettlementManageList" parameterType="searchSettlementVO" resultMap="settlement">
		with store_data as (
			select a.period,
				   a.store_id,
				   a.high_store_id,				   
				   c.business_nm3,
				   d.business_nm2,
				   a.business_nm,
				   a.cpid,
				   a.commission,
				   c.commission3,
				   d.commission2,
				   (select bank_nm from tb_bank tb where bank_code=a.bank_code) bank_nm,
				   a.account_num,
				   a.accounter
			  from tb_store a
			 inner join tb_store_role b 
				on a.store_id = b.store_id
			   and b.role_id = '1004'
			   and a.state = 'Y'
			   and a.cpid is not null
			   and a.cpid != ''
			   <if test="role_id == '1003'">
			   	<if test="high_store_id != null and high_store_id != ''">
				and a.high_store_id = #{high_store_id}
				</if>
				</if>
			<if test="search_id != null and search_id != '' and search_nm != null and search_nm != ''">   
	        <choose>
	            <when test="search_id == 'store_id'">
					and	a.store_id like concat('%' , #{search_nm} , '%')
				</when>						        
	            <when test="search_id == 'business_nm'">
					and	a.business_nm like concat('%' , #{search_nm} , '%')
				</when>
	            <when test="search_id == 'cpid'">
					and	a.cpid like concat('%' , #{search_nm} , '%')
				</when>
	            <when test="search_id == 'terminal_id'">
					and	a.terminal_id like concat('%' , #{search_nm} , '%')
				</when>
			</choose>	
			</if>			
	  	    <if test="roleStore != null and roleStore != ''">
			and a.store_id = #{roleStore}
			</if>																			  										   
			 inner join (
					select a.store_id as store_id3,
						   a.high_store_id as high_store_id3,
						   a.business_nm as business_nm3,
						   a.commission as commission3 
					  from tb_store a
					 inner join tb_store_role b 
						on a.store_id = b.store_id
					   and b.role_id = '1003'
					   and a.state = 'Y'
					   <if test="role_id=='1002'">
					   	<if test="high_store_id != null and high_store_id != ''">
						and a.high_store_id = #{high_store_id}
						</if>
					   </if>			
			<if test="bussincess_id != null and bussincess_id != '' and bussincess_id == 'branch'">   
				<if test="search_id2 != null and search_id2 != '' and search_nm != null and search_nm != ''">   
		        <choose>
		            <when test="search_id2 == 'store_id'">
						and	a.store_id like concat('%' , #{search_nm} , '%')
					</when>						        
		            <when test="search_id2 == 'business_nm'">
						and	a.business_nm like concat('%' , #{search_nm} , '%')
					</when>
		            <when test="search_id2 == 'cpid'">
						and	a.cpid like concat('%' , #{search_nm} , '%')
					</when>
		            <when test="search_id2 == 'terminal_id'">
						and	a.terminal_id like concat('%' , #{search_nm} , '%')
					</when>
				</choose>	
				</if>																           
			</if>																							
				   )c
				on a.high_store_id = c.store_id3
			 inner join (
					select a.store_id as store_id2,
						   a.high_store_id as high_store_id2,
						   a.business_nm as business_nm2,
						   a.commission as commission2
					  from tb_store a
					 inner join tb_store_role b 
						on a.store_id = b.store_id
					   and b.role_id = '1002'
					   and a.state = 'Y'   
			<if test="bussincess_id != null and bussincess_id != '' and bussincess_id == 'manage'">   
				<if test="search_id2 != null and search_id2 != '' and search_nm != null and search_nm != ''">   
		        <choose>
		            <when test="search_id2 == 'store_id'">
						and	a.store_id like concat('%' , #{search_nm} , '%')
					</when>						        
		            <when test="search_id2 == 'business_nm'">
						and	a.business_nm like concat('%' , #{search_nm} , '%')
					</when>
		            <when test="search_id2 == 'cpid'">
						and	a.cpid like concat('%' , #{search_nm} , '%')
					</when>
		            <when test="search_id2 == 'terminal_id'">
						and	a.terminal_id like concat('%' , #{search_nm} , '%')
					</when>
				</choose>	
				</if>																           
			</if>																           
				   )d
				on c.high_store_id3 = d.store_id2 
		),
		payment_data as (
			-- 페이조아 승인내역
			select 
				a.authdate,
				a.store_id,
				if(seqno='1', a.amount, 0) as amount,
				if(seqno='1', 1, 0) as amount_cnt,
				if(seqno='0', a.amount, 0) as cencel_amount,
				if(seqno='0', 1, 0) as cencel_cnt,
				a.paymenttype,
				a.commission,
				a.no_cpid
			from (
				select 
					a.authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'1' as cptype,
					a.orderno,
					a.username,
					a.productname,
					'1' seqno,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					concat(a.no,'_',a.cpid) no_cpid
				from tb_card_auth a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 페이조아 취소내역
				select 
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'1' as cptype,
					b.orderno,
					b.username,
					b.productname,
					'0' seqno,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					concat(b.no,'_',b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union 
				-- 케이에스넷 승인내역
				select 
					a.authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'2' cptype,
					a.orderno,
					a.username,
					a.productname,
					'1' seqno,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					concat(a.no,'_',a.cpid) no_cpid
				from tb_card_auth2 a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 케이에스넷 취소내역
				select 
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'2' as cptype,
					b.orderno,
					b.username,
					b.productname,
					'0' seqno,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					concat(b.no,'_',b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth2 b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union
				-- 단말기결제 내역
				select 
					a.settdate authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'3' cp_type,
					'' orderno,
					'' username,
					'' productname,
					'1' seqno,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					concat(a.no,'_',a.cpid) no_cpid
				from tb_pay_notice a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
				union
				-- 단말기결제 취소내역
				select 
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'3' cp_type,
					'' orderno,
					'' username,
					'' productname,
					'0' seqno,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					concat(b.no,'_',b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_pay_notice b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
			) a
		)
		select 
			FOUND_ROWS() as tocnt,
			FORMAT(a.amount_sum, 0) as amount_sum,				   				  -- 기간별 합계
			ifnull(a.total_cnt, 0) as total_cnt,									  -- 기간별 거래처
			ifnull(FORMAT(a.total_approval, 0), 0) as total_approval, 			  -- 기간별 승인액
			ifnull(FORMAT(a.total_cancel_sum, 0), 0) as total_cancel_sum,	 		  -- 기간별 취소액
			ifnull(a.total_approval_cnt, 0) as total_approval_cnt,	 	 		  -- 승인 건수
			ifnull(a.total_cancel_cnt, 0) as total_cancel_cnt,		 			  -- 취소 건수
			ifnull(FORMAT(a.total_settlement, 0), 0) as total_settlement,			  -- 정산 공급가액
			ifnull(FORMAT(a.total_vat, 0), 0) as total_vat,						  -- 정산 부가세
			ifnull(FORMAT(a.total_amount, 0), 0) as total_amount,   				  -- 정산 지급액
			ifnull(FORMAT(a.total_settlement_commission, 0), 0) as total_settlement_commission,			-- 수수료 공급가액
			ifnull(FORMAT(a.total_vat_commission, 0), 0) as total_vat_commission,						-- 수수료 부가세
			ifnull(FORMAT(a.total_amount_commission, 0), 0) as total_amount_commission,					-- 수수료 합계
			ifnull(FORMAT(a.total_cancel_store_cnt, 0), 0) as total_cancel_store_cnt,		  -- 기간별 취소거래처
			a.rownum,
			a.store_id,
			a.period,
			a.business_nm,
			a.business_nm2,
			a.business_nm3,
			a.bank_nm,
			a.account_num,
			a.accounter,
			a.no_cpid,
			FORMAT(a.amount, 0) as amount,
			FORMAT(a.amount-a.amount_commission, 0) as settlement_amount,
			FORMAT(a.amount_commission, 0) as amount_commission,
			FORMAT(a.amount_cnt, 0) as amount_cnt,
			FORMAT(a.cencel_amount, 0) as cencel_amount,
			FORMAT(a.cencel_amount_commission, 0) as cencel_amount_commission,
			FORMAT(a.cencel_amount-a.cencel_amount_commission, 0) as cencel_settlement_amount,
			FORMAT(a.cencel_cnt, 0) as cencel_cnt,
			FORMAT(a.commission, 0) as commission,
			FORMAT(a.commission2, 0) as commission2,
			FORMAT(a.commission3, 0) as commission3,
			FORMAT(a.vat2, 0) as vat2,
			FORMAT(a.vat3, 0) as vat3,
			FORMAT(a.settlement2, 0) as settlement2,
			FORMAT(a.settlement3, 0) as settlement3,
			FORMAT(a.amount-a.amount_commission, 0) as settlement_amount,
			FORMAT(a.cencel_amount-a.cencel_amount_commission, 0) as cencel_settlement_amount,
			FORMAT(a.settlement, 0) as settlement,						-- 정산 지급액 = (정산금액 - 차감할금액) 
			FORMAT(a.vat, 0) as vat,									-- 정산 부가세
			FORMAT((a.settlement - a.vat), 0) as supply_commission,		-- 정산 공급가액 : 지급액 기준
			FORMAT(a.cancel_settlement, 0) as cancel_settlement,							-- 수수료 합계 = (정산 수수료 - 차감할 수수료) 
			FORMAT(a.cancel_vat, 0) as cancel_vat,											-- 수수료 부가세
			FORMAT((a.cancel_settlement - a.cancel_vat), 0) as cancel_supply_commission		-- 수수료 공급가액
		from (
			select 
				b.amount_sum,
				b.total_cnt,				 -- 기간별 거래처
				b.total_approval, 		 -- 기간별 승인액
				b.total_cancel_sum,		 -- 기간별 취소액
				b.total_approval_cnt,	   	 -- 승인 건수
				b.total_cancel_cnt,		 -- 취소 건수
				b.total_settlement, 		-- 정산 공급가액
				b.total_vat,				-- 정산 부가세
				b.total_amount,				-- 정산 지급액
				b.total_settlement_commission, 		-- 수수료 공급가액
				b.total_vat_commission,				-- 수수료 부가세
				b.total_amount_commission,			-- 수수료 합계
				b.total_cancel_store_cnt,  -- 기간별 취소거래처
				@rownum:=@rownum+1 AS rownum,
				a.store_id,
				a.period,
				a.business_nm,
				a.business_nm2,
				a.business_nm3,
				a.amount,
				a.amount_commission,
				a.cencel_amount_commission,
				a.amount_cnt,
				a.cencel_amount,
				a.cencel_cnt,
				a.commission,
				a.commission2,
				a.commission3,
				((a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission))*10/110 as vat,
				(a.amount_commission - a.cencel_amount_commission)*10/110 as cancel_vat,
				a.vat2,
				a.vat3,
				(a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission) as settlement,
				(amount_commission - a.cencel_amount_commission) as cancel_settlement,
				a.settlement2,
				a.settlement3,
				a.bank_nm,
				a.account_num,
				a.accounter,
				a.no_cpid
			from (
				select 
						 b.store_id,
						 b.period,
						 b.business_nm,
						 b.business_nm2,
						 b.business_nm3,
						 a.amount,
						 a.amount_commission,
						 a.amount_cnt,
						 a.cencel_amount,
						 a.cencel_amount_commission,
						 a.cencel_cnt,
						 cast((a.amount * cast((b.commission / 100 ) as float)) as int) as commission,
						 cast((a.amount * cast((b.commission / 100 ) / 1.1 as float)) as int) as vat,
						 a.amount - cast((a.amount * cast((b.commission / 100 ) as float)) as int) as settlement, 
						 cast((a.amount * cast((b.commission2 / 100 ) as float)) as int) as commission2,
						 cast((a.amount * cast((b.commission2 / 100 ) / 1.1 as float)) as int) as vat2,
						 a.amount - cast((a.amount * cast((b.commission2 / 100 ) as float)) as int) as settlement2, 
						 cast((a.amount * cast((b.commission3 / 100 ) as float)) as int) as commission3,
						 cast((a.amount * cast((b.commission3 / 100 ) / 1.1 as float)) as int) as vat3,
						 a.amount - cast((a.amount * cast((b.commission3 / 100 ) as float)) as int) as settlement3, 
						 b.bank_nm,
						 b.account_num,
						 b.accounter,
						 a.no_cpid
					from (
						 select 
								sum(a.amount) amount,
								sum(a.amount * a.commission / 100) amount_commission,
								sum(amount_cnt) amount_cnt,
								sum(cencel_amount) cencel_amount,
								sum(cencel_amount * a.commission / 100) cencel_amount_commission,
								sum(cencel_cnt) cencel_cnt,
								a.store_id,
								a.no_cpid
						   from payment_data a
								inner join tb_store b
									on a.store_id = b.store_id
						  where 1 = 1
						    <if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
							and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
							</if>
						  group by a.store_id
						 )a
				   inner join store_data b
					  on a.store_id = b.store_id	
				  )a,
				  (
				  select sum(a.amount) amount_sum,						-- 금액합계, 기간별합계
						count(b.store_id) total_cnt,							-- 기간별 거래처                                
						sum(a.amount_cnt) + sum(a.cencel_cnt) as total_approval_cnt, 	-- 기간별 승인 건수
						sum(a.amount) as total_approval, 		-- 기간별 승인액
						sum(a.cencel_cnt) as total_cancel_cnt,						-- 취소 건수
						ifnull(sum(a.cencel_amount),0) as total_cancel_sum,						-- 기간별 취소금액
			  			sum(((a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission))-((a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission))*10/110) as total_settlement,	   -- 정산 공급가액
			  			sum(((a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission))*10/110) as total_vat,					-- 정산 부가세
                        sum((a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission)) as total_amount,		-- 정산 지급액
			  			sum((a.amount_commission - a.cencel_amount_commission)-(a.amount_commission - a.cencel_amount_commission)*10/110) as total_settlement_commission,	   -- 정산 공급가액
			  			sum((a.amount_commission - a.cencel_amount_commission)*10/110) as total_vat_commission,					-- 정산 부가세
                        sum(a.amount_commission - a.cencel_amount_commission) as total_amount_commission,		-- 정산 지급액
						sum(a.cancel_store_cnt) as total_cancel_store_cnt								-- 기간별 취소거래처
					from (
						select 
								sum(a.amount) amount,
								sum(a.amount * a.commission / 100) amount_commission,
								sum(amount_cnt) amount_cnt,
								sum(cencel_amount) cencel_amount,
								sum(cencel_amount * a.commission / 100) cencel_amount_commission,
								sum(cencel_cnt) cencel_cnt,
								a.store_id,
								case
									when sum(cencel_cnt)>0 then 1
									else 0
								end as cancel_store_cnt
						   from payment_data a
								inner join tb_store b
									on a.store_id = b.store_id
						  where 1 = 1
							<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
							and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
							</if>
						  group by a.store_id
						 )a
				   inner join store_data b
					  on a.store_id = b.store_id
				  )b 
			where (SELECT @ROWNUM:=0)=0		  
		  )a   					
   							     
	</select>	
	<select id="selectBranchSettlementManageList" parameterType="searchSettlementVO" resultMap="settlement">
		select
			FOUND_ROWS() as tocnt,
			a.rownum,
			a.business_nm,					-- 대리점명
			a.store_id,						-- 상점ID
			a.high_store_id,				-- 상위상점ID
			a.period,						-- 정산주기
			a.amount_cnt,					-- 정산매출 건수
			a.amount,						-- 정산매출 거래금액
			a.amount_commission,			-- 정산매출 수수료
			a.cencel_cnt,					-- 취소 건수
			a.cencel_amount,				-- 취소 금액
			a.cencel_amount_commission,		-- 취소 수수료
			a.cancel_store_cnt,				-- 취소건 업체수
			a.bank_nm,						-- 은행명
			a.account_num,					-- 입금계좌
			a.accounter,					-- 예금주
			a.settlement,					-- 지급액 : 정산매출 수수료 - 취소 수수료
			a.vat,							-- 수수료 부가세
			a.supply_commission, 			-- 수수료 공급가액
			b.total_cnt,					-- 기간별 승인건수
			b.total_approval,				-- 전체 승인금액
			b.amount_sum,					-- 전체 결제금액
			b.total_approval_cnt,			-- 기간별 승인건수
			b.total_amount_commission,		-- 정산매출 수수료
			b.total_cencel_cnt,				-- 기간별 취소건
			b.total_cancel_sum,				-- 기간별 취소금액
			b.total_cencel_amount_commission,				-- 기간별 취소수수료
			b.total_vat,	-- 수수료 부가세
			b.total_settlement, -- 수수료 공급가액
			b.total_amount,	-- 지급액 : 정산매출 수수료 - 취소 수수료
			a.no_cpid
		from
			(
				select 
					@rownum:=@rownum+1 AS rownum,
					a.business_nm,					-- 대리점명
					a.store_id,						-- 상점ID
					a.high_store_id,				-- 상위상점ID
					a.period,						-- 정산주기
					FORMAT(a.amount_cnt, 0) as amount_cnt,					-- 정산매출 건수
					FORMAT(a.amount, 0) as amount,						-- 정산매출 거래금액
					FORMAT(a.amount_commission, 0) as amount_commission,			-- 정산매출 수수료
					FORMAT(a.cencel_cnt, 0) as cencel_cnt,					-- 취소 건수
					FORMAT(a.cencel_amount, 0) as cencel_amount,				-- 취소 금액
					FORMAT(a.cencel_amount_commission, 0) as cencel_amount_commission,		-- 취소 수수료
					FORMAT(a.cancel_store_cnt, 0) as cancel_store_cnt,				-- 취소건 업체수
					a.bank_nm,						-- 은행명
					a.account_num,					-- 입금계좌
					a.accounter,					-- 예금주
					FORMAT((a.amount_commission - a.cencel_amount_commission), 0) as settlement,	-- 지급액 : 정산매출 수수료 - 취소 수수료
					FORMAT((a.amount_commission - a.cencel_amount_commission)*10/110, 0) as vat,	-- 수수료 부가세
					FORMAT((a.amount_commission - a.cencel_amount_commission) - (a.amount_commission - a.cencel_amount_commission)*10/110, 0) as supply_commission, -- 수수료 공급가액
					a.no_cpid
				from
					(
					select
						a.business_nm,		-- 대리점명
						a.store_id,			-- 상점ID
						a.high_store_id,	-- 상위상점ID
						a.period,			-- 정산주기
						sum(amount_cnt) amount_cnt,
						sum(a.amount) amount,		-- 정산매출 거래금액
						sum(a.amount * round(a.commission - a.commission2, 2) / 100) amount_commission,		-- 정산매출 수수료
						sum(a.cencel_cnt) cencel_cnt,				-- 취소 건수
						sum(a.cencel_amount) cencel_amount,		-- 취소 금액
						sum(a.cencel_amount * round(a.commission - a.commission2, 2) / 100) cencel_amount_commission,		-- 취소 수수료
						count(distinct a.cencel_store_id) cancel_store_cnt,
						a.bank_nm,
						a.account_num,
						a.accounter,
						a.no_cpid
					from 
						(
						select
							a.authdate,
							<choose>
							<when test='role_id =="1002"'>
							ts3.store_id,
							ts3.high_store_id,
							ts3.business_nm,
							case
								when a.paymenttype='3' then ts2.terminal 
								else ts2.credit_card_k 
							end commission,
							ifnull(ts3.period, 0) period,
							case
								when a.paymenttype='3' then ts3.terminal 
								else ts3.credit_card_k 
							end commission2,
							(select bank_nm from tb_bank tb where bank_code=ts3.bank_code) bank_nm,
							ts3.account_num,
							ts3.accounter,
							</when>
							<when test='role_id =="1003"'>
							ts2.store_id,
							ts2.high_store_id,
							ts2.business_nm,
							a.commission,
							ifnull(ts2.period, 0) period,
							case
								when a.paymenttype='3' then ts2.terminal 
								else ts2.credit_card_k 
							end commission2,
							(select bank_nm from tb_bank tb where bank_code=ts2.bank_code) bank_nm,
							ts2.account_num,
							ts2.accounter,
							</when>
							<otherwise>
							a.store_id,
							a.high_store_id,
							a.business_nm,
							</otherwise>
							</choose>
							a.amount,
							a.amount_cnt,
							a.cencel_amount,
							a.cencel_cnt,
							a.cencel_store_id,
							a.paymenttype,
							tsr.role_id,
							a.no_cpid
						from
							(
							select 
								a.authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_card_auth a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b 
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid
							where a.resultcode = '0000' and c.daoutrx is null
							union 
							select 
								a.authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_card_auth2 a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid
							where a.resultcode = '0000' and c.daoutrx is null
							union 
							select 
								a.settdate authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_pay_notice a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
							)a
							left join tb_store ts2 
								on ts2.store_id = a.high_store_id
							left join tb_store ts3 
								on ts3.store_id = ts2.high_store_id
							left join tb_store_role tsr  
								on tsr.store_id = ts2.store_id
						where 1 = 1
							<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
							and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
							</if>
						) a 
					group by a.store_id
				)a
				LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
			)a,
			(
				select 
					FORMAT(count(a.store_id), 0) total_cnt,					-- 기간별 승인건수
					FORMAT(amount_cnt, 0) total_approval_cnt,					-- 기간별 승인건수
					FORMAT(amount, 0) total_approval,							-- 기간별 승인금액
					FORMAT(amount, 0) amount_sum,								-- 기간별 결제금액
					FORMAT(amount_commission, 0) total_amount_commission,		-- 정산매출 수수료
					FORMAT(cencel_cnt, 0) total_cencel_cnt,						-- 기간별 취소건
					FORMAT(cencel_amount, 0) total_cancel_sum,					-- 기간별 취소금액
					FORMAT(cencel_amount_commission, 0) total_cencel_amount_commission,				-- 기간별 취소수수료
					FORMAT((a.amount_commission - a.cencel_amount_commission)*10/110, 0) as total_vat,	-- 수수료 부가세
					FORMAT((a.amount_commission - a.cencel_amount_commission) - (a.amount_commission - a.cencel_amount_commission)*10/110, 0) as total_settlement, -- 수수료 공급가액
					FORMAT((a.amount_commission - a.cencel_amount_commission), 0) as total_amount	-- 지급액 : 정산매출 수수료 - 취소 수수료
				from
					(
					select
						a.business_nm,		-- 대리점명
						a.store_id,			-- 상점ID
						a.high_store_id,	-- 상위상점ID
						a.period,			-- 정산주기
						sum(amount_cnt) amount_cnt,
						sum(a.amount) amount,		-- 정산매출 거래금액
						sum(a.amount * round(a.commission - a.commission2, 2) / 100) amount_commission,		-- 정산매출 수수료
						sum(a.cencel_cnt) cencel_cnt,				-- 취소 건수
						sum(a.cencel_amount) cencel_amount,		-- 취소 금액
						sum(a.cencel_amount * round(a.commission - a.commission2, 2) / 100) cencel_amount_commission,		-- 취소 수수료
						count(distinct a.cencel_store_id) cancel_store_cnt,
						a.bank_nm,
						a.account_num,
						a.accounter,
						a.no_cpid
					from 
						(
						select
							a.authdate,
							<choose>
							<when test='role_id =="1002"'>
							ts3.store_id,
							ts3.high_store_id,
							ts3.business_nm,
							case
								when a.paymenttype='3' then ts2.terminal 
								else ts2.credit_card_k 
							end commission,
							ifnull(ts3.period, 0) period,
							case
								when a.paymenttype='3' then ts3.terminal 
								else ts3.credit_card_k 
							end commission2,
							(select bank_nm from tb_bank tb where bank_code=ts3.bank_code) bank_nm,
							ts3.account_num,
							ts3.accounter,
							</when>
							<when test='role_id =="1003"'>
							ts2.store_id,
							ts2.high_store_id,
							ts2.business_nm,
							a.commission,
							ifnull(ts2.period, 0) period,
							case
								when a.paymenttype='3' then ts2.terminal 
								else ts2.credit_card_k 
							end commission2,
							(select bank_nm from tb_bank tb where bank_code=ts2.bank_code) bank_nm,
							ts2.account_num,
							ts2.accounter,
							</when>
							<otherwise>
							a.store_id,
							a.business_nm,
							</otherwise>
							</choose>
							a.amount,
							a.amount_cnt,
							a.cencel_amount,
							a.cencel_cnt,
							a.cencel_store_id,
							a.paymenttype,
							tsr.role_id,
							a.no_cpid
						from
							(
							select 
								a.authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_card_auth a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b 
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid
							where a.resultcode = '0000' and c.daoutrx is null
							union 
							select 
								a.authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_card_auth2 a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid
							where a.resultcode = '0000' and c.daoutrx is null
							union 
							select 
								a.settdate authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_pay_notice a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
							)a
							left join tb_store ts2 
								on ts2.store_id = a.high_store_id
							left join tb_store ts3 
								on ts3.store_id = ts2.high_store_id
							left join tb_store_role tsr  
								on tsr.store_id = ts2.store_id
						where 1 = 1
						) a 
				)a
			)b
			where 1=1 	
			<if test='high_store_id != "" and high_store_id != null'>
			and a.high_store_id = #{high_store_id}
			</if>
			and (SELECT @rownum:=0)=0					
	</select>	
	
	<select id="selectSettlementManageListExcel" parameterType="searchSettlementVO" resultMap="settlement">
	        select
				a.business_nm,					-- 대리점명
				a.store_id,						-- 상점ID
				a.high_store_id,				-- 상위상점ID
				a.period,						-- 정산주기
				a.amount_cnt,					-- 정산매출 건수
				a.amount,						-- 정산매출 거래금액
				a.amount_commission,			-- 정산매출 수수료
				a.cencel_cnt,					-- 취소 건수
				a.cencel_amount,				-- 취소 금액
				a.cencel_amount_commission,		-- 취소 수수료
				a.cancel_store_cnt,				-- 취소건 업체수
				a.bank_nm,						-- 은행명
				a.account_num,					-- 입금계좌
				a.accounter,					-- 예금주
				a.settlement,					-- 지급액 : 정산매출 수수료 - 취소 수수료
				a.vat,							-- 수수료 부가세
				a.supply_commission, 			-- 수수료 공급가액
				b.total_cnt,					-- 기간별 승인건수
				b.total_approval,				-- 전체 승인금액
				b.amount_sum,					-- 전체 결제금액
				b.total_approval_cnt,			-- 기간별 승인건수
				b.total_amount_commission,		-- 정산매출 수수료
				b.total_cencel_cnt,				-- 기간별 취소건
				b.total_cancel_sum,				-- 기간별 취소금액
				b.total_cencel_amount_commission,				-- 기간별 취소수수료
				b.total_vat,	-- 수수료 부가세
				b.total_settlement, -- 수수료 공급가액
				b.total_amount,	-- 지급액 : 정산매출 수수료 - 취소 수수료
				a.no_cpid
		from
			(
				select
					a.business_nm,					-- 대리점명
					a.store_id,						-- 상점ID
					a.high_store_id,				-- 상위상점ID
					a.period,						-- 정산주기
					FORMAT(a.amount_cnt, 0) as amount_cnt,					-- 정산매출 건수
					FORMAT(a.amount, 0) as amount,						-- 정산매출 거래금액
					FORMAT(a.amount_commission, 0) as amount_commission,			-- 정산매출 수수료
					FORMAT(a.cencel_cnt, 0) as cencel_cnt,					-- 취소 건수
					FORMAT(a.cencel_amount, 0) as cencel_amount,				-- 취소 금액
					FORMAT(a.cencel_amount_commission, 0) as cencel_amount_commission,		-- 취소 수수료
					FORMAT(a.cancel_store_cnt, 0) as cancel_store_cnt,				-- 취소건 업체수
					a.bank_nm,						-- 은행명
					a.account_num,					-- 입금계좌
					a.accounter,					-- 예금주
					FORMAT((a.amount_commission - a.cencel_amount_commission), 0) as settlement,	-- 지급액 : 정산매출 수수료 - 취소 수수료
					FORMAT((a.amount_commission - a.cencel_amount_commission)*10/110, 0) as vat,	-- 수수료 부가세
					FORMAT((a.amount_commission - a.cencel_amount_commission) - (a.amount_commission - a.cencel_amount_commission)*10/110, 0) as supply_commission, -- 수수료 공급가액
					a.no_cpid
				from
					(
					select
						a.business_nm,		-- 대리점명
						a.store_id,			-- 상점ID
						a.high_store_id,	-- 상위상점ID
						a.period,			-- 정산주기
						sum(amount_cnt) amount_cnt,
						sum(a.amount) amount,		-- 정산매출 거래금액
						sum(a.amount * round(a.commission - a.commission2, 2) / 100) amount_commission,		-- 정산매출 수수료
						sum(a.cencel_cnt) cencel_cnt,				-- 취소 건수
						sum(a.cencel_amount) cencel_amount,		-- 취소 금액
						sum(a.cencel_amount * round(a.commission - a.commission2, 2) / 100) cencel_amount_commission,		-- 취소 수수료
						count(distinct a.cencel_store_id) cancel_store_cnt,
						a.bank_nm,
						a.account_num,
						a.accounter,
						a.no_cpid
					from 
						(
						select
							a.authdate,
							<choose>
							<when test='role_id =="1002"'>
							ts3.store_id,
							ts3.high_store_id,
							ts3.business_nm,
							case
								when a.paymenttype='3' then ts2.terminal 
								else ts2.credit_card_k 
							end commission,
							ifnull(ts3.period, 0) period,
							case
								when a.paymenttype='3' then ts3.terminal 
								else ts3.credit_card_k 
							end commission2,
							(select bank_nm from tb_bank tb where bank_code=ts3.bank_code) bank_nm,
							ts3.account_num,
							ts3.accounter,
							</when>
							<when test='role_id =="1003"'>
							ts2.store_id,
							ts2.high_store_id,
							ts2.business_nm,
							a.commission,
							ifnull(ts2.period, 0) period,
							case
								when a.paymenttype='3' then ts2.terminal 
								else ts2.credit_card_k 
							end commission2,
							(select bank_nm from tb_bank tb where bank_code=ts2.bank_code) bank_nm,
							ts2.account_num,
							ts2.accounter,
							</when>
							<otherwise>
							a.store_id,
							a.high_store_id,
							a.business_nm,
							</otherwise>
							</choose>
							a.amount,
							a.amount_cnt,
							a.cencel_amount,
							a.cencel_cnt,
							a.cencel_store_id,
							a.paymenttype,
							tsr.role_id,
							a.no_cpid
						from
							(
							select 
								a.authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_card_auth a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b 
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid
							where a.resultcode = '0000' and c.daoutrx is null
							union 
							select 
								a.authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_card_auth2 a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid
							where a.resultcode = '0000' and c.daoutrx is null
							union 
							select 
								a.settdate authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_pay_notice a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
							)a
							left join tb_store ts2 
								on ts2.store_id = a.high_store_id
							left join tb_store ts3 
								on ts3.store_id = ts2.high_store_id
							left join tb_store_role tsr  
								on tsr.store_id = ts2.store_id
						where 1 = 1
							<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
							and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
							</if>
						) a 
					group by a.store_id
				)a
			)a,
			(
				select 
					FORMAT(count(a.store_id), 0) total_cnt,					-- 기간별 승인건수
					FORMAT(amount_cnt, 0) total_approval_cnt,					-- 기간별 승인건수
					FORMAT(amount, 0) total_approval,							-- 기간별 승인금액
					FORMAT(amount, 0) amount_sum,								-- 기간별 결제금액
					FORMAT(amount_commission, 0) total_amount_commission,		-- 정산매출 수수료
					FORMAT(cencel_cnt, 0) total_cencel_cnt,						-- 기간별 취소건
					FORMAT(cencel_amount, 0) total_cancel_sum,					-- 기간별 취소금액
					FORMAT(cencel_amount_commission, 0) total_cencel_amount_commission,				-- 기간별 취소수수료
					FORMAT((a.amount_commission - a.cencel_amount_commission)*10/110, 0) as total_vat,	-- 수수료 부가세
					FORMAT((a.amount_commission - a.cencel_amount_commission) - (a.amount_commission - a.cencel_amount_commission)*10/110, 0) as total_settlement, -- 수수료 공급가액
					FORMAT((a.amount_commission - a.cencel_amount_commission), 0) as total_amount	-- 지급액 : 정산매출 수수료 - 취소 수수료
				from
					(
					select
						a.business_nm,		-- 대리점명
						a.store_id,			-- 상점ID
						a.high_store_id,	-- 상위상점ID
						a.period,			-- 정산주기
						sum(amount_cnt) amount_cnt,
						sum(a.amount) amount,		-- 정산매출 거래금액
						sum(a.amount * round(a.commission - a.commission2, 2) / 100) amount_commission,		-- 정산매출 수수료
						sum(a.cencel_cnt) cencel_cnt,				-- 취소 건수
						sum(a.cencel_amount) cencel_amount,		-- 취소 금액
						sum(a.cencel_amount * round(a.commission - a.commission2, 2) / 100) cencel_amount_commission,		-- 취소 수수료
						count(distinct a.cencel_store_id) cancel_store_cnt,
						a.bank_nm,
						a.account_num,
						a.accounter,
						a.no_cpid
					from 
						(
						select
							a.authdate,
							<choose>
							<when test='role_id =="1002"'>
							ts3.store_id,
							ts3.high_store_id,
							ts3.business_nm,
							case
								when a.paymenttype='3' then ts2.terminal 
								else ts2.credit_card_k 
							end commission,
							ifnull(ts3.period, 0) period,
							case
								when a.paymenttype='3' then ts3.terminal 
								else ts3.credit_card_k 
							end commission2,
							(select bank_nm from tb_bank tb where bank_code=ts3.bank_code) bank_nm,
							ts3.account_num,
							ts3.accounter,
							</when>
							<when test='role_id =="1003"'>
							ts2.store_id,
							ts2.high_store_id,
							ts2.business_nm,
							a.commission,
							ifnull(ts2.period, 0) period,
							case
								when a.paymenttype='3' then ts2.terminal 
								else ts2.credit_card_k 
							end commission2,
							(select bank_nm from tb_bank tb where bank_code=ts2.bank_code) bank_nm,
							ts2.account_num,
							ts2.accounter,
							</when>
							<otherwise>
							a.store_id,
							a.business_nm,
							</otherwise>
							</choose>
							a.amount,
							a.amount_cnt,
							a.cencel_amount,
							a.cencel_cnt,
							a.cencel_store_id,
							a.paymenttype,
							tsr.role_id,
							a.no_cpid
						from
							(
							select 
								a.authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_card_auth a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b 
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid
							where a.resultcode = '0000' and c.daoutrx is null
							union 
							select 
								a.authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_card_auth2 a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid
							where a.resultcode = '0000' and c.daoutrx is null
							union 
							select 
								a.settdate authdate,
								ts.store_id,
								ts.business_nm,
								ifnull(ts.period, 0) as period,
								ifnull(a.amount, 0) as amount,
								case
									when a.no is not null then 1
									else 0
								end amount_cnt,
								ifnull(b.amount, 0) as cencel_amount,
								case
									when b.no is not null then 1
									else 0
								end cencel_cnt,
								case
									when b.no is not null then ts.store_id
									else null
								end cencel_store_id,
								a.paymenttype,
								case
									when a.paymenttype='3' then ts.terminal 
									else ts.credit_card_k 
								end commission,
								ts.high_store_id,
								concat(a.no,'_',a.cpid) no_cpid
							from tb_pay_notice a
							inner join tb_store ts 
								on ts.cpid = a.cpid
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
							)a
							left join tb_store ts2 
								on ts2.store_id = a.high_store_id
							left join tb_store ts3 
								on ts3.store_id = ts2.high_store_id
							left join tb_store_role tsr  
								on tsr.store_id = ts2.store_id
						where 1 = 1
						<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
						and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
						</if>
						) a 
				)a
			)b
			where 1=1 
			<if test="list != null and list != ''">
        	and a.no_cpid in 
        	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
             #{item}
            </foreach>									
	   </if> 
	</select>	
	
	<select id="selectSettlementManageListExcel2" parameterType="searchSettlementVO" resultMap="settlement">
		with store_data as (
			select a.period,
				   a.store_id,
				   a.high_store_id,				   
				   c.business_nm3,
				   d.business_nm2,
				   a.business_nm,
				   a.cpid,
				   a.commission,
				   c.commission3,
				   d.commission2,
				   (select bank_nm from tb_bank tb where bank_code=a.bank_code) bank_nm,
				   a.account_num,
				   a.accounter
			  from tb_store a
			 inner join tb_store_role b 
				on a.store_id = b.store_id
			   and b.role_id = '1004'
			   and a.state = 'Y'
			   and a.cpid is not null
			   and a.cpid != ''
			   <if test="role_id == '1003'">
			   	<if test="high_store_id != null and high_store_id != ''">
				and a.high_store_id = #{high_store_id}
				</if>
				</if>		
	  	    <if test="roleStore != null and roleStore != ''">
			and a.store_id = #{roleStore}
			</if>																			  										   
			 inner join (
					select a.store_id as store_id3,
						   a.high_store_id as high_store_id3,
						   a.business_nm as business_nm3,
						   a.commission as commission3 
					  from tb_store a
					 inner join tb_store_role b 
						on a.store_id = b.store_id
					   and b.role_id = '1003'
					   and a.state = 'Y'
					   <if test="role_id=='1002'">
					   	<if test="high_store_id != null and high_store_id != ''">
						and a.high_store_id = #{high_store_id}
						</if>
					   </if>																									
				   )c
				on a.high_store_id = c.store_id3
			 inner join (
					select a.store_id as store_id2,
						   a.high_store_id as high_store_id2,
						   a.business_nm as business_nm2,
						   a.commission as commission2
					  from tb_store a
					 inner join tb_store_role b 
						on a.store_id = b.store_id
					   and b.role_id = '1002'
					   and a.state = 'Y'   															           
				   )d
				on c.high_store_id3 = d.store_id2 
		),
		payment_data as (
			-- 페이조아 승인내역
			select 
				a.authdate,
				a.store_id,
				if(seqno='1', a.amount, 0) as amount,
				if(seqno='1', 1, 0) as amount_cnt,
				if(seqno='0', a.amount, 0) as cencel_amount,
				if(seqno='0', 1, 0) as cencel_cnt,
				a.paymenttype,
				a.commission,
				a.no_cpid
			from (
				select 
					a.authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'1' as cptype,
					a.orderno,
					a.username,
					a.productname,
					'1' seqno,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					concat(a.no,'_',a.cpid) no_cpid
				from tb_card_auth a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 페이조아 취소내역
				select 
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'1' as cptype,
					b.orderno,
					b.username,
					b.productname,
					'0' seqno,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					concat(b.no,'_',b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union 
				-- 케이에스넷 승인내역
				select 
					a.authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'2' cptype,
					a.orderno,
					a.username,
					a.productname,
					'1' seqno,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					concat(a.no,'_',a.cpid) no_cpid
				from tb_card_auth2 a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 케이에스넷 취소내역
				select 
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'2' as cptype,
					b.orderno,
					b.username,
					b.productname,
					'0' seqno,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					concat(b.no,'_',b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth2 b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union
				-- 단말기결제 내역
				select 
					a.settdate authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'3' cp_type,
					'' orderno,
					'' username,
					'' productname,
					'1' seqno,
					case
						when a.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					a.paymenttype,
					ts.store_id,
					concat(a.no,'_',a.cpid) no_cpid
				from tb_pay_notice a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
				union
				-- 단말기결제 취소내역
				select 
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as authdate,
					ifnull(a.amount, 0) as amount,
					a.cpid,
					'3' cp_type,
					'' orderno,
					'' username,
					'' productname,
					'0' seqno,
					case
						when b.paymenttype='3' then ts.terminal
						else ts.credit_card_k
					end commission,
					b.paymenttype,
					ts.store_id,
					concat(b.no,'_',b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_pay_notice b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
			) a
		)
		select 
			FORMAT(a.amount_sum, 0) as amount_sum,				   				  -- 기간별 합계
			ifnull(a.total_cnt, 0) as total_cnt,									  -- 기간별 거래처
			ifnull(FORMAT(a.total_approval, 0), 0) as total_approval, 			  -- 기간별 승인액
			ifnull(FORMAT(a.total_cancel_sum, 0), 0) as total_cancel_sum,	 		  -- 기간별 취소액
			ifnull(a.total_approval_cnt, 0) as total_approval_cnt,	 	 		  -- 승인 건수
			ifnull(a.total_cancel_cnt, 0) as total_cancel_cnt,		 			  -- 취소 건수
			ifnull(FORMAT(a.total_settlement, 0), 0) as total_settlement,			  -- 정산 공급가액
			ifnull(FORMAT(a.total_vat, 0), 0) as total_vat,						  -- 정산 부가세
			ifnull(FORMAT(a.total_amount, 0), 0) as total_amount,   				  -- 정산 지급액
			ifnull(FORMAT(a.total_settlement_commission, 0), 0) as total_settlement_commission,			-- 수수료 공급가액
			ifnull(FORMAT(a.total_vat_commission, 0), 0) as total_vat_commission,						-- 수수료 부가세
			ifnull(FORMAT(a.total_amount_commission, 0), 0) as total_amount_commission,					-- 수수료 합계
			ifnull(FORMAT(a.total_cancel_store_cnt, 0), 0) as total_cancel_store_cnt,		  -- 기간별 취소거래처
			a.store_id,
			a.period,
			a.business_nm,
			a.business_nm2,
			a.business_nm3,
			a.bank_nm,
			a.account_num,
			a.accounter,
			a.no_cpid,
			FORMAT(a.amount, 0) as amount,
			FORMAT(a.amount-a.amount_commission, 0) as settlement_amount,
			FORMAT(a.amount_commission, 0) as amount_commission,
			FORMAT(a.amount_cnt, 0) as amount_cnt,
			FORMAT(a.cencel_amount, 0) as cencel_amount,
			FORMAT(a.cencel_amount_commission, 0) as cencel_amount_commission,
			FORMAT(a.cencel_amount-a.cencel_amount_commission, 0) as cencel_settlement_amount,
			FORMAT(a.cencel_cnt, 0) as cencel_cnt,
			FORMAT(a.commission, 0) as commission,
			FORMAT(a.commission2, 0) as commission2,
			FORMAT(a.commission3, 0) as commission3,
			FORMAT(a.vat2, 0) as vat2,
			FORMAT(a.vat3, 0) as vat3,
			FORMAT(a.settlement2, 0) as settlement2,
			FORMAT(a.settlement3, 0) as settlement3,
			FORMAT(a.amount-a.amount_commission, 0) as settlement_amount,
			FORMAT(a.cencel_amount-a.cencel_amount_commission, 0) as cencel_settlement_amount,
			FORMAT(a.settlement, 0) as settlement,						-- 정산 지급액 = (정산금액 - 차감할금액) 
			FORMAT(a.vat, 0) as vat,									-- 정산 부가세
			FORMAT((a.settlement - a.vat), 0) as supply_commission,		-- 정산 공급가액 : 지급액 기준
			FORMAT(a.cancel_settlement, 0) as cancel_settlement,							-- 수수료 합계 = (정산 수수료 - 차감할 수수료) 
			FORMAT(a.cancel_vat, 0) as cancel_vat,											-- 수수료 부가세
			FORMAT((a.cancel_settlement - a.cancel_vat), 0) as cancel_supply_commission		-- 수수료 공급가액
		from (
			select 
				b.amount_sum,
				b.total_cnt,				 -- 기간별 거래처
				b.total_approval, 		 -- 기간별 승인액
				b.total_cancel_sum,		 -- 기간별 취소액
				b.total_approval_cnt,	   	 -- 승인 건수
				b.total_cancel_cnt,		 -- 취소 건수
				b.total_settlement, 		-- 정산 공급가액
				b.total_vat,				-- 정산 부가세
				b.total_amount,				-- 정산 지급액
				b.total_settlement_commission, 		-- 수수료 공급가액
				b.total_vat_commission,				-- 수수료 부가세
				b.total_amount_commission,			-- 수수료 합계
				b.total_cancel_store_cnt,  -- 기간별 취소거래처
				a.store_id,
				a.period,
				a.business_nm,
				a.business_nm2,
				a.business_nm3,
				a.amount,
				a.amount_commission,
				a.cencel_amount_commission,
				a.amount_cnt,
				a.cencel_amount,
				a.cencel_cnt,
				a.commission,
				a.commission2,
				a.commission3,
				((a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission))*10/110 as vat,
				(a.amount_commission - a.cencel_amount_commission)*10/110 as cancel_vat,
				a.vat2,
				a.vat3,
				(a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission) as settlement,
				(amount_commission - a.cencel_amount_commission) as cancel_settlement,
				a.settlement2,
				a.settlement3,
				a.bank_nm,
				a.account_num,
				a.accounter,
				a.no_cpid
			from (
				select 
						 b.store_id,
						 b.period,
						 b.business_nm,
						 b.business_nm2,
						 b.business_nm3,
						 a.amount,
						 a.amount_commission,
						 a.amount_cnt,
						 a.cencel_amount,
						 a.cencel_amount_commission,
						 a.cencel_cnt,
						 cast((a.amount * cast((b.commission / 100 ) as float)) as int) as commission,
						 cast((a.amount * cast((b.commission / 100 ) / 1.1 as float)) as int) as vat,
						 a.amount - cast((a.amount * cast((b.commission / 100 ) as float)) as int) as settlement, 
						 cast((a.amount * cast((b.commission2 / 100 ) as float)) as int) as commission2,
						 cast((a.amount * cast((b.commission2 / 100 ) / 1.1 as float)) as int) as vat2,
						 a.amount - cast((a.amount * cast((b.commission2 / 100 ) as float)) as int) as settlement2, 
						 cast((a.amount * cast((b.commission3 / 100 ) as float)) as int) as commission3,
						 cast((a.amount * cast((b.commission3 / 100 ) / 1.1 as float)) as int) as vat3,
						 a.amount - cast((a.amount * cast((b.commission3 / 100 ) as float)) as int) as settlement3, 
						 b.bank_nm,
						 b.account_num,
						 b.accounter,
						 a.no_cpid
					from (
						 select 
								sum(a.amount) amount,
								sum(a.amount * a.commission / 100) amount_commission,
								sum(amount_cnt) amount_cnt,
								sum(cencel_amount) cencel_amount,
								sum(cencel_amount * a.commission / 100) cencel_amount_commission,
								sum(cencel_cnt) cencel_cnt,
								a.store_id,
								a.no_cpid
						   from payment_data a
								inner join tb_store b
									on a.store_id = b.store_id
						  where 1 = 1
						    <if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
							and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
							</if>
						  group by a.store_id
						 )a
				   inner join store_data b
					  on a.store_id = b.store_id	
				  )a,
				  (
				  select sum(a.amount) amount_sum,						-- 금액합계, 기간별합계
						count(b.store_id) total_cnt,							-- 기간별 거래처                                
						sum(a.amount_cnt) + sum(a.cencel_cnt) as total_approval_cnt, 	-- 기간별 승인 건수
						sum(a.amount) as total_approval, 		-- 기간별 승인액
						sum(a.cencel_cnt) as total_cancel_cnt,						-- 취소 건수
						ifnull(sum(a.cencel_amount),0) as total_cancel_sum,						-- 기간별 취소금액
			  			sum(((a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission))-((a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission))*10/110) as total_settlement,	   -- 정산 공급가액
			  			sum(((a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission))*10/110) as total_vat,					-- 정산 부가세
                        sum((a.amount-a.amount_commission) - (a.cencel_amount-a.cencel_amount_commission)) as total_amount,		-- 정산 지급액
			  			sum((a.amount_commission - a.cencel_amount_commission)-(a.amount_commission - a.cencel_amount_commission)*10/110) as total_settlement_commission,	   -- 정산 공급가액
			  			sum((a.amount_commission - a.cencel_amount_commission)*10/110) as total_vat_commission,					-- 정산 부가세
                        sum(a.amount_commission - a.cencel_amount_commission) as total_amount_commission,		-- 정산 지급액
						sum(a.cancel_store_cnt) as total_cancel_store_cnt								-- 기간별 취소거래처
					from (
						select 
								sum(a.amount) amount,
								sum(a.amount * a.commission / 100) amount_commission,
								sum(amount_cnt) amount_cnt,
								sum(cencel_amount) cencel_amount,
								sum(cencel_amount * a.commission / 100) cencel_amount_commission,
								sum(cencel_cnt) cencel_cnt,
								a.store_id,
								case
									when sum(cencel_cnt)>0 then 1
									else 0
								end as cancel_store_cnt
						   from payment_data a
								inner join tb_store b
									on a.store_id = b.store_id
						  where 1 = 1
							<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
							and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
							</if>
						  group by a.store_id
						 )a
				   inner join store_data b
					  on a.store_id = b.store_id
				  )b  
		  )a   	
		  where 1=1				
   			<if test="list != null and list != ''">
        	and a.no_cpid in 
        	<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
             #{item}
            </foreach>	
            </if>				     
	</select>	
	
	<select id="selectSettlementManageDetailList" parameterType="searchSettlementVO" resultMap="settlement">
		with store_data as(
			select 
				a.period,
				a.store_id,
				c.store_id3,
				d.store_id2,
				a.high_store_id,
				c.business_nm3,
				d.business_nm2,
				a.business_nm,
				a.cpid,
				a.commission,
				c.commission3,
				d.commission2,
				e.bank_nm
			from tb_store a
			inner join tb_store_role b
				on a.store_id = b.store_id
			inner join tb_bank e
				on a.bank_code = e.bank_code
				and b.role_id = '1004'
				and a.state = 'Y'
				and a.cpid is not null
				and a.cpid != ''
			inner join (
				select 
					a.store_id as store_id3,
					a.high_store_id as high_store_id3,
					a.business_nm as business_nm3,
					a.commission as commission3
				from tb_store a
				inner join tb_store_role b
					on a.store_id = b.store_id
					and b.role_id = '1003'
					and a.state = 'Y'
			)c
				on a.high_store_id = c.store_id3
			inner join (
				select 
					a.store_id as store_id2,
					a.high_store_id as high_store_id2,
					a.business_nm as business_nm2,
					a.commission as commission2
				from tb_store a
				inner join tb_store_role b
					on a.store_id = b.store_id
					and b.role_id = '1002'
					and a.state = 'Y'
			)d
				on c.high_store_id3 = d.store_id2
		),
		payment_data as (
			-- 페이조아 승인내역
			select 
				a.authdate,
				b.created_datetime as canceldate,
				ifnull(a.amount, 0) as amount,
				a.cpid,
				'1' as cptype,
				a.orderno,
				a.username,
				a.productname,
				'1' seqno,
				case
					when a.paymenttype='3' then ts.terminal
					else ts.credit_card_k
				end commission,
				a.paymenttype,
				ts.store_id
			from tb_card_auth a
			inner join tb_store ts
				on ts.cpid = a.cpid
			left join tb_card_cancel b
				on a.daoutrx = b.daoutrx and a.cpid = b.cpid
			left join tb_pay_hold c
				on c.daoutrx = a.daoutrx and c.cpid = a.cpid
			where 
				a.resultcode = '0000'
				and c.daoutrx is null
			union
			-- 페이조아 취소내역
			select 
				b.authdate,
				date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
				ifnull(a.amount, 0) as amount,
				a.cpid,
				'1' as cptype,
				b.orderno,
				b.username,
				b.productname,
				'0' seqno,
				case
					when b.paymenttype='3' then ts.terminal
					else ts.credit_card_k
				end commission,
				b.paymenttype,
				ts.store_id
			from tb_card_cancel a
			inner join tb_store ts
				on ts.cpid = a.cpid
			inner join tb_card_auth b
				on a.cpid = b.cpid
				and a.daoutrx = b.daoutrx
			union 
			-- 케이에스넷 승인내역
			select 
				a.authdate,
				b.created_datetime as canceldate,
				ifnull(a.amount, 0) as amount,
				a.cpid,
				'2' cptype,
				a.orderno,
				a.username,
				a.productname,
				'1' seqno,
				case
					when a.paymenttype='3' then ts.terminal
					else ts.credit_card_k
				end commission,
				a.paymenttype,
				ts.store_id
			from tb_card_auth2 a
			inner join tb_store ts
				on ts.cpid = a.cpid
			left join tb_card_cancel b
				on a.daoutrx = b.daoutrx and a.cpid = b.cpid
			left join tb_pay_hold c
				on c.daoutrx = a.daoutrx and c.cpid = a.cpid
			where 
				a.resultcode = '0000'
				and c.daoutrx is null
			union
			-- 케이에스넷 취소내역
			select 
				b.authdate,
				date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
				ifnull(a.amount, 0) as amount,
				a.cpid,
				'2' as cptype,
				b.orderno,
				b.username,
				b.productname,
				'0' seqno,
				case
					when b.paymenttype='3' then ts.terminal
					else ts.credit_card_k
				end commission,
				b.paymenttype,
				ts.store_id
			from tb_card_cancel a
			inner join tb_store ts
				on ts.cpid = a.cpid
			inner join tb_card_auth2 b
				on a.cpid = b.cpid
				and a.daoutrx = b.daoutrx
			union
			-- 단말기결제 내역
			select 
				a.settdate authdate,
				b.created_datetime as canceldate,
				ifnull(a.amount, 0) as amount,
				a.cpid,
				'3' cp_type,
				'' orderno,
				'' username,
				'' productname,
				'1' seqno,
				case
					when a.paymenttype='3' then ts.terminal
					else ts.credit_card_k
				end commission,
				a.paymenttype,
				ts.store_id
			from tb_pay_notice a
			inner join tb_store ts
				on ts.cpid = a.cpid
			left join tb_card_cancel b
				on a.daoutrx = b.daoutrx and a.cpid = b.cpid
			left join tb_pay_hold c
				on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
			union
			-- 단말기결제 취소내역
			select 
				b.settdate authdate,
				date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
				ifnull(a.amount, 0) as amount,
				a.cpid,
				'3' cp_type,
				'' orderno,
				'' username,
				'' productname,
				'0' seqno,
				case
					when b.paymenttype='3' then ts.terminal
					else ts.credit_card_k
				end commission,
				b.paymenttype,
				ts.store_id
			from tb_card_cancel a
			inner join tb_store ts
				on ts.cpid = a.cpid
			inner join tb_pay_notice b
				on a.daoutrx = b.daoutrx and a.cpid = b.cpid
			left join tb_pay_hold c
				on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
		)
		select 
			a.*
		from (
			select 
				@ROWNUM:=@ROWNUM+1 AS rownum,
				a.*,
				b.d_amount,
				b.d_cancel_sum,
				b.d_total_cnt,
				b.d_approval_cnt,
				b.d_cancel_cnt
			from (
				select
					a.authdate,
					a.canceldate,
					a.cpid,
					a.cptype,
					b.period,
					DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y.%m.%d') as period_date,
					b.business_nm,
					b.business_nm2,
					b.business_nm3,
					a.amount,
					a.commission,
					cast((a.amount * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
					cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
					cast((a.amount * cast((a.commission / 100 ) as float)) as int) - cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat,
					a.amount - cast((a.amount * cast((a.commission / 100 ) as float)) as int) as settlement,
					b.store_id,
					b.bank_nm,
					a.orderno,
					a.username,
					a.productname,
					a.seqno
				from (
					select date(a.authdate) as authdate,
						date(a.canceldate) as canceldate,
						a.amount,
						a.cpid,
						a.cptype,
						a.orderno,
						a.username,
						a.productname,
						a.seqno,
						a.commission,
						a.paymenttype,
						a.store_id
					from payment_data a
				)a
				inner join store_data b
					on a.cpid = b.cpid
					<if test="period_date != null and period_date != ''">
					and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y.%m.%d') = #{period_date}
					</if>
					<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
					and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
					</if>
					<if test="cpid != null and cpid != ''">
					and a.cpid = #{cpid}     
					</if>
					<if test="store_id != null and store_id != ''">
					and b.store_id = #{store_id}     
					</if> 
					<if test="branch_store_id != null and branch_store_id != ''">
					and b.store_id3 = #{branch_store_id}     
					</if> 
					<if test="manage_store_id != null and manage_store_id != ''">
					and b.store_id2 = #{manage_store_id}     
					</if>
			)a,
			(
				select 
					FORMAT(sum(if(a.seqno = '1', a.amount, 0)), 0) as d_amount,
					FORMAT(sum(if(a.seqno = '0', a.amount, 0)), 0) as d_cancel_sum,
					count(a.cpid) as d_total_cnt,
					sum(if(a.seqno = '1', 1, 0)) as d_approval_cnt,
					sum(if(a.seqno = '0', 1, 0)) as d_cancel_cnt
				from payment_data a
				inner join store_data b
					on a.cpid = b.cpid
					<if test="period_date != null and period_date != ''">
					and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y.%m.%d') = #{period_date}
					</if>
					<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
					and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL b.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
					</if>
					<if test="cpid != null and cpid != ''">
					and a.cpid = #{cpid}     
					</if>
					<if test="store_id != null and store_id != ''">
					and b.store_id = #{store_id}     
					</if> 
					<if test="branch_store_id != null and branch_store_id != ''">
					and b.store_id3 = #{branch_store_id}     
					</if> 
					<if test="manage_store_id != null and manage_store_id != ''">
					and b.store_id2 = #{manage_store_id}     
					</if>
			)b
			where (SELECT @ROWNUM:=0)=0
		)a
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>		
	
	<select id="selectSettlementVatReportList1" parameterType="searchSettlementVO" resultMap="settlement">
	select 
		a.*
	from 
	(
		select 
			@ROWNUM:=@ROWNUM+1 AS rownum,
			a.*
		from 
		(
			select 
				max(a.business_nm) business_nm,
				a.store_id,
				max(a.tax_state)  tax_state,
				max(a.corp_regist_num) corp_regist_num,
				max(a.corp_regist_num2) corp_regist_num2,
				max(a.corp_type) corp_type,
				sum(ifnull(a.amount, 0)) amount,
				sum(ifnull(a.cancel_amount, 0)) cancel_amount,
				count(a.authdate) approve_cnt,
				count(a.created_datetime) cancel_cnt,
				sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
				max(a.commission) commission,                   
				cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
				cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
				cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
				from 
				(
				 	select 
						a.cpid
						, a.daoutrx
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, a.tax_state
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						<!-- 페이조아 승인/취소 내역 -->
						select 
							a.cpid
							, a.daoutrx 
							, ifnull(a.amount, 0) as amount
							, ifnull(b.amount, 0) as cancel_amount
							, a.authdate
							, b.created_datetime
							, a.tax_state
						from tb_card_auth a
						left join tb_card_cancel b
							on a.daoutrx = b.daoutrx 
							and a.cpid = b.cpid 
						left join tb_pay_hold c
							on c.daoutrx = a.daoutrx
							and c.cpid = a.cpid 
						where a.resultcode = '0000'
						<!-- and a.tax_state > 0 
						and c.daoutrx is NULL -->
						and c.daoutrx is null
						<!-- 케이에스 승인/취소 내역 -->
						union all
						select 
							a.cpid
							, a.daoutrx
							, ifnull(a.amount,0) as amount 
							, ifnull(b.amount,0) as cancel_amount
							, a.authdate 
							, b.created_datetime
							, a.tax_state
						from tb_card_auth2 a
						left join tb_card_cancel b
							on a.daoutrx = b.daoutrx 
							and a.cpid = b.cpid
						left join tb_pay_hold c
							on c.daoutrx = a.daoutrx 
							and c.cpid = a.cpid 
						where a.resultcode = '0000'
						<!-- 	and a.tax_state > 0
						and c.daoutrx is NULL-->
							and c.daoutrx is null
						<!-- 페이조 승인/취소 내역 -->
						union ALL 
						select 
							a.cpid
							, a.daoutrx
							, ifnull(a.amount, 0) as amount
							, ifnull(b.amount, 0) as cancel_amount 
							, a.settdate authdate
							, b.created_datetime 
							, a.tax_state
						from tb_pay_notice a
						left join tb_card_cancel b
							on a.daoutrx = b.daoutrx 
							and a.cpid = b.cpid 
						left join tb_pay_hold c
							on c.daoutrx = a.daoutrx 
							and c.cpid = a.cpid 
						<!-- where a.tax_state > 0
							and c.daoutrx is null -->
						where c.daoutrx is null
					) a 
					inner join 
					(	
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, ifnull(a.commission,0) as commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1004'
					) b
					on a.cpid = b.cpid
					where 1 = 1
				  	<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
						and DATE_FORMAT(a.authdate, '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
				  	</if>	
				  	<if test="ym != null and ym != ''">
						and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
				  	</if>	
				  	<!-- <if test="corp_regist_num != null and corp_regist_num != ''">							
				    	and b.corp_regist_num = #{corp_regist_num}
				  	</if>	 -->
			)a
			group by a.store_id
			order by a.store_id
		)a
		where (SELECT @ROWNUM:=0)=0
	)a	
 	LIMIT #{recordCountPerPage} OFFSET #{firstIndex}	
	</select>
	
	<select id="selectSettlementVatReportListCnt1" parameterType="searchSettlementVO" resultType="int">
	   select count(*) cnt
		 from (
			  select 
			  		max(a.business_nm) business_nm,
					a.store_id,
					max(a.corp_regist_num) corp_regist_num,
					max(a.corp_regist_num2) corp_regist_num2,
					max(a.corp_type) corp_type,
					sum(ifnull(a.amount, 0)) amount,
					sum(ifnull(a.cancel_amount, 0)) cancel_amount,
					count(a.authdate) approve_cnt,
					count(a.created_datetime) cancel_cnt,
					sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
					max(a.commission) commission,                   
					cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
					cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
					cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat                        
				from (
					 select 
						a.cpid
						, a.daoutrx
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						<!-- 페이조아 승인/취소 내역 -->
						select 
							a.cpid
							, a.daoutrx 
							, ifnull(a.amount, 0) as amount
							, ifnull(b.amount, 0) as cancel_amount
							, a.authdate
							, b.created_datetime
						from tb_card_auth a
						left join tb_card_cancel b
							on a.daoutrx = b.daoutrx 
							and a.cpid = b.cpid 
						left join tb_pay_hold c
							on c.daoutrx = a.daoutrx
							and c.cpid = a.cpid 
						where a.resultcode = '0000'
						<!-- 	and a.tax_state > 0
						and c.daoutrx is NULL -->
						and c.daoutrx is null
						<!-- 케이에스 승인/취소 내역-->
						union all
						select 
							a.cpid
							, a.daoutrx
							, ifnull(a.amount,0) as amount 
							, ifnull(b.amount,0) as cancel_amount
							, a.authdate 
							, b.created_datetime
						from tb_card_auth2 a
						left join tb_card_cancel b
							on a.daoutrx = b.daoutrx 
							and a.cpid = b.cpid
						left join tb_pay_hold c
							on c.daoutrx = a.daoutrx 
							and c.cpid = a.cpid 
						where a.resultcode = '0000'
						<!-- 	and a.tax_state > 0
							and c.daoutrx is NULL -->
							and c.daoutrx is null
						<!-- 케이에스 승인/취소 내역 -->
						union ALL 
						select 
							a.cpid
							, a.daoutrx
							, ifnull(a.amount, 0) as amount
							, ifnull(b.amount, 0) as cancel_amount 
							, a.settdate authdate
							, b.created_datetime 
						from tb_pay_notice a
						left join tb_card_cancel b
							on a.daoutrx = b.daoutrx 
							and a.cpid = b.cpid 
						left join tb_pay_hold c
							on c.daoutrx = a.daoutrx 
							and c.cpid = a.cpid 
						<!-- where a.tax_state > 0
							and c.daoutrx is null -->
						where c.daoutrx is null
					) a 
					inner join 
					(	
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, a.commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1004'
					) b
					on a.cpid = b.cpid
					  where 1 = 1
					  <if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
						and DATE_FORMAT(a.authdate, '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
					  </if>	
					  <if test="ym != null and ym != ''">
						and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
				  	  </if>
					 <!--  <if test="corp_regist_num != null and corp_regist_num != ''">							
					    and b.corp_regist_num = #{corp_regist_num}
					  </if>	 -->
					)a
			   group by a.store_id 
				  )a
	</select>
		
	<select id="selectSettlementVatReportSum1" parameterType="searchSettlementVO" resultMap="settlement">
	  select ifnull(sum(a.amount), 0) amount,
			 ifnull(sum(a.cancel_amount), 0) cancel_amount,
			 ifnull(sum(a.approve_cnt), 0) approve_cnt,
			 ifnull(sum(a.cancel_cnt), 0)  cancel_cnt,                
			 ifnull(sum(a.commission), 0) commission,
			 ifnull(sum(a.vat), 0) vat
		from (
			 select a.*
			   from (                
					   select @ROWNUM:=@ROWNUM+1 AS rownum,
							  a.*
						 from (                
							 select 
								max(a.business_nm) business_nm,
								a.store_id,
								max(a.corp_regist_num) corp_regist_num,
								max(a.corp_regist_num2) corp_regist_num2,
								max(a.corp_type) corp_type,
								sum(ifnull(a.amount, 0)) amount,
								sum(ifnull(a.cancel_amount, 0)) cancel_amount,
								count(a.authdate) approve_cnt,
								count(a.created_datetime) cancel_cnt,
								sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
								max(a.commission) commission,                   
								cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
								cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
								cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
								from 
								(
								 	select 
										a.cpid
										, a.daoutrx
										, a.amount
										, a.cancel_amount
										, a.authdate
										, a.created_datetime
										, b.business_nm
										, b.corp_type
										, b.store_id
										, b.corp_regist_num
										, b.corp_regist_num2
										, b.commission
									from 
									(
										<!-- 페이조아 승인/취소 내역 -->
										select 
											a.cpid
											, a.daoutrx 
											, ifnull(a.amount, 0) as amount
											, ifnull(b.amount, 0) as cancel_amount
											, a.authdate
											, b.created_datetime
										from tb_card_auth a
										left join tb_card_cancel b
											on a.daoutrx = b.daoutrx 
											and a.cpid = b.cpid 
										left join tb_pay_hold c
											on c.daoutrx = a.daoutrx
											and c.cpid = a.cpid 
										where a.resultcode = '0000'
										<!-- 	and a.tax_state > 0
										and c.daoutrx is NULL -->
										and c.daoutrx is null
										<!-- 케이에스 승인/취소 내역 -->
										union all
										select 
											a.cpid
											, a.daoutrx
											, ifnull(a.amount,0) as amount 
											, ifnull(b.amount,0) as cancel_amount
											, a.authdate 
											, b.created_datetime
										from tb_card_auth2 a
										left join tb_card_cancel b
											on a.daoutrx = b.daoutrx 
											and a.cpid = b.cpid
										left join tb_pay_hold c
											on c.daoutrx = a.daoutrx 
											and c.cpid = a.cpid 
										where a.resultcode = '0000'
										<!-- 	and a.tax_state > 0
										and c.daoutrx is NULL -->
											and c.daoutrx is null
										<!-- 단말기 승인/취소 내역 -->
										union ALL 
										select 
											a.cpid
											, a.daoutrx
											, ifnull(a.amount, 0) as amount
											, ifnull(b.amount, 0) as cancel_amount 
											, a.settdate authdate
											, b.created_datetime 
										from tb_pay_notice a
										left join tb_card_cancel b
											on a.daoutrx = b.daoutrx 
											and a.cpid = b.cpid 
										left join tb_pay_hold c
											on c.daoutrx = a.daoutrx 
											and c.cpid = a.cpid 
										<!-- where a.tax_state > 0
											and c.daoutrx is null -->
										where c.daoutrx is null
									) a 
									inner join 
									(	
										select 
											a.business_nm
											, a.corp_type
											, a.store_id
											, a.cpid
											, replace(a.corp_regist_num, '-', '') as corp_regist_num
											, a.corp_regist_num2 
											, a.commission
										from tb_store a
										inner join tb_store_role b
											on a.store_id = b.store_id 
											and b.role_id='1004'
									) b
									on a.cpid = b.cpid
							  where 1 = 1  
							  <if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
								and DATE_FORMAT(a.authdate, '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
							  </if>	
							  <if test="ym != null and ym != ''">
								and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
						  	  </if>
							  <!-- <if test="corp_regist_num != null and corp_regist_num != ''">							
							    and b.corp_regist_num = #{corp_regist_num}
							  </if>	 -->						  
							)a  
					  where (SELECT @ROWNUM:=0)=0                                         
					 )a                              
			  LIMIT #{recordCountPerPage} OFFSET #{firstIndex}	               
			 ) a
		) a
	</select>	
	
	<select id="selectSettlementVatReportList1Excel" parameterType="searchSettlementVO" resultMap="settlement">
	select 
			a.*
		from 
		(
			select 
				max(a.business_nm) business_nm,
				a.store_id,
				max(a.corp_regist_num) corp_regist_num,
				max(a.corp_regist_num2) corp_regist_num2,
				max(a.corp_type) corp_type,
				sum(ifnull(a.amount, 0)) amount,
				sum(ifnull(a.cancel_amount, 0)) cancel_amount,
				count(a.authdate) approve_cnt,
				count(a.created_datetime) cancel_cnt,
				sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
				max(a.commission) commission,                   
				cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
				cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
				cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
				from 
				(
				 	select 
						a.cpid
						, a.daoutrx
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						<!-- 페이조아 승인/취소 내역 -->
						select 
							a.cpid
							, a.daoutrx 
							, ifnull(a.amount, 0) as amount
							, ifnull(b.amount, 0) as cancel_amount
							, a.authdate
							, b.created_datetime
						from tb_card_auth a
						left join tb_card_cancel b
							on a.daoutrx = b.daoutrx 
							and a.cpid = b.cpid 
						left join tb_pay_hold c
							on c.daoutrx = a.daoutrx
							and c.cpid = a.cpid 
						where a.resultcode = '0000'
						<!-- and a.tax_state > 0 
						and c.daoutrx is NULL -->
						and c.daoutrx is null
						<!-- 케이에스 승인/취소 내역 -->
						union all
						select 
							a.cpid
							, a.daoutrx
							, ifnull(a.amount,0) as amount 
							, ifnull(b.amount,0) as cancel_amount
							, a.authdate 
							, b.created_datetime
						from tb_card_auth2 a
						left join tb_card_cancel b
							on a.daoutrx = b.daoutrx 
							and a.cpid = b.cpid
						left join tb_pay_hold c
							on c.daoutrx = a.daoutrx 
							and c.cpid = a.cpid 
						where a.resultcode = '0000'
						<!-- 	and a.tax_state > 0
						and c.daoutrx is NULL-->
							and c.daoutrx is null
						<!-- 페이조 승인/취소 내역 -->
						union ALL 
						select 
							a.cpid
							, a.daoutrx
							, ifnull(a.amount, 0) as amount
							, ifnull(b.amount, 0) as cancel_amount 
							, a.settdate authdate
							, b.created_datetime 
						from tb_pay_notice a
						left join tb_card_cancel b
							on a.daoutrx = b.daoutrx 
							and a.cpid = b.cpid 
						left join tb_pay_hold c
							on c.daoutrx = a.daoutrx 
							and c.cpid = a.cpid 
						<!-- where a.tax_state > 0
							and c.daoutrx is null -->
						where c.daoutrx is null
					) a 
					inner join 
					(	
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, ifnull(a.commission,0) as commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1004'
					) b
					on a.cpid = b.cpid
					<if test="ym != null and ym != ''">
					and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
			  	  	</if>
			)a
			group by a.store_id
			order by a.store_id
		)a
		where 1=1
	</select>	
	
	<select id="selectSettlementVatReportList2" parameterType="searchSettlementVO" resultMap="settlement">
select a.*
   from (
	   select @ROWNUM:=@ROWNUM+1 AS rownum,
		  	  a.*
		 from (
			  select 
				  	max(a.business_nm) business_nm,
					a.store_id,
					a.tax_state,
					max(a.corp_regist_num) corp_regist_num,
					max(a.corp_regist_num2) corp_regist_num2,
					max(a.corp_type) corp_type,
					sum(ifnull(a.amount, 0)) amount,
					sum(ifnull(a.cancel_amount, 0)) cancel_amount,
					count(a.authdate) approve_cnt,
					count(a.created_datetime) cancel_cnt,
					sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
					max(a.commission) commission,                   
					cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
					cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
					cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
				from 
				(
					select 	
						a.cpid 
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, a.tax_state
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.high_store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						select 
							a.cpid
							, a.daoutrx
							, a.amount
							, a.cancel_amount
							, a.authdate
							, a.tax_state
							, a.created_datetime
							, b.store_id
							, b.high_store_id
						from (
							<!-- 페이조아 승인/취소 내역 -->
							select 
								a.cpid
								, a.daoutrx 
								, ifnull(a.amount, 0) as amount
								, ifnull(b.amount, 0) as cancel_amount
								, a.authdate
								, b.created_datetime
								, a.tax_state
							from tb_card_auth a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid 
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx
								and c.cpid = a.cpid 
							where a.resultcode = '0000'
							<!-- 	and a.tax_state > 0
							and c.daoutrx is NULL -->
							and c.daoutrx is null
							<!-- 케이에스 승인/취소 내역 -->
							union all
							select 
								a.cpid
								, a.daoutrx
								, ifnull(a.amount,0) as amount 
								, ifnull(b.amount,0) as cancel_amount
								, a.authdate 
								, b.created_datetime
								, a.tax_state
							from tb_card_auth2 a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx 
								and c.cpid = a.cpid 
							where a.resultcode = '0000'
							<!-- 	and a.tax_state > 0
							-and c.daoutrx is NULL -->
							and c.daoutrx is null
							<!-- 단말기 승인/취소 내역 -->
							union ALL 
							select 
								a.cpid
								, a.daoutrx
								, ifnull(a.amount, 0) as amount
								, ifnull(b.amount, 0) as cancel_amount 
								, a.settdate authdate
								, b.created_datetime 
								, a.tax_state
							from tb_pay_notice a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid 
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx 
								and c.cpid = a.cpid 
							<!-- 	and a.tax_state > 0
							and c.daoutrx is NULL -->
							where c.daoutrx is null
						) a 
						inner join 
						(	
							select 
								a.business_nm
								, a.corp_type
								, a.store_id
								, a.high_store_id
								, a.cpid
								, replace(a.corp_regist_num, '-', '') as corp_regist_num
								, a.corp_regist_num2 
								, a.commission
							from tb_store a
							inner join tb_store_role b
								on a.store_id = b.store_id 
								and b.role_id='1004'
						) b
						on a.cpid = b.cpid
					) a
					inner join 
					(
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.high_store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, a.commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1003'
					) b
					on a.high_store_id = b.store_id 
					where 1 = 1
				  	<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
					and DATE_FORMAT(a.authdate, '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
				  	</if>
				  	<if test="ym != null and ym != ''">
						and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
				  	</if>
				  	<!-- <if test="corp_regist_num != null and corp_regist_num != ''">							
				    and b.corp_regist_num = #{corp_regist_num}
				  	</if>	 -->
				)a
			   group by a.store_id 
			   order by a.store_id
			)a
			where (SELECT @ROWNUM:=0)=0
		)a	
  LIMIT #{recordCountPerPage} OFFSET #{firstIndex}	
	</select>
	
	<select id="selectSettlementVatReportListCnt2" parameterType="searchSettlementVO" resultType="int">
	   select count(*) cnt
		 from (
			  select max(a.business_nm) business_nm,
					a.store_id,
					max(a.corp_regist_num) corp_regist_num,
					max(a.corp_regist_num2) corp_regist_num2,
					max(a.corp_type) corp_type,
					sum(ifnull(a.amount, 0)) amount,
					sum(ifnull(a.cancel_amount, 0)) cancel_amount,
					count(a.authdate) approve_cnt,
					count(a.created_datetime) cancel_cnt,
					sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
					max(a.commission) commission,                   
					cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
					cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
					cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat                        
				from (
					 select 	
						a.cpid 
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.high_store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						select 
							a.cpid
							, a.daoutrx
							, a.amount
							, a.cancel_amount
							, a.authdate
							, a.created_datetime
							, b.store_id
							, b.high_store_id
						from (
							<!-- 페이조아 승인/취소 내역 -->
							select 
								a.cpid
								, a.daoutrx 
								, ifnull(a.amount, 0) as amount
								, ifnull(b.amount, 0) as cancel_amount
								, a.authdate
								, b.created_datetime
							from tb_card_auth a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid 
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx
								and c.cpid = a.cpid 
							where a.resultcode = '0000'
							<!-- and a.tax_state > 0
							and c.daoutrx is NULL -->
							and c.daoutrx is null
							<!-- 케이에스 승인/취소 내역 -->
							union all
							select 
								a.cpid
								, a.daoutrx
								, ifnull(a.amount,0) as amount 
								, ifnull(b.amount,0) as cancel_amount
								, a.authdate 
								, b.created_datetime
							from tb_card_auth2 a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx 
								and c.cpid = a.cpid 
							where a.resultcode = '0000'
							<!-- and a.tax_state > 0
							and c.daoutrx is NULL -->
							and c.daoutrx is null
							<!-- 단말기 승인/취소 내역 -->
							union ALL 
							select 
								a.cpid
								, a.daoutrx
								, ifnull(a.amount, 0) as amount
								, ifnull(b.amount, 0) as cancel_amount 
								, a.settdate authdate
								, b.created_datetime 
							from tb_pay_notice a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid 
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx 
								and c.cpid = a.cpid 
							<!-- 	and a.tax_state > 0
							and c.daoutrx is NULL -->
							where c.daoutrx is null
						) a 
						inner join 
						(	
							select 
								a.business_nm
								, a.corp_type
								, a.store_id
								, a.high_store_id
								, a.cpid
								, replace(a.corp_regist_num, '-', '') as corp_regist_num
								, a.corp_regist_num2 
								, a.commission
							from tb_store a
							inner join tb_store_role b
								on a.store_id = b.store_id 
								and b.role_id='1004'
						) b
						on a.cpid = b.cpid
					) a
					inner join 
					(
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.high_store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, a.commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1003'
					) b
					on a.high_store_id = b.store_id 
					  where 1 = 1
					  <if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
						and DATE_FORMAT(a.authdate, '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
					  </if>	
					  <if test="ym != null and ym != ''">
						and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
				  	  </if>
					 <!--  <if test="corp_regist_num != null and corp_regist_num != ''">							
					    and b.corp_regist_num = #{corp_regist_num}
					  </if>	 -->
					 )a
			   group by a.store_id 
				  )a
	</select>
		
	<select id="selectSettlementVatReportSum2" parameterType="searchSettlementVO" resultMap="settlement">
select 
	ifnull(sum(a.amount), 0) amount,
	ifnull(sum(a.cancel_amount), 0) cancel_amount,
	ifnull(sum(a.approve_cnt),0) approve_cnt,
	ifnull(sum(a.cancel_cnt),0) cancel_cnt,
	ifnull(sum(a.commission), 0) commission,
	ifnull(sum(a.vat), 0) vat
from (
select a.*
   from (
	   select @ROWNUM:=@ROWNUM+1 AS rownum,
		  	  a.*
		 from (
			  select 
				  	max(a.business_nm) business_nm,
					a.store_id,
					max(a.corp_regist_num) corp_regist_num,
					max(a.corp_regist_num2) corp_regist_num2,
					max(a.corp_type) corp_type,
					sum(ifnull(a.amount, 0)) amount,
					sum(ifnull(a.cancel_amount, 0)) cancel_amount,
					count(a.authdate) approve_cnt,
					count(a.created_datetime) cancel_cnt,
					sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
					max(a.commission) commission,                   
					cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
					cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
					cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
				from 
				(
					select 	
						a.cpid 
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.high_store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						select 
							a.cpid
							, a.daoutrx
							, a.amount
							, a.cancel_amount
							, a.authdate
							, a.created_datetime
							, b.store_id
							, b.high_store_id
						from (
							<!-- 페이조아 승인/취소 내역 -->
							select 
								a.cpid
								, a.daoutrx 
								, ifnull(a.amount, 0) as amount
								, ifnull(b.amount, 0) as cancel_amount
								, a.authdate
								, b.created_datetime
							from tb_card_auth a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid 
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx
								and c.cpid = a.cpid 
							where a.resultcode = '0000'
							<!-- and a.tax_state > 0
							and c.daoutrx is NULL -->
							and c.daoutrx is null
							<!-- 케이에스 승인/취소 내역 -->
							union all
							select 
								a.cpid
								, a.daoutrx
								, ifnull(a.amount,0) as amount 
								, ifnull(b.amount,0) as cancel_amount
								, a.authdate 
								, b.created_datetime
							from tb_card_auth2 a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx 
								and c.cpid = a.cpid 
							where a.resultcode = '0000'
							<!-- and a.tax_state > 0
							and c.daoutrx is NULL -->
							and c.daoutrx is null
							<!-- 단말기 승인/취소 내역 -->
							union ALL 
							select 
								a.cpid
								, a.daoutrx
								, ifnull(a.amount, 0) as amount
								, ifnull(b.amount, 0) as cancel_amount 
								, a.settdate authdate
								, b.created_datetime 
							from tb_pay_notice a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid 
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx 
								and c.cpid = a.cpid 
							<!-- and a.tax_state > 0
							and c.daoutrx is NULL -->
							where c.daoutrx is null
						) a 
						inner join 
						(	
							select 
								a.business_nm
								, a.corp_type
								, a.store_id
								, a.high_store_id
								, a.cpid
								, replace(a.corp_regist_num, '-', '') as corp_regist_num
								, a.corp_regist_num2 
								, a.commission
							from tb_store a
							inner join tb_store_role b
								on a.store_id = b.store_id 
								and b.role_id='1004'
						) b
						on a.cpid = b.cpid
					) a
					inner join 
					(
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.high_store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, a.commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1003'
					) b
					on a.high_store_id = b.store_id 
					where 1 = 1
					<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
					and DATE_FORMAT(a.authdate, '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
				  	</if>	
				  	<if test="ym != null and ym != ''">
					and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
			  	  	</if>
				  	<!-- <if test="corp_regist_num != null and corp_regist_num != ''">							
				    and b.corp_regist_num = #{corp_regist_num}
				  	</if>	 -->
				)a
			   group by a.store_id 
			)a
			where (SELECT @ROWNUM:=0)=0
		)a	
  LIMIT 20 OFFSET 0
  ) a
	</select>	
	
	<select id="selectSettlementVatReportList2Excel" parameterType="searchSettlementVO" resultMap="settlement">
	select a.*
		 from (
			  select 
				  	max(a.business_nm) business_nm,
					a.store_id,
					max(a.corp_regist_num) corp_regist_num,
					max(a.corp_regist_num2) corp_regist_num2,
					max(a.corp_type) corp_type,
					sum(ifnull(a.amount, 0)) amount,
					sum(ifnull(a.cancel_amount, 0)) cancel_amount,
					count(a.authdate) approve_cnt,
					count(a.created_datetime) cancel_cnt,
					sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
					max(a.commission) commission,                   
					cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
					cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
					cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
				from 
				(
					select 	
						a.cpid 
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.high_store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						select 
							a.cpid
							, a.daoutrx
							, a.amount
							, a.cancel_amount
							, a.authdate
							, a.created_datetime
							, b.store_id
							, b.high_store_id
						from (
							<!-- 페이조아 승인/취소 내역 -->
							select 
								a.cpid
								, a.daoutrx 
								, ifnull(a.amount, 0) as amount
								, ifnull(b.amount, 0) as cancel_amount
								, a.authdate
								, b.created_datetime
							from tb_card_auth a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid 
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx
								and c.cpid = a.cpid 
							where a.resultcode = '0000'
							<!-- 	and a.tax_state > 0
							and c.daoutrx is NULL -->
							and c.daoutrx is null
							<!-- 케이에스 승인/취소 내역 -->
							union all
							select 
								a.cpid
								, a.daoutrx
								, ifnull(a.amount,0) as amount 
								, ifnull(b.amount,0) as cancel_amount
								, a.authdate 
								, b.created_datetime
							from tb_card_auth2 a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx 
								and c.cpid = a.cpid 
							where a.resultcode = '0000'
							<!-- 	and a.tax_state > 0
							-and c.daoutrx is NULL -->
							and c.daoutrx is null
							<!-- 단말기 승인/취소 내역 -->
							union ALL 
							select 
								a.cpid
								, a.daoutrx
								, ifnull(a.amount, 0) as amount
								, ifnull(b.amount, 0) as cancel_amount 
								, a.settdate authdate
								, b.created_datetime 
							from tb_pay_notice a
							left join tb_card_cancel b
								on a.daoutrx = b.daoutrx 
								and a.cpid = b.cpid 
							left join tb_pay_hold c
								on c.daoutrx = a.daoutrx 
								and c.cpid = a.cpid 
							<!-- 	and a.tax_state > 0
							and c.daoutrx is NULL -->
							where c.daoutrx is null
						) a 
						inner join 
						(	
							select 
								a.business_nm
								, a.corp_type
								, a.store_id
								, a.high_store_id
								, a.cpid
								, replace(a.corp_regist_num, '-', '') as corp_regist_num
								, a.corp_regist_num2 
								, a.commission
							from tb_store a
							inner join tb_store_role b
								on a.store_id = b.store_id 
								and b.role_id='1004'
						) b
						on a.cpid = b.cpid
					) a
					inner join 
					(
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.high_store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, a.commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1003'
					) b
					on a.high_store_id = b.store_id 
					where 1 = 1
				  	<if test="ym != null and ym != ''">
						and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
				  	</if>
				)a
			   group by a.store_id 
			   order by a.store_id
			)a
	</select>	
	
	<select id="selectSettlementVatReportList3" parameterType="searchSettlementVO" resultMap="settlement">
	select a.*
   from (
	   select @ROWNUM:=@ROWNUM+1 AS rownum,
		  	  a.*
		 from (
			  select 
			  		max(a.business_nm) business_nm,
		    		a.store_id,
		   			a.high_store_id,
		    		max(a.corp_regist_num) corp_regist_num,
		    		max(a.corp_regist_num2) corp_regist_num2,
		    		max(a.tax_state) tax_state,
		    		max(a.corp_type) corp_type,
		    		sum(ifnull(a.amount, 0)) amount,
		    		sum(ifnull(a.cancel_amount, 0)) cancel_amount,
		    		count(a.authdate) approve_cnt,
		    		count(a.created_datetime) cancel_cnt,
		    		sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
		    		max(a.commission) commission,                   
		    		cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
		    		cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
		    		cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
				from (
					 select 
						a.cpid 
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, a.tax_state
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.high_store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						select 	
							a.cpid 
							, a.amount
							, a.cancel_amount
							, a.authdate
							, a.created_datetime
							, a.tax_state
							, b.business_nm
							, b.corp_type
							, b.store_id
							, b.high_store_id
							, b.corp_regist_num
							, b.corp_regist_num2
							, b.commission
						from 
						(
							select 
								a.cpid
								, a.daoutrx
								, a.amount
								, a.cancel_amount
								, a.authdate
								, a.created_datetime
								, a.tax_state
								, b.store_id
								, b.high_store_id
							from (
								<!-- 페이조아 승인/취소 내역 -->
								select 
									a.cpid
									, a.daoutrx 
									, ifnull(a.amount, 0) as amount
									, ifnull(b.amount, 0) as cancel_amount
									, a.authdate
									, b.created_datetime
									, a.tax_state
								from tb_card_auth a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid 
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx
									and c.cpid = a.cpid 
								where a.resultcode = '0000'
								<!-- and a.tax_state > 0
								and c.daoutrx is NULL -->
								and c.daoutrx is null
								<!-- 케이에스 승인/취소 내역-->
								union all
								select 
									a.cpid
									, a.daoutrx
									, ifnull(a.amount,0) as amount 
									, ifnull(b.amount,0) as cancel_amount
									, a.authdate 
									, b.created_datetime
									, a.tax_state
								from tb_card_auth2 a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx 
									and c.cpid = a.cpid 
								where a.resultcode = '0000'
								<!-- 	and a.tax_state > 0
								and c.daoutrx is NULL -->
								and c.daoutrx is null
								<!-- 단말기 승인/취소 내역 -->
								union ALL 
								select 
									a.cpid
									, a.daoutrx
									, ifnull(a.amount, 0) as amount
									, ifnull(b.amount, 0) as cancel_amount 
									, a.settdate authdate
									, b.created_datetime 
									, a.tax_state
								from tb_pay_notice a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid 
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx 
									and c.cpid = a.cpid 
								<!-- 	where a.tax_state > 0
								and c.daoutrx is NULL -->
								where c.daoutrx is null
							) a 
							inner join 
							(	
								select 
									a.business_nm
									, a.corp_type
									, a.store_id
									, a.high_store_id
									, a.cpid
									, replace(a.corp_regist_num, '-', '') as corp_regist_num
									, a.corp_regist_num2 
									, a.commission
								from tb_store a
								inner join tb_store_role b
									on a.store_id = b.store_id 
									and b.role_id='1004'
							) b
							on a.cpid = b.cpid
						) a
						inner join 
						(
							select 
								a.business_nm
								, a.corp_type
								, a.store_id
								, a.high_store_id
								, a.cpid
								, replace(a.corp_regist_num, '-', '') as corp_regist_num
								, a.corp_regist_num2 
								, a.commission
							from tb_store a
							inner join tb_store_role b
								on a.store_id = b.store_id 
								and b.role_id='1003'
						) b
						on a.high_store_id = b.store_id 
					) a
					inner join 
					(
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.high_store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, a.commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1002'
					) b
					on a.high_store_id = b.store_id
					  where 1 = 1
					  <if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
						and DATE_FORMAT(a.authdate, '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
					  </if>
					  <if test="ym != null and ym != ''">
						and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
				  	  </if>
					 <!--  <if test="corp_regist_num != null and corp_regist_num != ''">							
					    and b.corp_regist_num = #{corp_regist_num}
					  </if>	 -->
					 )a
			   group by a.store_id 
			   order by a.store_id
				  )a
			where (SELECT @ROWNUM:=0)=0
		)a	
  LIMIT #{recordCountPerPage} OFFSET #{firstIndex}		
	</select>
	
	<select id="selectSettlementVatReportListCnt3" parameterType="searchSettlementVO" resultType="int">
	   select count(*) cnt
		 from (
			  select max(a.business_nm) business_nm,
		    		a.store_id,
		   			a.high_store_id,
		    		max(a.corp_regist_num) corp_regist_num,
		    		max(a.corp_regist_num2) corp_regist_num2,
		    		max(a.corp_type) corp_type,
		    		sum(ifnull(a.amount, 0)) amount,
		    		sum(ifnull(a.cancel_amount, 0)) cancel_amount,
		    		count(a.authdate) approve_cnt,
		    		count(a.created_datetime) cancel_cnt,
		    		sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
		    		max(a.commission) commission,                   
		    		cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
		    		cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
		    		cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
				from (
					 select 
						a.cpid 
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.high_store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						select 	
							a.cpid 
							, a.amount
							, a.cancel_amount
							, a.authdate
							, a.created_datetime
							, b.business_nm
							, b.corp_type
							, b.store_id
							, b.high_store_id
							, b.corp_regist_num
							, b.corp_regist_num2
							, b.commission
						from 
						(
							select 
								a.cpid
								, a.daoutrx
								, a.amount
								, a.cancel_amount
								, a.authdate
								, a.created_datetime
								, b.store_id
								, b.high_store_id
							from (
								<!-- 페이조아 승인/취소 내역 -->
								select 
									a.cpid
									, a.daoutrx 
									, ifnull(a.amount, 0) as amount
									, ifnull(b.amount, 0) as cancel_amount
									, a.authdate
									, b.created_datetime
								from tb_card_auth a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid 
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx
									and c.cpid = a.cpid 
								where a.resultcode = '0000'
								<!-- and a.tax_state > 0
								and c.daoutrx is NULL -->
								and c.daoutrx is null
								<!-- 케이에스 승인/취소 내역 -->
								union all
								select 
									a.cpid
									, a.daoutrx
									, ifnull(a.amount,0) as amount 
									, ifnull(b.amount,0) as cancel_amount
									, a.authdate 
									, b.created_datetime
								from tb_card_auth2 a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx 
									and c.cpid = a.cpid 
								where a.resultcode = '0000'
								<!-- and a.tax_state > 0
								and c.daoutrx is NULL -->
								and c.daoutrx is null
								<!-- 단말기 승인/취소 내역 -->
								union ALL 
								select 
									a.cpid
									, a.daoutrx
									, ifnull(a.amount, 0) as amount
									, ifnull(b.amount, 0) as cancel_amount 
									, a.settdate authdate
									, b.created_datetime 
								from tb_pay_notice a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid 
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx 
									and c.cpid = a.cpid 
								<!-- where a.tax_state > 0
								 	and c.daoutrx is NULL -->
								where c.daoutrx is null
							) a 
							inner join 
							(	
								select 
									a.business_nm
									, a.corp_type
									, a.store_id
									, a.high_store_id
									, a.cpid
									, replace(a.corp_regist_num, '-', '') as corp_regist_num
									, a.corp_regist_num2 
									, a.commission
								from tb_store a
								inner join tb_store_role b
									on a.store_id = b.store_id 
									and b.role_id='1004'
							) b
							on a.cpid = b.cpid
						) a
						inner join 
						(
							select 
								a.business_nm
								, a.corp_type
								, a.store_id
								, a.high_store_id
								, a.cpid
								, replace(a.corp_regist_num, '-', '') as corp_regist_num
								, a.corp_regist_num2 
								, a.commission
							from tb_store a
							inner join tb_store_role b
								on a.store_id = b.store_id 
								and b.role_id='1003'
						) b
						on a.high_store_id = b.store_id 
					) a
					inner join 
					(
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.high_store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, a.commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1002'
					) b
					on a.high_store_id = b.store_id
					  where 1 = 1
					  <if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
						and DATE_FORMAT(a.authdate, '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
					  </if>	
					  <if test="ym != null and ym != ''">
						and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
				  	  </if>
					  <!-- <if test="corp_regist_num != null and corp_regist_num != ''">							
					    and b.corp_regist_num = #{corp_regist_num}
					  </if>	 -->
					 )a
			   group by a.store_id 
				  )a
	</select>
		
	<select id="selectSettlementVatReportSum3" parameterType="searchSettlementVO" resultMap="settlement">
  select ifnull(sum(a.amount), 0) amount,
	ifnull(sum(a.cancel_amount), 0) cancel_amount,
	ifnull(sum(a.approve_cnt),0) approve_cnt,
	ifnull(sum(a.cancel_cnt),0) cancel_cnt,
	ifnull(sum(a.commission), 0) commission,
	ifnull(sum(a.vat), 0) vat
	from (
		 select a.*
		   from (                
				   select @ROWNUM:=@ROWNUM+1 AS rownum,
						  a.*
					 from (                
						 select 
			  		max(a.business_nm) business_nm,
		    		a.store_id,
		   			a.high_store_id,
		    		max(a.corp_regist_num) corp_regist_num,
		    		max(a.corp_regist_num2) corp_regist_num2,
		    		max(a.corp_type) corp_type,
		    		sum(ifnull(a.amount, 0)) amount,
		    		sum(ifnull(a.cancel_amount, 0)) cancel_amount,
		    		count(a.authdate) approve_cnt,
		    		count(a.created_datetime) cancel_cnt,
		    		sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
		    		max(a.commission) commission,                   
		    		cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
		    		cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
		    		cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
				from (
					 select 
						a.cpid 
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.high_store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						select 	
							a.cpid 
							, a.amount
							, a.cancel_amount
							, a.authdate
							, a.created_datetime
							, b.business_nm
							, b.corp_type
							, b.store_id
							, b.high_store_id
							, b.corp_regist_num
							, b.corp_regist_num2
							, b.commission
						from 
						(
							select 
								a.cpid
								, a.daoutrx
								, a.amount
								, a.cancel_amount
								, a.authdate
								, a.created_datetime
								, b.store_id
								, b.high_store_id
							from (
								<!-- 페이조아 승인/취소 내역 -->
								select 
									a.cpid
									, a.daoutrx 
									, ifnull(a.amount, 0) as amount
									, ifnull(b.amount, 0) as cancel_amount
									, a.authdate
									, b.created_datetime
								from tb_card_auth a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid 
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx
									and c.cpid = a.cpid 
								where a.resultcode = '0000' 
								<!--  	and a.tax_state > 0
								and c.daoutrx is NULL -->
								and c.daoutrx is null
								<!-- 케이에스 승인/취소 내역 -->
								union all
								select 
									a.cpid
									, a.daoutrx
									, ifnull(a.amount,0) as amount 
									, ifnull(b.amount,0) as cancel_amount
									, a.authdate 
									, b.created_datetime
								from tb_card_auth2 a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx 
									and c.cpid = a.cpid 
								where a.resultcode = '0000'
								<!-- 	and a.tax_state > 0
								and c.daoutrx is NULL -->
								and c.daoutrx is null
								<!-- 단말기 승인/취소 내역 -->
								union ALL 
								select 
									a.cpid
									, a.daoutrx
									, ifnull(a.amount, 0) as amount
									, ifnull(b.amount, 0) as cancel_amount 
									, a.settdate authdate
									, b.created_datetime 
								from tb_pay_notice a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid 
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx 
									and c.cpid = a.cpid 
								<!-- where a.tax_state > 0
								and c.daoutrx is NULL -->
								where c.daoutrx is null
							) a 
							inner join 
							(	
								select 
									a.business_nm
									, a.corp_type
									, a.store_id
									, a.high_store_id
									, a.cpid
									, replace(a.corp_regist_num, '-', '') as corp_regist_num
									, a.corp_regist_num2 
									, a.commission
								from tb_store a
								inner join tb_store_role b
									on a.store_id = b.store_id 
									and b.role_id='1004'
							) b
							on a.cpid = b.cpid
						) a
						inner join 
						(
							select 
								a.business_nm
								, a.corp_type
								, a.store_id
								, a.high_store_id
								, a.cpid
								, replace(a.corp_regist_num, '-', '') as corp_regist_num
								, a.corp_regist_num2 
								, a.commission
							from tb_store a
							inner join tb_store_role b
								on a.store_id = b.store_id 
								and b.role_id='1003'
						) b
						on a.high_store_id = b.store_id 
					) a
					inner join 
					(
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.high_store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, a.commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1002'
					) b
					on a.high_store_id = b.store_id
					  where 1 = 1
					  <if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
						and DATE_FORMAT(a.authdate, '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
					  </if>
					  <if test="ym != null and ym != ''">
						and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
				  	  </if>
					 <!--  <if test="corp_regist_num != null and corp_regist_num != ''">							
					    and b.corp_regist_num = #{corp_regist_num}
					  </if>	 -->
					 )a
			   		group by a.store_id 
				  )a                              
		  LIMIT #{recordCountPerPage} OFFSET #{firstIndex}	                             
		 )a 
	) a       
	</select>
	
	<select id="selectSettlementVatReportList3Excel" parameterType="searchSettlementVO" resultMap="settlement">
		select a.*
		 from (
			  select 
			  		max(a.business_nm) business_nm,
		    		a.store_id,
		   			a.high_store_id,
		    		max(a.corp_regist_num) corp_regist_num,
		    		max(a.corp_regist_num2) corp_regist_num2,
		    		max(a.corp_type) corp_type,
		    		sum(ifnull(a.amount, 0)) amount,
		    		sum(ifnull(a.cancel_amount, 0)) cancel_amount,
		    		count(a.authdate) approve_cnt,
		    		count(a.created_datetime) cancel_cnt,
		    		sum(ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) amount_sum,                    
		    		max(a.commission) commission,                   
		    		cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
		    		cast(sum(ifnull(a.amount, 0) * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
		    		cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float)) as int) - cast(sum((ifnull(a.amount, 0) - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat
				from (
					 select 
						a.cpid 
						, a.amount
						, a.cancel_amount
						, a.authdate
						, a.created_datetime
						, b.business_nm
						, b.corp_type
						, b.store_id
						, b.high_store_id
						, b.corp_regist_num
						, b.corp_regist_num2
						, b.commission
					from 
					(
						select 	
							a.cpid 
							, a.amount
							, a.cancel_amount
							, a.authdate
							, a.created_datetime
							, b.business_nm
							, b.corp_type
							, b.store_id
							, b.high_store_id
							, b.corp_regist_num
							, b.corp_regist_num2
							, b.commission
						from 
						(
							select 
								a.cpid
								, a.daoutrx
								, a.amount
								, a.cancel_amount
								, a.authdate
								, a.created_datetime
								, b.store_id
								, b.high_store_id
							from (
								<!-- 페이조아 승인/취소 내역 -->
								select 
									a.cpid
									, a.daoutrx 
									, ifnull(a.amount, 0) as amount
									, ifnull(b.amount, 0) as cancel_amount
									, a.authdate
									, b.created_datetime
								from tb_card_auth a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid 
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx
									and c.cpid = a.cpid 
								where a.resultcode = '0000'
								<!-- and a.tax_state > 0
								and c.daoutrx is NULL -->
								and c.daoutrx is null
								<!-- 케이에스 승인/취소 내역-->
								union all
								select 
									a.cpid
									, a.daoutrx
									, ifnull(a.amount,0) as amount 
									, ifnull(b.amount,0) as cancel_amount
									, a.authdate 
									, b.created_datetime
								from tb_card_auth2 a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx 
									and c.cpid = a.cpid 
								where a.resultcode = '0000'
								<!-- 	and a.tax_state > 0
								and c.daoutrx is NULL -->
								and c.daoutrx is null
								<!-- 단말기 승인/취소 내역 -->
								union ALL 
								select 
									a.cpid
									, a.daoutrx
									, ifnull(a.amount, 0) as amount
									, ifnull(b.amount, 0) as cancel_amount 
									, a.settdate authdate
									, b.created_datetime 
								from tb_pay_notice a
								left join tb_card_cancel b
									on a.daoutrx = b.daoutrx 
									and a.cpid = b.cpid 
								left join tb_pay_hold c
									on c.daoutrx = a.daoutrx 
									and c.cpid = a.cpid 
								<!-- 	where a.tax_state > 0
								and c.daoutrx is NULL -->
								where c.daoutrx is null
							) a 
							inner join 
							(	
								select 
									a.business_nm
									, a.corp_type
									, a.store_id
									, a.high_store_id
									, a.cpid
									, replace(a.corp_regist_num, '-', '') as corp_regist_num
									, a.corp_regist_num2 
									, a.commission
								from tb_store a
								inner join tb_store_role b
									on a.store_id = b.store_id 
									and b.role_id='1004'
							) b
							on a.cpid = b.cpid
						) a
						inner join 
						(
							select 
								a.business_nm
								, a.corp_type
								, a.store_id
								, a.high_store_id
								, a.cpid
								, replace(a.corp_regist_num, '-', '') as corp_regist_num
								, a.corp_regist_num2 
								, a.commission
							from tb_store a
							inner join tb_store_role b
								on a.store_id = b.store_id 
								and b.role_id='1003'
						) b
						on a.high_store_id = b.store_id 
					) a
					inner join 
					(
						select 
							a.business_nm
							, a.corp_type
							, a.store_id
							, a.high_store_id
							, a.cpid
							, replace(a.corp_regist_num, '-', '') as corp_regist_num
							, a.corp_regist_num2 
							, a.commission
						from tb_store a
						inner join tb_store_role b
							on a.store_id = b.store_id 
							and b.role_id='1002'
					) b
					on a.high_store_id = b.store_id
					  where 1 = 1
					  <if test="ym != null and ym != ''">
						and DATE_FORMAT(a.authdate, '%Y%m') = #{ym}
				  	  </if>
					 )a
			   group by a.store_id 
			   order by a.store_id
				  )a
	</select>	
	
	<select id="selectSettlementCardAllList" parameterType="searchSettlementVO" resultMap="settlement">
		with store_data as (
			select a.period,
				a.store_id,
				a.high_store_id,
				a.terminal_id,
				a.imei,
				c.business_nm3,
				d.business_nm2,
				a.business_nm,
				a.cpid,
				a.commission,
				c.store_id3,
				c.commission3,
				d.store_id2,
				d.commission2,
				a.bank_code,
				(select bank_nm from tb_bank tb where bank_code=a.bank_code) bank_nm,
				a.state, 
				a.settlement_type,
				a.account_num,
				a.accounter
			from tb_store a
			inner join tb_store_role b 
				on a.store_id = b.store_id
				and b.role_id = '1004'
				and a.state = 'Y'
				and a.cpid is not null
				and a.cpid != ''
				<if test="high_store_id2 != null and high_store_id2 != ''">
				and a.high_store_id = #{high_store_id2}
				</if>
				<if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
				and a.store_id = #{roleStore3}
				</if>
			inner join (
				select 
					a.store_id as store_id3,
					a.high_store_id as high_store_id3,
					a.business_nm as business_nm3,
					a.commission as commission3 
				from tb_store a
				inner join tb_store_role b 
					on a.store_id = b.store_id
					and b.role_id = '1003'
					and a.state = 'Y'
					<if test="high_store_id != null and high_store_id != ''">
					and a.high_store_id = #{high_store_id}
					</if>
					<if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
					and a.store_id = #{roleStore2}
					</if>
			)c
				on a.high_store_id = c.store_id3
			inner join (
				select 
					a.store_id as store_id2,
					a.high_store_id as high_store_id2,
					a.business_nm as business_nm2,
					a.commission as commission2
				from tb_store a
				inner join tb_store_role b 
					on a.store_id = b.store_id
					and b.role_id = '1002'
					and a.state = 'Y'
					<if test="roleStore != null and roleStore != ''">
					and a.store_id = #{roleStore}
					</if>
			)d
			on c.high_store_id3 = d.store_id2 
		),
		payment_data as (
			-- 페이조아 승인내역
			select 
				cast((a.amount * cast((a.commission / 100 ) as float)) as int) as franchisee_commission,
				cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as commission_cost,
				cast((a.amount * cast((a.commission / 100 ) as float)) as int) - cast((a.amount * cast((a.commission / 100 ) / 1.1 as float)) as int) as vat,
				a.amount - cast((a.amount * cast((a.commission / 100 ) as float)) as int) as settlement,
				a.amount,
				ifnull(a.cancelamount,0) cancel_amount,
				a.commission,
				a.cp_type,
				a.seqno,
				a.daoutrx,
				a.orderno, 
				a.username, 
				a.productname,
				a.tax_state,
				a.quota,
				a.cardno,
				a.cardcode,
				a.no,
				a.authdate,
				a.canceldate,
				a.paymenttype,
				b.store_id,
				b.high_store_id,
				b.business_nm,
				b.store_id3, 
				b.business_nm3, 
				b.store_id2, 
				b.business_nm2, 
				b.terminal_id,
				b.period,
				b.bank_code, 
				b.bank_nm, 
				b.state, 
				b.settlement_type,
				b.cpid,
				b.imei,
				a.no_cpid
			from (
				select 
					'1' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					(select amount from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as cancelamount,
					a.daoutrx,
					a.orderno,
					a.username,
					a.productname,
					a.tax_state,
					a.quota,
					a.cardno,
					a.cardcode,
					a.authdate,
					(select created_datetime from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as canceldate,
					ts.credit_card commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no,
					concat(a.no, '_' ,a.cpid) no_cpid
				from tb_card_auth a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 페이조아 취소내역
				select 
					'1' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(b.amount, 0) as amount,
					ifnull(a.amount, 0) as cancelamount,
					a.daoutrx,
					b.orderno,
					b.username,
					b.productname,
					b.tax_state,
					b.quota,
					b.cardno,
					b.cardcode,
					b.authdate,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
					ts.credit_card commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no,
					concat(b.no, '_' ,b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union 
				-- 케이에스넷 승인내역
				select 
					'2' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					(select amount from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as cancelamount,
					a.daoutrx,
					a.orderno,
					a.username,
					a.productname,
					a.tax_state,
					a.quota,
					a.cardno,
					a.isscd cardcode,
					a.authdate,
					(select created_datetime from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as canceldate,
					ts.credit_card commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no,
					concat(a.no, '_' ,a.cpid) no_cpid
				from tb_card_auth2 a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid
				where 
					a.resultcode = '0000'
					and c.daoutrx is null
				union
				-- 케이에스넷 취소내역
				select 
					'2' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(b.amount, 0) as amount,
					ifnull(a.amount, 0) as cancelamount,
					a.daoutrx,
					b.orderno,
					b.username,
					b.productname,
					b.tax_state,
					b.quota,
					b.cardno,
					b.isscd cardcode,
					b.authdate,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
					ts.credit_card commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no,
					concat(b.no, '_' ,b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_card_auth2 b
					on a.cpid = b.cpid
					and a.daoutrx = b.daoutrx
				union 
				-- 단말기결제 내역
				select 
					'1' as cp_type,	
					'1' seqno,
					a.cpid,
					ifnull(a.amount, 0) as amount,
					(select amount from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as cancelamount,
					a.daoutrx,
					'' orderno,
					'' username,
					'' productname,
					a.tax_state,
					'' quota,
					a.cardno,
					a.cardcode,
					a.settdate authdate,
					(select created_datetime from tb_card_cancel where daoutrx = a.daoutrx and cpid=a.cpid limit 1) as canceldate,
					ts.credit_card commission,
					a.paymenttype,
					ts.store_id,
					ts.period,
					a.no,
					concat(a.no, '_' ,a.cpid) no_cpid
				from tb_pay_notice a
				inner join tb_store ts
					on ts.cpid = a.cpid
				left join tb_card_cancel b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
				union
				-- 단말기결제 취소내역
				select 
					'1' as cp_type,	
					'0' seqno,
					a.cpid,
					ifnull(b.amount, 0) as amount,
					ifnull(a.amount, 0) as cancelamount,
					a.daoutrx,
					'' orderno,
					'' username,
					'' productname,
					a.tax_state,
					'' quota,
					b.cardno,
					b.cardcode,
					b.settdate authdate,
					date_format(a.created_datetime, '%Y%m%d%H%i%s')  as canceldate,
					ts.credit_card commission,
					b.paymenttype,
					ts.store_id,
					ts.period,
					b.no,
					concat(b.no, '_' ,b.cpid) no_cpid
				from tb_card_cancel a
				inner join tb_store ts
					on ts.cpid = a.cpid
				inner join tb_pay_notice b
					on a.daoutrx = b.daoutrx and a.cpid = b.cpid
				left join tb_pay_hold c
					on c.daoutrx = a.daoutrx and c.cpid = a.cpid and c.daoutrx is null
			)a
			inner join store_data b 
				on a.store_id = b.store_id
		)
		select
			row_number() over(
				order by a.authdate desc, a.seqno asc, case when #{order_no} = '1' then (	
				case #{order_id} when 'cp_type' then a.cp_type 
							    when 'store_id' then a.store_id 
							    when 'cpid' then a.cpid 
							    when 'terminal_id' then a.terminal_id 
                                when 'period' then a.period 
                                when 'bank_nm' then a.bank_nm 
                                when 'orderno' then a.orderno 
                                when 'username' then a.username 
                                when 'productname' then a.productname 
                                when 'amount' then a.amount
                                when 'commission' then a.commission
                                when 'franchisee_commission' then a.franchisee_commission
                                when 'commission_cost' then a.commission_cost
                                when 'vat' then a.vat
                                when 'settlement' then a.settlement
                                when 'business_nm3' then a.business_nm3
                                when 'business_nm2' then a.business_nm2
                                when 'business_nm' then a.business_nm
                                when 'state' then a.state
                                end       
				)END ASC,
			case when #{order_no} = '2' then (	
				case #{order_id} when 'cp_type' then a.cp_type 
							    when 'store_id' then a.store_id 
							    when 'cpid' then a.cpid 
							    when 'terminal_id' then a.terminal_id 
                                when 'period' then a.period 
                                when 'bank_nm' then a.bank_nm 
                                when 'orderno' then a.orderno 
                                when 'username' then a.username 
                                when 'productname' then a.productname 
                                when 'amount' then a.amount 
                                when 'commission' then a.commission
                                when 'franchisee_commission' then a.franchisee_commission
                                when 'commission_cost' then a.commission_cost
                                when 'vat' then a.vat
                                when 'settlement' then a.settlement
                                when 'business_nm3' then a.business_nm3
                                when 'business_nm3' then a.business_nm3
                                when 'business_nm' then a.business_nm
                                when 'state' then a.state
						    end 
				)END DESC	
			) as rownum,
			a.* 
		from payment_data a
		where 1=1
			<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
			and DATE_FORMAT(DATE_ADD(a.authdate, INTERVAL a.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
			</if>
			and IFNULL(a.paymenttype, '') = '4'
			<choose>
				<when test="amount1 != null and amount1 != '' and amount2 != null and amount2 != ''">
				and	a.amount <![CDATA[>=]]> #{amount1}
				and a.amount <![CDATA[<=]]> #{amount2}
				</when>
				<when test="amount1 != null and amount1 != ''">
				and	a.amount <![CDATA[>=]]> #{amount1}
				</when>
				<when test="amount2 != null and amount2 != ''">
				and a.amount <![CDATA[<=]]> #{amount2}
				</when>
			</choose>
			<if test="cardcode != null and cardcode != ''">
				and a.cardcode = #{cardcode}
			</if>
			<if test="cardno != null and cardno != ''">
				and	a.cardno like concat('%' , #{cardno} , '%')
			</if>
			<if test="quota != null and quota != ''">
				and a.quota = #{quota}
			</if>
			<if test="username != null and username != ''">
				and a.username like concat('%', #{username}, '%')
			</if>
			<if test="orderno != null and orderno != ''">
				and a.orderno like concat('%', #{orderno}, '%')
			</if>
			<if test="search_id != null and search_id != '' and search_nm != null and search_nm != ''">
			<choose>
				<when test="search_id == 'store_id'">
				and	a.store_id like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'business_nm'">
				and	a.business_nm like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'cpid'">
				and	a.cpid like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'terminal_id'">
				and	a.terminalid like concat('%' , #{search_nm} , '%')
				</when>
				<when test="search_id == 'imei'">
				and	a.imei like concat('%' , #{search_nm} , '%')
				</when>
			</choose>
			</if>
			<if test="commission != null and commission != ''">
				and a.commission = #{commission}
			</if>
			<if test="cp_type != null and cp_type != ''">
				and a.cp_type = #{cp_type}
			</if>
			<if test="seqno != null and seqno != ''">
				and a.seqno = #{seqno}
			</if>	
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>


	<select id="selectSettlementCardAllTotalInfo" parameterType="searchSettlementVO" resultMap="settlement">
		select 
			count(a.cpid) total_cnt
			, count(a.authdate) + count(a.created_datetime) total_approval_cnt
			, sum(a.amount) + sum(ifnull(a.cancel_amount, 0)) total_approval
			, count(a.created_datetime) total_cancel_cnt
			, sum(ifnull(a.cancel_amount, 0)) total_cancel_sum
			, sum(a.amount) total_amount
			, sum(cast((a.amount * cast((a.commission / 100 ) as float)) as int) - cast(a.amount * cast((a.commission / 100 ) / 1.1 as float) as int)) as total_vat
			, sum(a.amount - cast((a.amount * cast((a.commission / 100 ) as float)) as int)) as total_settlement
			, (sum(a.amount) - sum(ifnull(a.cancel_amount, 0))) - sum(cast((a.amount - ifnull(a.cancel_amount, 0)) * cast((a.commission / 100 ) as float) as int)) as total_settlement_sum
		from 
			(
			select 
				a.cpid
				, a.commission
				, e.authdate
				, e.created_datetime
				, e.amount
				, e.cancel_amount
			from tb_store a
			inner join tb_store_role b
				on a.store_id = b.store_id
				and b.role_id = '1004'
				and a.state = 'Y'
				and a.cpid is not null
				and a.cpid != ''
				<if test="high_store_id2 != null and high_store_id2 != ''">
				and a.high_store_id = #{high_store_id2}
				</if>
				<if test="roleStore3 != null and roleStore3 != '' and roleStore3 != '선택'">
				and a.store_id = #{roleStore3}
				</if>
			inner join 
				(
				select 
					a.store_id as store_id3,
					a.high_store_id as high_store_id3,
					a.business_nm as business_nm3,
					a.commission as commission3,
					a.bank_code
				from tb_store a
				inner join tb_store_role b
					on a.store_id = b.store_id
					and b.role_id = '1003'
					and a.state = 'Y'
					<if test="high_store_id != null and high_store_id != ''">
					and a.high_store_id = #{high_store_id}
					</if>
					<if test="roleStore2 != null and roleStore2 != '' and roleStore2 != '선택'">
					and a.store_id = #{roleStore2}
					</if>
				)c
				on a.high_store_id = c.store_id3
			inner join 
				(
				select 
					a.store_id as store_id2,
					a.high_store_id as high_store_id2,
					a.business_nm as business_nm2,
					a.commission as commission2
				from tb_store a
				inner join tb_store_role b
					on a.store_id = b.store_id
					and b.role_id = '1002'
					and a.state = 'Y'
					<if test="roleStore != null and roleStore != ''">
					and a.store_id = #{roleStore}
					</if>
				)d
				on c.high_store_id3 = d.store_id2
			inner join 
				(
				select 
					a.authdate
					, a.amount
					, a.cpid
					, '1' cp_type
					, a.daoutrx
					, b.amount as cancel_amount
					, b.created_datetime
					, a.paymenttype
				from tb_card_auth a
				left join tb_card_cancel b
					on b.daoutrx = a.daoutrx
					and b.cpid = a.cpid
				where a.resultcode = '0000'
				union
				select 
					a.authdate
					, a.amount
					, a.cpid
					, '2' cp_type
					, a.daoutrx
					, b.amount as cancel_amount
					, b.created_datetime
					, a.paymenttype
				from tb_card_auth2 a
				left join tb_card_cancel b
					on b.daoutrx = a.daoutrx
					and b.cpid = a.cpid
				where a.resultcode = '0000'
				union
					select 
						a.settdate authdate
						, a.amount
						, a.cpid
						, '1' cp_type
						, a.daoutrx
						, b.amount as cancel_amount
						, b.created_datetime
						, a.paymenttype
					from tb_pay_notice a
					left join tb_card_cancel b
						on b.daoutrx = a.daoutrx
						and b.cpid = a.cpid
				)e 
				on a.cpid = e.cpid
				<if test="start_datetime != null and start_datetime != '' and end_datetime != null and end_datetime != ''">
				and (
					DATE_FORMAT(e.created_datetime, '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
					or
					DATE_FORMAT(DATE_ADD(e.authdate, INTERVAL a.period DAY), '%Y-%m-%d') BETWEEN #{start_datetime} AND #{end_datetime}
				)
				</if>
				<if test="cardcode != null and cardcode != ''">
				and e.cardcode = #{cardcode}
				</if>
				<if test="cardno != null and cardno != ''">
				and e.cardno like concat('%' , #{cardno} , '%')
				</if>
				<if test="quota != null and quota != ''">
				and e.quota = #{quota}
				</if>
				<if test="username != null and username != ''">
				and e.username like concat('%', #{username}, '%')
				</if>
				<if test="orderno != null and orderno != ''">
				and e.orderno like concat('%', #{orderno}, '%')
				</if>
				<choose>
					<when test="search_id == 'store_id'">
						and	a.store_id like concat('%' , #{search_nm} , '%')
					</when>						        
					<when test="search_id == 'business_nm'">
						and	a.business_nm like concat('%' , #{search_nm} , '%')
					</when>
					<when test="search_id == 'cpid'">
						and	a.cpid like concat('%' , #{search_nm} , '%')
					</when>
					<when test="search_id == 'terminal_id'">
						and	a.terminal_id like concat('%' , #{search_nm} , '%')
					</when>
					<when test="search_id == 'imei'">
						and	a.imei like concat('%' , #{search_nm} , '%')
					</when>
				</choose>		
				<if test="state != null and state != ''">
				and a.state = #{state}
				</if>	  
				<if test="commission != null and commission != ''">
				and a.commission = #{commission} 
				</if>  				
				<if test="tax_state != null and tax_state != ''">
					<choose>
						<when test='tax_state == "N"'>
							and	e.tax_state not in ('0','1')
						</when>						        
						<when test='tax_state == "Y"'>
							and	e.tax_state > 0
						</when>
					</choose>				  	    
				</if>	
				<if test="settlement_type != null and settlement_type != ''">
				and a.settlement_type = #{settlement_type}
				</if>										    																										
				<if test="period != null and period != ''">
				and a.period = #{period}
				</if>		
				<if test="cp_type != null and cp_type != ''">
				and e.cp_type = #{cp_type}
				</if>
				<if test="seqno != null and seqno != ''">
				and IF(ISNULL(e.created_datetime), '1', '0') = #{seqno}
				</if>
				and IFNULL(e.paymenttype, '') = '4'
			)a
	</select>
</mapper>